import pymongo
import disnake
import json
import asyncio
import datetime
from disnake.ext import commands
from disnake.utils import get
from disnake.enums import ButtonStyle, TextInputStyle

cluster = pymongo.MongoClient(f"mongodb://127.0.0.1/myFirstDatabase?retryWrites=true&w=majority")

files = cluster.sweetness.files

roleasd = {}
roombutton = {}
idmessage = {}
roomshop = {}
currentRoomMembersPage = {}

min = 60
hour = 60 * 60
day = 60 * 60 * 24

def hex_to_rgb(value):
    value = value.lstrip('#')
    RGB = list(tuple(int(value[i:i + len(value) // 3], 16) for i in range(0, len(value), len(value) // 3)))
    return (RGB[0]<<16) + (RGB[1]<<8) + RGB[2]

class RoomShop(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '1', custom_id = '1room', emoji = '<:1_:1091732820768075860>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '2', custom_id = '2room', emoji = '<:2_:1091732822449987654>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '3', custom_id = '3room', emoji = '<:3_:1091732824823959583>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '4', custom_id = '4room', emoji = '<:4_:1091732828028411944>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í—ã—Ö–æ–¥', custom_id = 'exit_profile', emoji = '<:cancel:1111701613942415380>', row = 1))

class RoomMembers(disnake.ui.View):

    def __init__(self, author: int):
        super().__init__()

        if not str(author) in currentRoomMembersPage or currentRoomMembersPage[str(author)] == 0:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_first_page', emoji = '<:back:1008774480778252539>', disabled = True))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_prev_page', emoji = '<:zxc5:1009168367342587915>', disabled = True))
        else:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_first_page', emoji = '<:back:1008774480778252539>'))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_prev_page', emoji = '<:zxc5:1009168367342587915>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, custom_id = 'exit_profile', emoji = '<:delete:1135560294190563349>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_right_page', emoji = '<:zxc4:1009168369112600728>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_members_last_page', emoji = '<:zxc7:1009168365627125861>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))

class VidatDostyp(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–° —Ä–æ–ª—å—é', custom_id = 'vidat_1', emoji = '<:plus:1111704771288645642>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ë–µ–∑ —Ä–æ–ª–∏', custom_id = 'vidat_2', emoji = '<:minus:1092011714557521990>'))

class RoomYesDelete(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'room_delete_yes', emoji = '<:yes1:1092007373733900348>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))

class RoomYesNo(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'yes_room', emoji = '<:yes1:1092007373733900348>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))

class RoomYesNo1(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'yes_room1', emoji = '<:yes1:1092007373733900348>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))

class RoomYesOrNo(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'yesroomshop', emoji = '<:yes1:1092007373733900348>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))

class TopListRoomsDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
            custom_id = 'top_rooms',
            options = [
                disnake.SelectOption(label="–ë–∞–ª–∞–Ω—Å", value = 'leaderboard_balance_rooms', description="–¢–æ–ø –ø–æ –±–∞–ª–∞–Ω—Å—É", emoji = '<:balancetop1:1066435313389547580>'),
                disnake.SelectOption(label="–í–æ–π—Å", value = 'leaderboard_voice_rooms',description="–¢–æ–ø –ø–æ –≤–æ–π—Å—É", emoji = '<:time:1064457661480980540>'),
            ],
        )

class TopListRooms(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(TopListRoomsDropdown())
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'back_room', emoji = '<:menu11:1111709626438783036>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í—ã—Ö–æ–¥', custom_id = 'exit_profile', emoji = '<:cancel:1111701613942415380>'))

class TopListRoomsView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(TopListRoomsDropdown())
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è', custom_id = 'top_voice_rooms'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ó–∞ –Ω–µ–¥–µ–ª—é', custom_id = 'top_voice_rooms_week', emoji = 'üìÖ'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'back_room', emoji = '<:menu11:1111709626438783036>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í—ã—Ö–æ–¥', custom_id = 'exit_profile', emoji = '<:cancel:1111701613942415380>'))

class RoomManageBack(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', custom_id = 'back_room', emoji = '<:back1:1111712230363373700>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ú–µ–Ω—é', custom_id = 'menu_room_manage', emoji = '<:menu11:1111709626438783036>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í—ã—Ö–æ–¥', custom_id = 'room_manage_exit_3', emoji = '<:cancel:1111701613942415380>'))
    

class RoomDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            options = [
                disnake.SelectOption(label='–ú–∞–≥–∞–∑–∏–Ω', value = 'room_shop', emoji = '<:shop_1:1111689899452674129>'),
                disnake.SelectOption(label='–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–Ω–∞—Ç—ã', value = 'room_members', emoji = '<:staff:1111701618346434581>'),
                disnake.SelectOption(label='–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value = 'room_info', emoji = '<:information1:1111712238886191154>'),
                disnake.SelectOption(label='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', value = 'room_pay', emoji = '<:plus:1111704771288645642>'),
                disnake.SelectOption(label='–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø', value = 'room_give', emoji = '<:privates4:1109823489508122666>'),
                disnake.SelectOption(label='–í—ã–≥–Ω–∞—Ç—å –∏–∑ –∫–æ–º–Ω–∞—Ç—ã', value = 'room_del', emoji = '<:privates3:1109823486907658330>'),
                disnake.SelectOption(label='–í—ã–¥–∞—Ç—å —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞', value = 'room_owner', emoji = '<:plus_man_1:1111689903907012679>'),
                disnake.SelectOption(label='–ó–∞–±—Ä–∞—Ç—å —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞', value = 'room_delowner', emoji = '<:minus_man_1:1111689901281394739>'),
                disnake.SelectOption(label='–ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞', value = 'room_give_owner', emoji = '<:privates10:1109823504636985414>'),
                disnake.SelectOption(label='–¢–æ–ø—ã', value = 'room_top', emoji = '<:trophy:1111701669428875284>'),
                disnake.SelectOption(label='–£–¥–∞–ª–∏—Ç—å', value = 'room_delete', emoji = '<:mysorka11:1111712241838997574>'),
                disnake.SelectOption(label='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–Ω–∞—Ç—ã', value = 'back_room', emoji = '<:back1:1111712230363373700>'),
                disnake.SelectOption(label='–í—ã—Ö–æ–¥', value = 'room_otmena', emoji = '<:cancel:1111701613942415380>'),
            ],
        )

class RoomManageMain(disnake.ui.View):

    def __init__(self):
        super().__init__()
        self.add_item(RoomDropdown())

class room1(disnake.ui.Button):
    def __init__(self, xd1):
        super().__init__(style = disnake.ButtonStyle.secondary, label = f'{xd1}')
class room2(disnake.ui.Button):
    def __init__(self, xd2):
        super().__init__(style = disnake.ButtonStyle.secondary, label = f'{xd2}')
class room3(disnake.ui.Button):
    def __init__(self, xd3):
        super().__init__(style = disnake.ButtonStyle.secondary, label = f'{xd3}')
class room4(disnake.ui.Button):
    def __init__(self, xd4):
        super().__init__(style = disnake.ButtonStyle.secondary, label = f'{xd4}')
class room5(disnake.ui.Button):
    def __init__(self, xd5):
        super().__init__(style = disnake.ButtonStyle.secondary, label = f'{xd5}')

class RoomManage(disnake.ui.View):
    def __init__(self, xd1, xd2, xd3, xd4, xd5):
        super().__init__()
        if not xd1 == '–ü—É—Å—Ç–æ':
            self.add_item(room1(xd1))
        if not xd2 == '–ü—É—Å—Ç–æ':
            self.add_item(room2(xd2))
        if not xd3 == '–ü—É—Å—Ç–æ':
            self.add_item(room3(xd3))
        if not xd4 == '–ü—É—Å—Ç–æ':
            self.add_item(room4(xd4))
        if not xd5 == '–ü—É—Å—Ç–æ':
            self.add_item(room5(xd5))
            
class room_cog(commands.Cog):
    def __init__(self, bot: commands.Bot(intents = disnake.Intents.all(), command_prefix = 'test!')):
        self.bot = bot

    @commands.slash_command(description = '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É')
    @commands.has_permissions(administrator = True)
    async def room_give(self, inter, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:disnake.Member, —Ü–≤–µ—Ç:str, *, –Ω–∞–∑–≤–∞–Ω–∏–µ):
        embed = disnake.Embed(title = '–í—ã–¥–∞—á–∞ –∫–æ–º–Ω–∞—Ç—ã', description = f'**–í—ã** —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ –∫–æ–º–Ω–∞—Ç—É {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{–Ω–∞–∑–≤–∞–Ω–∏–µ}**', color = 3092790)
        embed.set_thumbnail(url = inter.author.display_avatar.url).set_author(name = inter.author, icon_url = inter.author.display_avatar.url)
        await inter.send(embed = embed)

        new_role = await inter.guild.create_role(name = –Ω–∞–∑–≤–∞–Ω–∏–µ, color = disnake.Color(hex_to_rgb(—Ü–≤–µ—Ç)), mentionable=True)
        channel123 = await inter.guild.create_voice_channel(name = f'„Éª{–Ω–∞–∑–≤–∞–Ω–∏–µ}', category = disnake.utils.get(inter.guild.categories, id = 1158537276800913461))
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'Data': datetime.datetime.now().strftime("%d.%m.%Y")}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)}, {'$set': {'Plata': 2592000}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)}, {'$set': {'Room': channel123.id}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'textchannel': "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}}, upsert = True)
        cluster.sweetness.roomcheck.update_one({'_id': str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)}, {'$push': {'room': int(channel123.id)}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'owner': int(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'Role': new_role.id}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'balance': 0}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'roommembers': []}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'so_owner': []}}, upsert = True)
        cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$push': {'roommembers': f'**1) {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} ‚Äî –í–ª–∞–¥–µ–ª–µ—Ü**'}}, upsert = True)
        await channel123.set_permissions(new_role, connect = True, view_channel = True)
        await –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.add_roles(new_role)

    @room_give.error
    async def room_give_error(self, inter, error):
        if isinstance(error, commands.MissingPermissions):
            embed = disnake.Embed(title = "–í—ã–¥–∞—á–∞ –∫–æ–º–Ω–∞—Ç—ã", description = f'{inter.author.mention}, –£ **–í–∞—Å** –Ω–µ—Ç –Ω–∞ —ç—Ç–æ **—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è**!', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = inter.author, icon_url = inter.author.avatar.url)
            await inter.send(embed = embed)
        else: 
            print(error)

    @commands.command()
    async def room(self, inter):
        embed = disnake.Embed(color = 3092790, description = "<:to4kaa:1013180857202258000> –ò–º–µ–µ—à—å **–±–æ–ª—å—à—É—é –∫–æ–º–ø–∞–Ω–∏—é**, –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ –≤—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª –∏–º–µ—Ç—å —Å–≤–æ—é **–ª–∏—á–Ω—É—é –∫–æ–º–Ω–∞—Ç—É?** \
                              –¢–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –∫ —Ç–µ–±–µ **—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ** –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. \n\n–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ª–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞!\n\n\n<:to4kaa:1013180857202258000> –ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ —Å –¥—Ä—É–∑—å—è–º–∏ –Ω–∞ \
                               **–Ω–∞—à —Å–µ—Ä–≤–µ—Ä**, –ª–∏–±–æ –Ω–∞—à—ë–ª —Å–µ–±–µ –∫—Ä—É—Ç—ã—Ö –¥—Ä—É–∑–µ–π, –º—ã–º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –≤–∞–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∫–æ–º–Ω–∞—Ç—É —Å–æ —Å–≤–æ–µ–π —Ä–æ–ª—å—é **–∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!**\n\n \
                              **–î–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ**\n<:to4kaa:1013180857202258000> –ò–º–µ—Ç—å 4-6 **–∞–∫—Ç–∏–≤–Ω—ã—Ö** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç \
                              –ø–æ–¥–Ω–∏–º–∞—Ç—å –∞–∫—Ç–∏–≤\n<:to4kaa:1013180857202258000> –°–≤—è–∑–∞—Ç—å—Å—è —Å <@&1123703969663942686>\n<:to4kaa:1013180857202258000> –õ–∏–±–æ –∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ ‚Å†üé´„Éª–ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n \
                               –ö–æ–º–Ω–∞—Ç–∞ –≤—ã–¥–∞—ë—Ç—Å—è –Ω–∞ **–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ** –∫–æ–ª-–≤–æ –¥–Ω–µ–π,–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –∞–∫—Ç–∏–≤–∞ –≤ –Ω–µ–π.")
        await inter.send(embed = embed)

    @commands.slash_command(description = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π')
    async def room_manage(self, inter):
        if cluster.sweetness.roomcheck.count_documents({"_id": str(inter.author.id)}) == 0:
            cluster.sweetness.roomcheck.insert_one({"_id": str(inter.author.id), "room": []})

        if cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room'] == []:
            embed = disnake.Embed(description=f'{inter.author.mention}, –£ **–í–∞—Å** –Ω–µ—Ç –ª–∏—á–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–º–∏ **–í—ã** –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å', color=3092790)
            embed.set_author(name="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url=inter.author.display_avatar.url)
            return await inter.send(inter.author.mention, embed=embed)

        idd = 1
        for room in cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']:
            try:
                roleasd[idd] = self.bot.get_channel(int(room)).name
                idd += 1
            except:
                cluster.sweetness.roomcheck.update_one({'_id': str(inter.author.id)}, {'$pull': {'room': int(room)}})

        xd1 = '–ü—É—Å—Ç–æ'
        xd2 = '–ü—É—Å—Ç–æ'
        xd3 = '–ü—É—Å—Ç–æ'
        xd4 = '–ü—É—Å—Ç–æ'
        xd5 = '–ü—É—Å—Ç–æ'
        room_count = len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room'])
        if room_count >= 1:
            xd1 = roleasd.get(1, '–ü—É—Å—Ç–æ')
        if room_count >= 2:
            xd2 = roleasd.get(2, '–ü—É—Å—Ç–æ')
        if room_count >= 3:
            xd3 = roleasd.get(3, '–ü—É—Å—Ç–æ')
        if room_count >= 4:
            xd4 = roleasd.get(4, '–ü—É—Å—Ç–æ')
        if room_count >= 5:
            xd5 = roleasd.get(5, '–ü—É—Å—Ç–æ')

        embed = disnake.Embed(color=3092790, description = f"{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ** –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
        embed.set_author(name="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
        embed.set_thumbnail(url=inter.author.display_avatar.url)
        await inter.send(inter.author.mention, embed=embed, view=RoomManage(xd1, xd2, xd3, xd4, xd5))
    
    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        if after.channel is not None:
            if after.channel.category_id == 1149816516838166719: 
                await after.channel.set_permissions(member.guild.default_role, view_channel = True, connect = False)

        if before.channel:
            if int(before.channel.category.id) == int(1149816516838166719):
                if len(before.channel.members) == 0:
                    await before.channel.set_permissions(member.guild.default_role, view_channel = False, connect = False)

    @commands.Cog.listener()
    async def on_dropdown(self, inter):
        custom_id = inter.values[0]
        if custom_id[:12] == 'room_members':

            await inter.response.defer()

            channel123 = roombutton[inter.author.id]
            role = disnake.utils.get(inter.guild.roles, id = int(cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']))

            idd = 1
            description = f'### –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ: {len(role.members)}\n\n'
            membersID = []
            items_per_page = 10
            for member in role.members:
                membersID.append(member.id)
            pages = [membersID[i:i + items_per_page] for i in range(0, len(membersID), items_per_page)]

            if not str(inter.author.id) in currentRoomMembersPage:
                currentRoomMembersPage[str(inter.author.id)] = 0

            for member_id in pages[currentRoomMembersPage[str(inter.author.id)]]:
                if idd == 1: description += f"**<:11:1096126530247204966> ‚Äî <@{member_id}>**\n\n"
                if idd == 2: description += f"**<:21:1096126528670138469> ‚Äî <@{member_id}>**\n\n"
                if idd == 3: description += f"**<:31:1096126525683810465> ‚Äî <@{member_id}>**\n\n"
                if idd == 4: description += f"**<:41:1096126532826697909> ‚Äî <@{member_id}>**\n\n"
                if idd == 5: description += f"**<:51:1097534359675879515> ‚Äî <@{member_id}>**\n\n"
                if idd == 6: description += f"**<:61:1107004738194653246> ‚Äî <@{member_id}>*\n\n"
                if idd == 7: description += f"**<:71:1107004742326034593> ‚Äî <@{member_id}>*\n\n"
                if idd == 8: description += f"**<:81:1107004743815008328> ‚Äî <@{member_id}>*\n\n"
                if idd == 9: description += f"**<:91:1107004746822328350> ‚Äî <@{member_id}>*\n\n"
                if idd == 10: description += f"**<:101:1107004740723802112> ‚Äî <@{member_id}>**\n\n"
                idd += 1
                if idd > 10:
                    break

            embed = disnake.Embed(description = description, color = 3092790)
            embed.set_author(name = f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–Ω–∞—Ç—ã {role.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
            return await inter.message.edit(content = inter.author.mention, embed = embed, view = RoomMembers(inter.author.id))

        if custom_id[:4] == 'room':

            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            if custom_id == 'room_top':
                embed = disnake.Embed(title = '–¢–æ–ø—ã', description = f'{inter.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ø, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å ', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = TopListRooms())

            if custom_id == 'room_shop':
                embed = disnake.Embed(color = 3092790, title = '–õ–∏—á–Ω—ã–µ –ö–æ–º–Ω–∞—Ç—ã –ú–∞–≥–∞–∑–∏–Ω')
                embed.add_field(name = '1) –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª', value = '**–¶–µ–Ω–∞:** 2000 <:amitobal:1158567849707716708>', inline = False)
                embed.add_field(name = '2) –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç', value = '**–¶–µ–Ω–∞:** 2000 <:amitobal:1158567849707716708>', inline = False)
                embed.add_field(name = '3) –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', value = '**–¶–µ–Ω–∞:** 2000 <:amitobal:1158567849707716708>', inline = False)
                embed.add_field(name = '4) –î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É', value = '**–¶–µ–Ω–∞:** 5000 <:amitobal:1158567849707716708>', inline = False)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed, view = RoomShop())
            
            if custom_id == 'room_delete':
                embed = disnake.Embed(title = '–£–¥–∞–ª–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É', description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **–£–¥–∞–ª–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É**?', color = 3092790)
                return await inter.response.edit_message(embed = embed, view = RoomYesDelete())
            
            if custom_id == 'room_info':
                channel123 = roombutton[inter.author.id]
                if cluster.sweetness.roomweek.count_documents({"_id": str(channel123)}) == 0: 
                    cluster.sweetness.roomweek.insert_one({"_id": str(channel123), "day": 0})
                room_members = cluster.sweetness.room.find_one({'_id': str(channel123)})['roommembers']
                room_role = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']
                room = self.bot.get_channel(int(cluster.sweetness.room.find_one({"_id": str(inter.author.id)})["Room"]))
                N = cluster.sweetness.roomweek.find_one({"_id": str(channel123)})["day"]
                room_members = cluster.sweetness.room.find_one({'_id': str(channel123)})['roommembers']
                textchannel = cluster.sweetness.room.find_one({'_id': str(channel123)})['textchannel']
                if not textchannel == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                    text_channel = f"<#{textchannel}>"
                else:
                    text_channel = f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                embed = disnake.Embed(color = 3092790, description = f"**> –í–ª–∞–¥–µ–ª–µ—Ü: <@{cluster.sweetness.room.find_one({'_id': str(channel123)})['owner']}>\n> –†–æ–ª—å: <@&{room_role}>\n> –¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª: {text_channel}**\n")
                embed.set_author(name = f"–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–Ω–∞—Ç—ã {room.name}", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}", icon_url = inter.author.display_avatar.url)
                embed.add_field(name = '> <:to4ka:1080888733139746856> –û–±—â–∏–π –æ–Ω–ª–∞–π–Ω', value = f'```{N // hour}—á. {(N - (N // hour * hour)) // 60}–º. {N - ((N // hour * hour) + ((N - (N // hour * hour)) // 60 * min))}—Å.```')
                embed.add_field(name = '> <:to4ka:1080888733139746856> –°–æ–∑–¥–∞–Ω–∞', value = f'```{cluster.sweetness.room.find_one({"_id": str(channel123)})["Data"]}```')
                embed.add_field(name = '> <:to4ka:1080888733139746856> –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤', value = f'```{len(room_members)}```')
                embed.add_field(name = '> <:to4ka:1080888733139746856> –û–±—â–∏–π –±–∞–Ω–∫', value = f"```{cluster.sweetness.room.find_one({'_id': str(channel123)})['balance']}```")
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                if len(cluster.sweetness.room.find_one({'_id': str(channel123)})['so_owner']) == 0:
                    embed.add_field(name = '> <:to4ka:1080888733139746856>–°–æ–í–ª–∞–¥–µ–ª—å—Ü—ã', value = f'```–ü—É—Å—Ç–æ```')
                else:
                    members = ' '.join([inter.guild.get_member(i).mention for i in cluster.sweetness.room.find_one({'_id': str(channel123)})['so_owner'] if inter.guild.get_member(i)])
                    embed.add_field(name = '> <:to4ka:1080888733139746856> –°–æ–í–ª–∞–¥–µ–ª—å—Ü—ã', value = f'{members}')            
                await inter.response.edit_message(embed = embed, view = RoomManageBack())

            if custom_id == 'back_room':
                
                if cluster.sweetness.roomcheck.count_documents({"_id": str(inter.author.id)}) == 0:
                    cluster.sweetness.roomcheck.insert_one({"_id": str(inter.author.id), "room": []})
        
                if cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room'] == []:
                    embed = disnake.Embed(description='–£ **–í–∞—Å** –Ω–µ—Ç –ª–∏—á–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–º–∏ **–í—ã** –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å', color=3092790)
                    embed.set_author(name="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url=inter.author.display_avatar.url)
                    return await inter.response.edit_message(inter.author.mention, embed=embed)
        
                idd = 1
                for room in cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']:
                    try:
                        roleasd[idd] = self.bot.get_channel(int(room)).name
                        idd += 1
                    except:
                        cluster.sweetness.roomcheck.update_one({'_id': str(inter.author.id)}, {'$pull': {'room': int(room)}})
                        
                xd1 = '–ü—É—Å—Ç–æ'
                xd2 = '–ü—É—Å—Ç–æ'
                xd3 = '–ü—É—Å—Ç–æ'
                xd4 = '–ü—É—Å—Ç–æ'
                xd5 = '–ü—É—Å—Ç–æ'
                room_count = len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room'])
                if room_count >= 1:
                    xd1 = roleasd.get(1, '–ü—É—Å—Ç–æ')
                if room_count >= 2:
                    xd2 = roleasd.get(2, '–ü—É—Å—Ç–æ')
                if room_count >= 3:
                    xd3 = roleasd.get(3, '–ü—É—Å—Ç–æ')
                if room_count >= 4:
                    xd4 = roleasd.get(4, '–ü—É—Å—Ç–æ')
                if room_count >= 5:
                    xd5 = roleasd.get(5, '–ü—É—Å—Ç–æ')
        
                embed = disnake.Embed(color=3092790)
                embed.set_author(name="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url=inter.author.display_avatar.url)
                await inter.response.edit_message(embed=embed, view=RoomManage(xd1, xd2, xd3, xd4, xd5))

            if custom_id == 'room_del':
                await inter.response.send_modal(title=f"–°–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø", custom_id = "snyat_room_permissions",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])
            if custom_id == 'room_owner':
                await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞", custom_id = "vidat_so_owner",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])
            if custom_id == 'room_delowner':
                await inter.response.send_modal(title=f"–ó–∞–±—Ä–∞—Ç—å —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞", custom_id = "zabrat_so_owner",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])
            if custom_id == 'room_give_owner':
                await inter.response.send_modal(title=f"–ü–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞", custom_id = "give_owner",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])
            if custom_id == 'room_otmena':
                await inter.message.delete()
            if custom_id == 'room_pay':
                await inter.response.send_modal(title=f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É", custom_id = "pay_room",components=[disnake.ui.TextInput(label="–°—É–º–º–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1000",custom_id = "–°—É–º–º–∞",style=disnake.TextInputStyle.short, max_length=25)])
            if custom_id == 'room_give':
                embed = disnake.Embed(title = '–õ–∏—á–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞', description = f'{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é**', color = 3092790)
                await inter.response.edit_message(embed = embed, view = VidatDostyp())

        if custom_id[:11] == "leaderboard":

            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–¢–æ–ø —Ä—É–º', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            description = ""
            if custom_id == 'leaderboard_balance_rooms':
                with open('room_balance.json', 'r') as f:
                    time_room = json.load(f)

                top_users = {k: v for k, v in sorted(time_room[str(roombutton[inter.author.id])].items(), key=lambda item: item[1], reverse=True)}
                idd = 1
                for postion, user in enumerate(top_users):
                    if idd == 1: description += f"**<:1_:1091732820768075860> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 2: description += f"**<:2_:1091732822449987654> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 3: description += f"**<:3_:1091732824823959583> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 4: description += f"**<:4_:1091732828028411944> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 5: description += f"**<:5_:1091732829211214030> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 6: description += f"**<:6_:1091732831069282325> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 7: description += f"**<:7_:1091732832851857481> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 8: description += f"**<:8_:1091732834563141653> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 9: description += f"**<:9_:1091732835863363634> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    if idd == 10:description += f"**<:10:1091732838023434241> ‚Äî <@{user}>** <:amitobal:1158567849707716708> **{time_room[str(roombutton[inter.author.id])][str(user)]}** \n\n"
                    idd += 1
                    if idd > 10:
                        break
                    
                embed = disnake.Embed(description=description, color = 3092790)
                embed.set_author(name = "–¢–æ–ø –ø–æ –≤–Ω–æ—Å—É –±–∞–ª–∞–Ω—Å–∞ –≤ –õ–∏—á–Ω–æ–π –ö–æ–º–Ω–∞—Ç–µ | –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", icon_url = inter.guild.icon.url)
                embed.set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png')
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = TopListRooms())

            if custom_id == 'leaderboard_voice_rooms':
                with open('room_balance_online.json', 'r') as f:
                    time_room_online = json.load(f)

                if not str(roombutton[inter.author.id]) in time_room_online:
                    time_room_online[str(roombutton[inter.author.id])] = {}
                    with open('room_balance_online.json','w') as f: 
                        json.dump(time_room_online,f)

                top_users = {k: v for k, v in sorted(time_room_online[str(roombutton[inter.author.id])].items(), key=lambda item: item[1], reverse=True)}
                idd = 1
                for postion, user in enumerate(top_users):
                    N = time_room_online[str(roombutton[inter.author.id])][str(user)]
                    if idd == 1: description += f"**<:1_:1091732820768075860> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 2: description += f"**<:2_:1091732822449987654> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 3: description += f"**<:3_:1091732824823959583> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 4: description += f"**<:4_:1091732828028411944> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 5: description += f"**<:5_:1091732829211214030> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 6: description += f"**<:6_:1091732831069282325> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 7: description += f"**<:7_:1091732832851857481> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 8: description += f"**<:8_:1091732834563141653> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 9: description += f"**<:9_:1091732835863363634> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 10:description += f"**<:10:1091732838023434241> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    idd += 1
                    if idd > 10:
                        break

                embed = disnake.Embed(description=description, color = 3092790)
                embed.set_author(name = "–¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –≤ –õ–∏—á–Ω–æ–π –ö–æ–º–Ω–∞—Ç–µ | –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", icon_url = inter.guild.icon.url)
                embed.set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png').set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = TopListRoomsView())

    @commands.Cog.listener()
    async def on_button_click(self, inter):

        custom_id = inter.component.custom_id

        if custom_id[:12] == 'room_members':
            
            await inter.response.defer()

            channel123 = roombutton[inter.author.id]
            role = disnake.utils.get(inter.guild.roles, id = int(cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']))

            idd = 1
            description = f'### –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ: {len(role.members)}\n\n'
            membersID = []
            items_per_page = 10

            for member in role.members:
                membersID.append(member.id)

            pages = [membersID[i:i + items_per_page] for i in range(0, len(membersID), items_per_page)]

            if not str(inter.author.id) in currentRoomMembersPage:
                currentRoomMembersPage[str(inter.author.id)] = 0

            if custom_id == 'room_members_first_page':
                currentRoomMembersPage[str(inter.author.id)] = 0
            if custom_id == 'room_members_prev_page':
                if currentRoomMembersPage[str(inter.author.id)] > 0:
                    currentRoomMembersPage[str(inter.author.id)] -= 1
            if custom_id == 'room_members_exit':
                return await inter.message.delete()
            if custom_id == 'room_members_right_page':
                if currentRoomMembersPage[str(inter.author.id)] < len(pages) - 1:
                    currentRoomMembersPage[str(inter.author.id)] += 1
            if custom_id == 'room_members_last_page':
                currentRoomMembersPage[str(inter.author.id)] = len(pages) - 1

            for member_id in pages[currentRoomMembersPage[str(inter.author.id)]]:
                if idd == 1: description += f"**<:11:1096126530247204966> ‚Äî <@{member_id}>**\n\n"
                if idd == 2: description += f"**<:21:1096126528670138469> ‚Äî <@{member_id}>**\n\n"
                if idd == 3: description += f"**<:31:1096126525683810465> ‚Äî <@{member_id}>**\n\n"
                if idd == 4: description += f"**<:41:1096126532826697909> ‚Äî <@{member_id}>**\n\n"
                if idd == 5: description += f"**<:51:1097534359675879515> ‚Äî <@{member_id}>**\n\n"
                if idd == 6: description += f"**<:61:1107004738194653246> ‚Äî <@{member_id}>*\n\n"
                if idd == 7: description += f"**<:71:1107004742326034593> ‚Äî <@{member_id}>*\n\n"
                if idd == 8: description += f"**<:81:1107004743815008328> ‚Äî <@{member_id}>*\n\n"
                if idd == 9: description += f"**<:91:1107004746822328350> ‚Äî <@{member_id}>*\n\n"
                if idd == 10: description += f"**<:101:1107004740723802112> ‚Äî <@{member_id}>**\n\n"
                idd += 1
                if idd > 10:
                    break

            embed = disnake.Embed(description = description, color = 3092790)
            embed.set_author(name = f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–Ω–∞—Ç—ã {role.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
            return await inter.message.edit(content = inter.author.mention, embed = embed, view = RoomMembers(inter.author.id))

        if custom_id == 'back_room':
            if cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room'] == []:
                embed = disnake.Embed(title = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', description = '–£ **–í–∞—Å** –Ω–µ—Ç –ª–∏—á–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–º–∏ **–í—ã** –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å', color = 3092790).set_thumbnail(url=inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed)
            idd = 1
            for room in cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']:
                roleasd[idd] = self.bot.get_channel(int(room)).name
                idd += 1
            xd1 = '–ü—É—Å—Ç–æ'
            xd2 = '–ü—É—Å—Ç–æ'
            xd3 = '–ü—É—Å—Ç–æ'
            xd4 = '–ü—É—Å—Ç–æ'
            xd5 = '–ü—É—Å—Ç–æ'

            if len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']) == 1: 
                xd1 = roleasd[1]

            if len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']) == 2: 
                xd1 = roleasd[1]
                xd2 = roleasd[2]

            if len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']) == 3: 
                xd1 = roleasd[1]
                xd2 = roleasd[2]
                xd3 = roleasd[3]

            if len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']) == 4:
                xd1 = roleasd[1]
                xd2 = roleasd[2]
                xd3 = roleasd[3]
                xd4 = roleasd[4]

            if len(cluster.sweetness.roomcheck.find_one({'_id': str(inter.author.id)})['room']) == 5: 
                xd1 = roleasd[1]
                xd2 = roleasd[2]
                xd3 = roleasd[3]
                xd4 = roleasd[4]
                xd5 = roleasd[5]

            embed = disnake.Embed( title = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = RoomManage(xd1, xd2, xd3, xd4, xd5))

        if custom_id == 'room_delete_yes':
            channel123 = roombutton[inter.author.id]

            room_role = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']
            await disnake.utils.get(inter.guild.roles, id = int(room_role)).delete()

            cluster.sweetness.roomcheck.update_one({'_id': str(inter.author.id)}, {'$pull': {'room': int(channel123)}})

            await self.bot.get_channel(int(channel123)).delete()

            cluster.sweetness.room.delete_one({'_id': str(inter.author.id)})
            cluster.sweetness.roomweek.delete_one({'_id': str(channel123)})

            embed = disnake.Embed(title = '–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã', description = '**–í—ã** —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∫–æ–º–Ω–∞—Ç—É!', color = disnake.Color.green())
            embed.set_footer(text = inter.author,icon_url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed, components = [])

        if custom_id == 'top_voice_rooms_week':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–¢–æ–ø —Ä—É–º', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)

            with open('room_balance_online_week.json', 'r') as f:
                time_room_online = json.load(f)

            if not str(roombutton[inter.author.id]) in time_room_online:
                time_room_online[str(roombutton[inter.author.id])] = {}
                with open('room_balance_online_week.json','w') as f:
                    json.dump(time_room_online,f)

            top_users = {k: v for k, v in sorted(time_room_online[str(roombutton[inter.author.id])].items(), key=lambda item: item[1], reverse=True)}
            idd = 1
            description = ''
            for postion, user in enumerate(top_users):
                try:
                    N = time_room_online[str(roombutton[inter.author.id])][str(user)]
                    if idd == 1: description += f"**<:1_:1091732820768075860> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 2: description += f"**<:2_:1091732822449987654> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 3: description += f"**<:3_:1091732824823959583> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 4: description += f"**<:4_:1091732828028411944> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 5: description += f"**<:5_:1091732829211214030> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 6: description += f"**<:6_:1091732831069282325> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 7: description += f"**<:7_:1091732832851857481> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 8: description += f"**<:8_:1091732834563141653> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 9: description += f"**<:9_:1091732835863363634> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    if idd == 10 : description += f"**<:10:1091732838023434241> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    idd += 1
                    if idd > 10: 
                        embed = disnake.Embed(description = description, title="<:clock:1091777604941529089> –¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ | –ó–∞ –Ω–µ–¥–µ–ª—é", color = 3092790).set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png').set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.response.edit_message(embed = embed, view = TopListRoomsView())
                except:
                    pass
            embed = disnake.Embed(description = description, title="<:clock:1091777604941529089> –¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ | –ó–∞ –Ω–µ–¥–µ–ª—é", color = 3092790).set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png').set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = TopListRoomsView())

        if custom_id == 'top_voice_rooms':
            if not inter.message.content == inter.author.mention:
                return await inter.send(ephemeral = True, embed = disnake.Embed(title = f'–¢–æ–ø —Ä—É–º', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url))
            

            with open('room_balance_online.json', 'r') as f:
                time_room_online = json.load(f)

            if not str(roombutton[inter.author.id]) in time_room_online:
                time_room_online[str(roombutton[inter.author.id])] = {}
                with open('room_balance_online.json','w') as f: 
                    json.dump(time_room_online,f)

            top_users = {k: v for k, v in sorted(time_room_online[str(roombutton[inter.author.id])].items(), key=lambda item: item[1], reverse=True)}
            idd = 1
            description = ''
            for postion, user in enumerate(top_users):
                N = time_room_online[str(roombutton[inter.author.id])][str(user)]
                if idd == 1: description += f"**<:1_:1091732820768075860> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 2: description += f"**<:2_:1091732822449987654> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 3: description += f"**<:3_:1091732824823959583> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 4: description += f"**<:4_:1091732828028411944> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 5: description += f"**<:5_:1091732829211214030> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 6: description += f"**<:6_:1091732831069282325> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 7: description += f"**<:7_:1091732832851857481> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 8: description += f"**<:8_:1091732834563141653> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 9: description += f"**<:9_:1091732835863363634> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                if idd == 10 : description += f"**<:10:1091732838023434241> ‚Äî <@{user}>** <:clock:1091777604941529089> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                idd += 1
                if idd > 10: 
                    embed = disnake.Embed(description = description, title="<:clock:1091777604941529089> –¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ | –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", color = 3092790).set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png').set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed, view = TopListRoomsView())
            embed = disnake.Embed(description = description, title="<:clock:1091777604941529089> –¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –≤ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ | –ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", color = 3092790).set_image(url = 'https://cdn.discordapp.com/attachments/877327839022710894/974414791504429086/222.png').set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = TopListRoomsView())

        if custom_id[:8] == 'yes_room':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–õ–∏—á–Ω—ã–µ –ö–æ–º–Ω–∞—Ç—ã', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            member = inter.author
            channel123 = roombutton[inter.author.id]
            cluster.sweetness.room.update_one({'_id': str(channel123)}, {'$push': {'roommembers': f"\n**{len(cluster.sweetness.room.find_one({'_id': str(channel123)})['roommembers']) + 1})** <@{member.id}>"}}, upsert = True)
            if custom_id == 'yes_room':

                room_role = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']
                await member.add_roles(disnake.utils.get(inter.guild.roles, id = int(room_role)))

                embed = disnake.Embed(description = f'{inter.author.mention}, **–¢–µ–ø–µ—Ä—å** —É **–í–∞—Å** –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –≤ **–∫–æ–º–Ω–∞—Ç—É** <#{channel123}>', color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed, components = [])
            if custom_id == 'yes_room1':
                
                channel = disnake.utils.get(inter.guild.channels, id = int(channel123))
                await channel.set_permissions(member, connect = True, view_channel = True)
                try:
                    text_channel = self.bot.get_channel(cluster.sweetness.room.find_one({'_id': str(channel123)})['textchannel'])
                    await text_channel.set_permissions(member, connect = True, view_channel = True)
                except:
                    pass

                embed = disnake.Embed(description = f'{inter.author.mention}, **–¢–µ–ø–µ—Ä—å** —É **–í–∞—Å** –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –≤ **–∫–æ–º–Ω–∞—Ç—É** <#{channel123}>', color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed, components = [])
        
        if custom_id == '1room':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            roomshop[inter.author.id] = '1'
            
            embed = disnake.Embed(title = '–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª** –∑–∞ **2000** <:amitobal:1158567849707716708>?\n–î–ª—è **—Å–æ–≥–ª–∞—Å–∏—è** –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <:yes1:1092007373733900348>, –¥–ª—è **–æ—Ç–∫–∞–∑–∞** –Ω–∞ <:back1:1111712230363373700>', color = 3092790)
            return await inter.response.edit_message(embed = embed, view = RoomYesOrNo())
        
        if custom_id == '2room':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            roomshop[inter.author.id] = '2'
            
            embed = disnake.Embed(title = '–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç** –∑–∞ **2000** <:amitobal:1158567849707716708>?\n–î–ª—è **—Å–æ–≥–ª–∞—Å–∏—è** –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <:yes1:1092007373733900348>, –¥–ª—è **–æ—Ç–∫–∞–∑–∞** –Ω–∞ <:back1:1111712230363373700>', color = 3092790)
            return await inter.response.edit_message(embed = embed, view = RoomYesOrNo())
        
        if custom_id == '3room':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            roomshop[inter.author.id] = '3'
            
            embed = disnake.Embed(title = '–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ** –∑–∞ **2000** <:amitobal:1158567849707716708>?\n–î–ª—è **—Å–æ–≥–ª–∞—Å–∏—è** –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <:yes1:1092007373733900348>, –¥–ª—è **–æ—Ç–∫–∞–∑–∞** –Ω–∞ <:back1:1111712230363373700>', color = 3092790)
            return await inter.response.edit_message(embed = embed, view = RoomYesOrNo())
        
        if custom_id == '4room':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            roomshop[inter.author.id] = '4'
            
            embed = disnake.Embed(title = '–ú–∞–≥–∞–∑–∏–Ω', description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É** –∑–∞ **5000** <:amitobal:1158567849707716708>?\n–î–ª—è **—Å–æ–≥–ª–∞—Å–∏—è** –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <:yes1:1092007373733900348>, –¥–ª—è **–æ—Ç–∫–∞–∑–∞** –Ω–∞ <:back1:1111712230363373700>', color = 3092790)
            return await inter.response.edit_message(embed = embed, view = RoomYesOrNo())
        
        if custom_id == 'yesroomshop':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790).set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            if roomshop[inter.author.id] == '1':
                channel123 = roombutton[inter.author.id]
                if int(2000) > int(cluster.sweetness.room.find_one({"_id": str(channel123)})["balance"]):
                    embed = disnake.Embed(title = '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, –ù–∞ **–±–∞–ª–∞–Ω—Å–µ** –∫–æ–º–Ω–∞—Ç—ã **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤**!', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)
                await inter.response.send_modal(title=f"–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", custom_id = "add_channel",components=[disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc zxc", custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=25)])
            if roomshop[inter.author.id] == '2':
                channel123 = roombutton[inter.author.id]
                if int(2000) > int(cluster.sweetness.room.find_one({"_id": str(channel123)})["balance"]):
                    embed = disnake.Embed(title = '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, –ù–∞ **–±–∞–ª–∞–Ω—Å–µ** –∫–æ–º–Ω–∞—Ç—ã **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤**!', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)
                await inter.response.send_modal(title=f"–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç", custom_id = "edit_color_room",components=[disnake.ui.TextInput(label="–¶–≤–µ—Ç",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #00000",custom_id = "–¶–≤–µ—Ç",style=disnake.TextInputStyle.short, max_length=25)])
            if roomshop[inter.author.id] == '3':
                channel123 = roombutton[inter.author.id]
                if int(2000) > int(cluster.sweetness.room.find_one({"_id": str(channel123)})["balance"]):
                    embed = disnake.Embed(title = '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, –ù–∞ **–±–∞–ª–∞–Ω—Å–µ** –∫–æ–º–Ω–∞—Ç—ã **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤**!', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)
                await inter.response.send_modal(title=f"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", custom_id = "edit_name",components=[disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=25)])
            if roomshop[inter.author.id] == '4':

                channel123 = roombutton[inter.author.id]
                if int(5000) > int(cluster.sweetness.room.find_one({"_id": str(channel123)})["balance"]):
                    embed = disnake.Embed(title = '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, –ù–∞ **–±–∞–ª–∞–Ω—Å–µ** –∫–æ–º–Ω–∞—Ç—ã **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤**!', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)
                
                embed = disnake.Embed(title = '–î–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É', description = f'{inter.author.mention}, **–°–∫–∏–Ω—å—Ç–µ** —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ —á–∞—Ç, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã **–ø–æ—Å—Ç–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å** –∏–∫–æ–Ω–∫—É –Ω–∞ —Ä–æ–ª–∏!', color=3092790)
                embed.set_author(name = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed)

                def check(m):
                    return m.author.id == inter.author.id
                try: 
                    image = await self.bot.wait_for("message", check = check)
                except TimeoutError:
                    return
                
                room_id = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']
                role = disnake.utils.get(inter.guild.roles, id = int(room_id))

                for attach in image.attachments:
                    await attach.save(f"icon_role.png")

                with open(f'icon_role.png', "rb") as image:
                    img_byte = image.read()

                emoji = await inter.guild.create_custom_emoji(name = 'xdd', image = img_byte)
                try:
                    await role.edit(icon = emoji)
                except:
                    embed = disnake.Embed(title = f"–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É", description = f"{inter.author.mention}, **–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Å—Ç–æ–≤** –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –Ω–∞ —Ä–æ–ª—å!", color = 3092790)
                    return await inter.response.edit_message(embed = embed)
                
                await emoji.delete()

                cluster.sweetness.room.update_one({"_id": str(channel123)}, {"$inc": {"balance": -int(5000)}})
                embed = disnake.Embed(title = f"–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É", description = f"{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏/–∏–∑–º–µ–Ω–∏–ª–∏ –∏–∫–æ–Ω–∫—É **–ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã!**", color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.send(embed = embed)
        
        
        if custom_id == 'menu_room_manage':

            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            embed = disnake.Embed(description=f"{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ** —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å", color = 3092790)
            embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_image(url = "https://i.ibb.co/fkPw2Lf/bg23232.png")
            return await inter.response.edit_message(embed = embed, view = RoomManageMain())
        
        if custom_id == 'vidat_1':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = '–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø",custom_id = "vidat_room_permissions",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])
        if custom_id == 'vidat_2':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = '–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø",custom_id = "vidat_room_permissions1",components=[disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)])

        try:
            channel = disnake.utils.get(inter.guild.channels, name = inter.component.label)
            roombutton[inter.author.id] = channel.id
            channel123 = roombutton[inter.author.id]
            room_role = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']

            with open('room_balance.json', 'r') as f:
                time_room = json.load(f)

            if not str(channel.id) in time_room:
                time_room[str(channel.id)] = {}
                with open('room_balance.json','w') as f: 
                    json.dump(time_room,f)

            embed = disnake.Embed(description=f"{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ** —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å", color = 3092790)
            embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_image(url = "https://i.ibb.co/fkPw2Lf/bg23232.png")
            return await inter.response.edit_message(embed = embed, view = RoomManageMain())
        except:
            pass

    @commands.Cog.listener()
    async def on_modal_submit(self, inter):

        custom_id = inter.custom_id

        if custom_id == 'add_channel':

            for key, value in inter.text_values.items():
                name = value

            channel123 = roombutton[inter.author.id]
            room_role = cluster.sweetness.room.find_one({'_id': str(channel123)})['Role']
            channel5 = await inter.guild.create_text_channel(name = name, category = disnake.utils.get(inter.guild.categories, id = 1124789725107077240))
            await channel5.set_permissions(disnake.utils.get(inter.guild.roles, id = int(room_role)), send_messages=True,view_channel=True)
            await channel5.set_permissions(inter.guild.default_role, send_messages=False, view_channel=False)
            cluster.sweetness.room.update_one({"_id": str(channel123)}, {"$inc": {"balance": -int(2000)}})
            cluster.sweetness.room.update_one({'_id': str(channel123)}, {'$set': {'textchannel': channel5.id}}, upsert = True)
            embed = disnake.Embed(title = '–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–¥–æ–±–∞–≤–∏–ª–∏ –∫–∞–Ω–∞–ª** –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name}', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed, view = RoomManageBack())

        if custom_id == "edit_color_room":

            for key, value in inter.text_values.items():
                color = value

            channel123 = roombutton[inter.author.id]
            room_role = cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['Role']
            await disnake.utils.get(inter.guild.roles, id = int(room_role)).edit(color = disnake.Color(hex_to_rgb(color)))
            cluster.sweetness.room.update_one({"_id": str(channel123)}, {"$inc": {"balance": -int(2000)}})
            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ **—Ü–≤–µ—Ç —Ä–æ–ª–∏ –∫–æ–º–Ω–∞—Ç—ã!** <#{roombutton[inter.author.id]}>', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = RoomManageBack())

        if custom_id == "edit_name":

            for key, value in inter.text_values.items():
                name = value

            await self.bot.get_channel(roombutton[inter.author.id]).edit(name = name)
            room_role = cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['Role']
            channel123 = roombutton[inter.author.id]
            cluster.sweetness.room.update_one({"_id": str(channel123)}, {"$inc": {"balance": -int(2000)}})
            await disnake.utils.get(inter.guild.roles, id = int(room_role)).edit(name = name)
            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ **–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã** <#{roombutton[inter.author.id]}>', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = RoomManageBack())
        if custom_id[:22] == 'vidat_room_permissions':

            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            idmessage[inter.message.id] = inter.author.id
            roombutton[member.id] = roombutton[inter.author.id]
            if custom_id == "vidat_room_permissions":

                embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', color = 3092790, description = f'{inter.author.mention} —Ö–æ—á–µ—Ç **–í–∞–º** –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤ —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É <#{roombutton[inter.author.id]}>, –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ')
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(content = f'{member.mention}', embed = embed, view = RoomYesNo())

            if custom_id == 'vidat_room_permissions1':

                embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', color = 3092790, description = f'{inter.author.mention} —Ö–æ—á–µ—Ç **–í–∞–º** –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤ —Å–≤–æ—é –∫–æ–º–Ω–∞—Ç—É <#{roombutton[inter.author.id]}>, –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ')
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(content = f'{member.mention}', embed = embed, view = RoomYesNo1())

        if custom_id == "snyat_room_permissions":

            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            channel = disnake.utils.get(inter.guild.channels, id = int(roombutton[inter.author.id]))
            room_id = cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['Role']
            room_role = disnake.utils.get(inter.guild.roles, id = int(room_id))
            await member.remove_roles(room_role)
            await channel.set_permissions(member, connect = False)
            try:
                await member.move_to(None)
            except:
                pass
            embed = disnake.Embed(title = '–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø', color = 3092790, description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ **–¥–æ—Å—Ç—É–ø** <#{roombutton[inter.author.id]}> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}')
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(content = f'{member.mention}', embed = embed, view = RoomManageBack())

        if custom_id == "pay_room":
            
            for key, value in inter.text_values.items():
                count = value

            with open('room_balance.json', 'r') as f:
                time_room = json.load(f)
                
            if int(cluster.sweetness.economy.find_one({"_id": str(inter.author.id)})["balance"]) < int(count): 
                embed = disnake.Embed(title = '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É', description = f'{inter.author.mention}, —É **–í–∞—Å** –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ <:amitobal:1158567849707716708>', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed, view = RoomManageBack())

            channel123 = roombutton[inter.author.id]
            if not str(inter.author.id) in time_room[str(channel123)]:
                time_room[str(channel123)][str(inter.author.id)] = 0
                with open('room_balance.json','w') as f:
                    json.dump(time_room,f)

            cluster.sweetness.room.update_one({"_id": str(channel123)}, {"$inc": {"balance": +int(count)}})
            cluster.sweetness.room_balance_history.update_one({"_id": str(channel123)}, {"$inc": {"balance": +int(count)}})
            cluster.sweetness.economy.update_one({"_id": str(inter.author.id)}, {"$inc": {"balance": -int(count)}})
            time_room[str(channel123)][str(inter.author.id)] += int(count)
            with open('room_balance.json','w') as f: 
                json.dump(time_room,f)

            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–≤–Ω–µ—Å–ª–∏** {count} <:amitobal:1158567849707716708> –Ω–∞ —Å—á—ë—Ç **–ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã**', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed, view = RoomManageBack())

        if custom_id == 'vidat_so_owner':

            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))
            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–≤—ã–¥–∞–ª–∏ —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞** <@{member.id}>', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = RoomManageBack())
            channel123 = self.bot.get_channel(roombutton[inter.author.id])
            idd = len(cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['roommembers'])
            cluster.sweetness.room.update_one({'_id': str(member.id)}, {'$set': {'Room': channel123.id}}, upsert = True)
            cluster.sweetness.roomcheck.update_one({'_id': str(member.id)}, {'$push': {'room': int(channel123.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$push': {'so_owner': int(member.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$push': {'roommembers': f'\n**{idd + 1}) {member.mention} ‚Äî –°–æ–í–ª–∞–¥–µ–ª–µ—Ü**'}}, upsert = True)

        if custom_id == 'zabrat_so_owner':

            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–∑–∞–±—Ä–∞–ª–∏ —Å–æ–≤–ª–∞–¥–µ–ª—å—Ü–∞** —É <@{member.id}>', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = RoomManageBack())

            channel123 = self.bot.get_channel(roombutton[inter.author.id])
            idd = len(cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['roommembers'])
            cluster.sweetness.room.delete_one({'_id': str(member.id)})
            cluster.sweetness.roomcheck.update_one({'_id': str(member.id)}, {'$pull': {'room': int(channel123.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$pull': {'so_owner': int(member.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$pull': {'roommembers': f'\n**{idd - 1}) {member.mention} ‚Äî –°–æ–í–ª–∞–¥–µ–ª–µ—Ü**'}}, upsert = True)

        if custom_id == "give_owner":

            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            embed = disnake.Embed(title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–º–Ω–∞—Ç–æ–π', description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–ø–µ—Ä–µ–¥–∞–ª–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞** <@{member.id}>', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, components = [])

            channel123 = self.bot.get_channel(roombutton[inter.author.id])
            room_role = cluster.sweetness.room.find_one({'_id': str(roombutton[inter.author.id])})['Role']
        
            cluster.sweetness.room.update_one({'_id': str(inter.author.id)}, {'$pull': {'roommembers': f'**1) {inter.author.mention} ‚Äî –í–ª–∞–¥–µ–ª–µ—Ü**'}}, upsert = True)

            cluster.sweetness.room.update_one({'_id': str(member.id)}, {'$set': {'Room': channel123.id}}, upsert = True)
            cluster.sweetness.roomcheck.update_one({'_id': str(member.id)}, {'$push': {'room': int(channel123.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$set': {'owner': int(member.id)}}, upsert = True)
            cluster.sweetness.room.update_one({'_id': str(channel123.id)}, {'$push': {'roommembers': f'\n**1) {member.mention} ‚Äî –í–ª–∞–¥–µ–ª–µ—Ü**'}}, upsert = True)
            cluster.sweetness.roomcheck.update_one({'_id': str(inter.author.id)}, {'$pull': {'room': channel123.id}}, upsert = True)
            cluster.sweetness.room.delete_one({'_id': str(inter.author.id)})

def setup(bot):
    bot.add_cog(room_cog(bot))