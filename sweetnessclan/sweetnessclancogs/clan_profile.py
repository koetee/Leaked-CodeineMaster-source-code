import pymongo
import disnake
import datetime
import json
import re
from random import randint
from disnake.utils import get
from disnake.ext import commands
from disnake.enums import ButtonStyle, TextInputStyle
from disnake import utils, Embed
from PIL import Image, ImageDraw, ImageFont
from disnake import Localized

cluster = pymongo.MongoClient(f"mongodb://127.0.0.1:27017/test?retryWrites=true&w=majority")

files = cluster.sweetness.files
database = cluster.sweetness

clan_invite = {}
clanshop = {}
profile_user = {}
currentClanTopPage = {}
currentRankChoice = {}
sort_clan_top = {}
clan_attack_choice = {}
clan_choice_hero = {}
clan_hero_cost = {}
clan_hero_name = {}
achievement = {}
achievement_reward = {}
selectTop = {}
currentTopPage = {}

min = 60
hour = 60 * 60
day = 60 * 60 * 24
async def get_member_ids(collection_name, key):
    membersID = []
    collection = database[collection_name]
    cursor = collection.find().sort(key, -1)
    for document in cursor:
        membersID.append(document["_id"])
    return membersID

def hex_to_rgb(value):
    value = value.lstrip('#')
    RGB = list(tuple(int(value[i:i + len(value) // 3], 16) for i in range(0, len(value), len(value) // 3)))
    return (RGB[0]<<16) + (RGB[1]<<8) + RGB[2]

class BackAchievements(disnake.ui.View):
    def __init__(self, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, achiev):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', custom_id = 'achievements_main', emoji = '<:left:1138812764899520572>'))
        if cluster.sweetness.achievements.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})[f"{str(achiev)}"] == "NO":
            try:
                if cluster.sweetness.achievements_count.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})[f"{str(achiev)}"] == "YES":
                    self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label='–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É', custom_id='achievements_take_reward', emoji='<:gift:1136967445530284073>'))
            except:
                self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label='–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É', custom_id='achievements_take_reward', emoji='<:gift:1136967445530284073>', disabled=True))
        else:
            self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label='–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É', custom_id='achievements_take_reward', emoji='<:gift:1136967445530284073>', disabled=True))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'exit_profile', emoji = '<:basket:1138812689502699680>'))

class ClanHeroBuy(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, label = '–ö—É–ø–∏—Ç—å', custom_id = 'clan_buy_heroes', emoji = "<:zxc3:1009168371213926452>"))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–û—Ç–º–µ–Ω–∞', custom_id = 'clan_back', emoji = '<:zxc2:1009168373936050206>'))

class ReportMenu(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, emoji = '<:zxc3:1009168371213926452>', custom_id = 'accept_one', row = 0))
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, emoji = '<:zxc2:1009168373936050206>', custom_id = 'accept_two', row = 0))

class BallReportDisabled(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤', custom_id = 'ball_report', row = 0, disabled=True))

class BallReport(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', custom_id = 'ball_report', row = 0))
class ReportView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, label = '–ü—Ä–∏–Ω—è—Ç—å', custom_id = 'accept_report', emoji = '<:zxc3:1009168371213926452>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–û—Ç–∫–ª–æ–Ω–∏—Ç—å', custom_id = 'decline_report', emoji = "<:zxc2:1009168373936050206>"))


class Meet(disnake.ui.View):
    def __init__(self, invitelink):
        super().__init__()
        self.add_item(disnake.ui.Button(style=disnake.ButtonStyle.secondary, label = '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', url = str(invitelink)))

class ClanViewDropdown(disnake.ui.Select):
    def __init__(self, bot, clan_id):
        with open('clan_sweetness.json', 'r') as f:
            clan_data = json.load(f)

        guild = bot.get_guild(960579506425446472)

        guild_clans = clan_data.get(str(guild.id), {})

        options = []
        for clan_key, clan_value in guild_clans.items():
            if isinstance(clan_value, dict):
                try:
                    if not str(clan_key) == str(clan_id):
                        role = disnake.utils.get(guild.roles, id=int(clan_key))
                        clan_name = role.name
                        options.append(disnake.SelectOption(label=f"{clan_name}", value = f'{clan_key}_alliance', description=f"–°–¥–µ–ª–∞—Ç—å –∞–ª—å—è–Ω—Å —Å {clan_name}", emoji = '<:sort:1064936267533516861>'))
                except:
                    pass

        super().__init__(
            placeholder="–°–¥–µ–ª–∞—Ç—å –∞–ª—å—è–Ω—Å",
            options = options,
        )

class ClanAllianceView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'clan_accept_alliance', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–∫–∞–∑–∞—Ç—å", custom_id = 'clan_decline_alliance', emoji = '<:no1:1096087505159344138>'))

class ClanAlliance(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–°–¥–µ–ª–∞—Ç—å –∞–ª—å—è–Ω—Å (25000 üí∞ —É –æ–±–æ–∏—Ö –∫–ª–∞–Ω–æ–≤)", custom_id = 'clan_create_alliance', emoji = '<:create:1140288843967381527>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É", custom_id = 'clan_help_alliance', emoji = '<:help:1140288573891944579>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))


class ClanView(disnake.ui.View):
    def __init__(self, bot, clanxd):
        super().__init__()
        self.add_item(ClanViewDropdown(bot, clanxd))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class Achievements1Dropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ",
            options = [
                disnake.SelectOption(label="–ü–µ—Ä–≤–æ–±—ã—Ç–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ", description="25 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ", value = '1_achiev'),
                disnake.SelectOption(label="–ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ", description="50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ", value = '2_achiev'),
                disnake.SelectOption(label="–ü–æ—Å—Ç–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ", description="100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ", value = '3_achiev'),
                disnake.SelectOption(label="–í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã", description="1 –ø–æ–±–µ–¥–∞ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ", value = '4_achiev'),
                disnake.SelectOption(label="–ë–æ–ª—å—à–µ, –º–Ω–µ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ", description="5 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ", value = '5_achiev'),
                disnake.SelectOption(label="–í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã", description="10 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ", value = '6_achiev'),
                disnake.SelectOption(label="–ì–ª–∞–≤–Ω–æ–µ –Ω–µ —Ç–æ, –∫–∞–∫ —Ç—ã –±—å–µ—à—å, –∞ –∫–∞–∫ –¥–µ—Ä–∂–∏—à—å —É–¥–∞—Ä", description="20 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ", value = '7_achiev'),
                disnake.SelectOption(label="–ë—Ä–æ, —Ç–µ–±–µ –Ω–∞–¥–æ –±–æ–ª—å—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è", description="1000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö", value = '8_achiev'),
                disnake.SelectOption(label="–ù–µ —Å—É–µ—Ç–∏—Å—å, –≤—Å–µ–º—É —Å–≤–æ—ë –≤—Ä–µ–º—è", description="5000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö", value = '9_achiev'),
                disnake.SelectOption(label="–ö–ª–∞–Ω –æ—Ç–∞–∫—É", description="10000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö", value = '10_achiev'),
                disnake.SelectOption(label="–ü–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ –∫ —É—Å–ø–µ—Ö—É", description="50000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö", value = '11_achiev'),
                disnake.SelectOption(label="–ù–µ–±–æ—Å–∫—Ä—ë–± –ü—Ä–æ–≥—Ä–µ—Å—Å–∞", description="–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 5 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ", value = '12_achiev'),
                disnake.SelectOption(label="–ö–æ—Ä–æ–ª—å –ö–ª–∞–Ω–æ–≤", description="–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 15 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ", value = '13_achiev'),
                disnake.SelectOption(label="–í–µ—Ä—à–∏–Ω–∞ –ö–ª–∞–Ω–æ–≤–æ–≥–æ –ú–∏—Ä–∞", description="–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 30 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ", value = '14_achiev'),
                disnake.SelectOption(label="–ü–µ—Ä–≤—ã–π —Å–æ—é–∑–Ω–∏–∫", description="–ù–∞–π–º–∏—Ç–µ 1 –≥–µ—Ä–æ—è", value = '15_achiev'),
            ],
        )

class ClanQuest(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(Achievements1Dropdown())

        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–ü—Ä–µ–¥—ã–¥—É—â–∞—è', custom_id = 'achievements_next_0', emoji = '<:left:1138812764899520572>', disabled = True))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–°–ª–µ–¥—É—é—â–∞—è', custom_id = 'achievements_next_2', emoji = '<:right:1138812810743259147>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>'))

class Achievements2Dropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ",
            options = [
                disnake.SelectOption(label="–°–ª—É–∂–∏—Ç–µ–ª–∏ –ü—è—Ç–µ—Ä—ã—Ö", description="–ù–∞–π–º–∏—Ç–µ 5 –≥–µ—Ä–æ–µ–≤", value = '16_achiev'),
                disnake.SelectOption(label="–ê—Ä–º–∏—è –í–µ–ª–∏–∫–∏—Ö –ü—è—Ç–Ω–∞–¥—Ü–∞—Ç–∏", description="–ù–∞–π–º–∏—Ç–µ 15 –≥–µ—Ä–æ–µ–≤", value = '17_achiev'),
                disnake.SelectOption(label="–ú–∞—Å—Ç–µ—Ä –†–µ–∫—Ä—É—Ç–∏–Ω–≥–∞", description="–ù–∞–π–º–∏—Ç–µ 20 –≥–µ—Ä–æ–µ–≤", value = '18_achiev'),
                disnake.SelectOption(label="–ö–ª–∞–Ω–æ–≤—ã–π —Å–æ—é–∑–Ω–∏–∫", description="–°–¥–µ–ª–∞–π—Ç–µ –∞–ª—å—è–Ω—Å –∫–ª–∞–Ω–æ–≤", value = '19_achiev'),
            ],
        )

class ClanQuest2(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(Achievements2Dropdown())

        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–ü—Ä–µ–¥—ã–¥—É—â–∞—è', custom_id = 'achievements_next_1', emoji = '<:left:1138812764899520572>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, label = '–°–ª–µ–¥—É—é—â–∞—è', custom_id = 'achievements_next_3', emoji = '<:right:1138812810743259147>', disabled = True))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>'))

class ClanAttack(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'clan_accept_attack', emoji = '<:yes11:1096091626889302086>'))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanZombieAttack(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'clan_zombie_attack', emoji = '<:yes11:1096091626889302086>'))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class AttackZombieDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∑–æ–º–±–∏",
            options = [
                disnake.SelectOption(label="–ó–æ–º–±–∏ 1-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 1-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_1'),
                disnake.SelectOption(label="–ó–æ–º–±–∏ 2-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 2-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_2'),
                disnake.SelectOption(label="–ó–æ–º–±–∏ 3-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 3-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_3'),
                disnake.SelectOption(label="–ó–æ–º–±–∏ 4-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 4-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_4'),
                disnake.SelectOption(label="–ó–æ–º–±–∏ 5-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 5-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_5'),
                disnake.SelectOption(label="–ó–æ–º–±–∏ 6-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏ 6-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_6'),
                disnake.SelectOption(label="–ë–æ—Å—Å 7-–≥–æ —É—Ä–æ–≤–Ω—è", description="–ê—Ç–∞–∫–æ–≤–∞—Ç—å –±–æ—Å—Å–∞ 7-–≥–æ —É—Ä–æ–≤–Ω—è", value = 'clan_zombie_attack_7'),
            ],
        )

class AttackZombie(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(AttackZombieDropdown())
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class AttackClanDropdown(disnake.ui.Select):
    def __init__(self, bot, clan_id):
        with open('clan_sweetness.json', 'r') as f:
            clan_data = json.load(f)

        guild = bot.get_guild(960579506425446472)

        guild_clans = clan_data.get(str(guild.id), {})

        options = []
        for clan_key, clan_value in guild_clans.items():
            if isinstance(clan_value, dict):
                try:
                    if not str(clan_key) == str(clan_id):
                        role = disnake.utils.get(guild.roles, id=int(clan_key))

                        clan_name = role.name

                        options.append(disnake.SelectOption(label=f"{clan_name}", value = f'{clan_key}_clan_attack', description=f"–ù–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω {clan_name}", emoji = '<:sort:1064936267533516861>'))
                except:
                    pass

        super().__init__(
            placeholder="–ù–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω",
            options = options,
        )

class AttackClan(disnake.ui.View):
    def __init__(self, bot, clan_id):
        super().__init__()
        self.add_item(AttackClanDropdown(bot, clan_id))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanSquad(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ì–µ—Ä–æ–∏ –∫–ª–∞–Ω–∞", custom_id = 'clan_war_heroes', emoji = '<:heroes:1139674064856809524>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê—Ä–º–∏—è –∫–ª–∞–Ω–∞", custom_id = 'clan_war_army', emoji = '<:staff:1096087520023945417>', disabled = True))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanMap(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏", custom_id = 'clan_attack_zombie', emoji = '<:kill:1140278179978813600>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–π –∫–ª–∞–Ω", custom_id = 'clan_attack_castle', emoji = '<:attack:1139675138334412880>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç—Ä—è–¥", custom_id = 'clan_war_settings', emoji = '<:staff:1096087520023945417>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanVerbHero(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ù–∞–π–º", custom_id = 'clan_take_heroes', emoji = '<:get:1140280270256357396>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanHeroesDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            options = [
                disnake.SelectOption(label="–î–µ—Ä–∏–ª –î–∏–∫—Å–æ–Ω", value = 'clan_verb_1', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–î–µ–≤–æ—á–∫–∞ –ø–æ—Å—Ç-—ç–ø–æ—Ö–∏", value = 'clan_verb_2', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ì–æ–ª–æ–±—É–π –¥—Ä–æ—Ç–∏–∫", value = 'clan_verb_3', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ì—Ä–æ–±–æ–≤—â–∏—Ü–∞", value = 'clan_verb_4', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ë—Ä–∏—Ç–≤–∞", value = 'clan_verb_5', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç", value = 'clan_verb_6', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ñ–µ–ª–µ–∑–Ω—ã–π —Å—Ç—Ä–∞–∂", value = 'clan_verb_7', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ñ–Ω–µ—Ü", value = 'clan_verb_8', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ê—Ä—Å–µ–Ω–∞–ª", value = 'clan_verb_9', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å", value = 'clan_verb_10', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–í–æ–æ—Ä—É–∂—ë–Ω–Ω—ã–π –±–µ–∑—É–º–µ—Ü", value = 'clan_verb_11', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ò–∑–≥–æ–π", value = 'clan_verb_12', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ó–∞—â–∏—Ç–Ω–∏–∫ —Ä–∞—Å—Å–≤–µ—Ç–∞", value = 'clan_verb_13', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å", value = 'clan_verb_14', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ê–¥–∞", value = 'clan_verb_15', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
                disnake.SelectOption(label="–ú–µ–≥–≥–∏ –ì—Ä–∏–Ω", value = 'clan_verb_16', description="–ó–∞–≤–µ—Ä–±–æ–≤–∞—Ç—å –≥–µ—Ä–æ—è", emoji = '<:heroes:1139674064856809524>'),
            ],
        )


class ClanWar(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç—Ä—è–¥", custom_id = 'clan_war_settings', emoji = '<:staff:1096087520023945417>', row = 0))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê–ª—å—è–Ω—Å", custom_id = 'clan_war_alliance', emoji = '<:alliance:1139674067067211919>', row = 0))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ì–µ—Ä–æ–∏", custom_id = 'clan_war_heroes', emoji = '<:heroes:1139674064856809524>', row = 0))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ö–≤–µ—Å—Ç—ã", custom_id = 'clan_war_quest', emoji = '<:achievements:1139674059156754492>', row = 0, disabled = True))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–©–∏—Ç", custom_id = 'clan_war_shield', emoji = '<:shield:1139675814791762071>', row = 0))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ö–∞—Ä—Ç–∞ –∫–ª–∞–Ω–æ–≤", custom_id = 'clan_map', emoji = '<:map:1139827653298360421>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü—Ä–∞–≤–∏–ª–∞ –±–∏—Ç–≤—ã", custom_id = 'clan_battle_rules', emoji = '<:map:1139827653298360421>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ú–∞–≥–∞–∑–∏–Ω", custom_id = 'clan_war_shop', emoji = '<:shop1:1096087517150851223>', row = 1, disabled = True))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>', row = 2))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 2))

class ClanShield(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'clan_accept_shield', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanWarHeroes(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(ClanHeroesDropdown())
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.green, label = "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –≥–µ—Ä–æ–µ–≤", custom_id = 'clan_list_heroes', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_war', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanSystemRankAccept(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'clan_accept_rank', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–∫–∞–∑–∞—Ç—å", custom_id = 'clan_decline_rank', emoji = '<:no1:1096087505159344138>'))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_system', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class RankEdit(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü—Ä–∞–≤–∞ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è", custom_id = 'clan_admin_rank', emoji = '<:owner:1096087506879008868>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤", custom_id = 'clan_limit_rank', emoji = '<:staff:1096087520023945417>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–í—ã–¥–∞—Ç—å —Ä–∞–Ω–≥", custom_id = 'clan_add_rank', emoji = '<:plus:1135581260950020177>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ó–∞–±—Ä–∞—Ç—å —Ä–∞–Ω–≥", custom_id = 'clan_remove_rank', emoji = '<:minus:1135581689536594050>'))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_system', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanSystemEditDropdown(disnake.ui.Select):
    def __init__(self, ranks):
        options = []
        for rank in ranks:
            try:
                options.append(disnake.SelectOption(label=f"{rank}", value = f'{rank}_rank', description="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–Ω–≥", emoji = '<:sort:1064936267533516861>'))
            except:
                pass

        if options == []:
            options.append(disnake.SelectOption(label=f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç", description="–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç", emoji = '<:sort:1064936267533516861>'))

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–Ω–≥",
            options = options,
        )

class ClanSystemEdit(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–°–æ–∑–¥–∞—Ç—å", custom_id = 'clan_create_rank', emoji = '<:plus:1135581260950020177>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–£–¥–∞–ª–∏—Ç—å", custom_id = 'clan_delete_rank', emoji = '<:minus:1135581689536594050>'))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_system', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanSystem(disnake.ui.View):
    def __init__(self, rank):
        super().__init__()
        if rank == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", custom_id = 'clan_edit_rank', emoji = '<:dev:1135559157903261767>', disabled = True))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–≥–æ–≤", custom_id = 'clan_system_rank', emoji = '<:rating:1135562565204844644>'))
        else:
            self.add_item(ClanSystemEditDropdown(rank))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", custom_id = 'clan_edit_rank', emoji = '<:dev:1135559157903261767>'))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–≥–æ–≤", custom_id = 'clan_system_rank', emoji = '<:rating:1135562565204844644>', disabled = True))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = "–ú–µ–Ω—é", custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–í—ã—Ö–æ–¥", custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))

class ClanMembersDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            options = [
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", value = 'clan_members_rang_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", value = 'clan_members_rang_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", value = 'clan_members_online_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", value = 'clan_members_online_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", value = 'clan_members_time_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", value = 'clan_members_time_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", emoji = '<:menu1:1096091629393293494>'),
            ],
        )

class ClanMembers(disnake.ui.View):
    def __init__(self, author: int):
        super().__init__()
        self.add_item(ClanMembersDropdown())

        if not str(author) in currentClanTopPage or currentClanTopPage[str(author)] == 0:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_first_page', emoji = '<:back:1008774480778252539>', disabled = True, row = 1))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_prev_page', emoji = '<:zxc5:1009168367342587915>', disabled = True, row = 1))
        else:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_first_page', emoji = '<:back:1008774480778252539>', row = 1))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_prev_page', emoji = '<:zxc5:1009168367342587915>', row = 1))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, custom_id = 'clan_members_exit', emoji = '<:basket:1138812689502699680>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_right_page', emoji = '<:zxc4:1009168369112600728>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_members_last_page', emoji = '<:zxc7:1009168365627125861>', row = 1))

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>', row = 2))

class ClanTopShopDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            options = [
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", value = 'clan_top_rang_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", value = 'clan_top_rang_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ä–∞–Ω–≥–æ–≤", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", value = 'clan_top_online_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", value = 'clan_top_online_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é –æ–Ω–ª–∞–π–Ω–∞", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", value = 'clan_top_time_asc', description="–§–∏–ª—å—Ç—Ä: –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", emoji = '<:menu1:1096091629393293494>'),
                disnake.SelectOption(label="–ü–æ —É–±—ã–≤–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", value = 'clan_top_time_desc', description="–§–∏–ª—å—Ç—Ä: –ø–æ —É–±—ã–≤–∞–Ω–∏—é –≤—Ä–µ–º–µ–Ω–∏", emoji = '<:menu1:1096091629393293494>'),
            ],
        )

class ClanTopShop(disnake.ui.View):
    def __init__(self, author: int):
        super().__init__()
        self.add_item(ClanTopShopDropdown())

        if not str(author) in currentClanTopPage or currentClanTopPage[str(author)] == 0:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_first_page', emoji = '<:back:1008774480778252539>', disabled = True))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_prev_page', emoji = '<:zxc5:1009168367342587915>', disabled = True))
        else:
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_first_page', emoji = '<:back:1008774480778252539>'))
            self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_prev_page', emoji = '<:zxc5:1009168367342587915>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, custom_id = 'clan_top_exit', emoji = '<:basket:1138812689502699680>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_right_page', emoji = '<:zxc4:1009168369112600728>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_top_last_page', emoji = '<:zxc7:1009168365627125861>'))

class ClanDelete(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_delete', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'clan_back',  emoji = '<:no1:1096087505159344138>'))

class ClanAccept(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", custom_id = 'clan_join', emoji = '<:invitation:1145676358916255874>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É", custom_id = 'clan_report', emoji = '<:report:1142856573992042496>'))

class ClanChoice(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–≠–º–±–µ–¥", custom_id = 'clan_embed', emoji = '<:11:1096126530247204966>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è", custom_id = 'clan_request', emoji = '<:21:1096126528670138469>'))

class ClanJoin(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü—Ä–∏–Ω—è—Ç—å", custom_id = 'clan_accept', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", custom_id = 'clan_decline', emoji = '<:no1:1096087505159344138>'))

class Disabled(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–ü—Ä–∏–Ω—è—Ç—å", emoji = '<:yes11:1096091626889302086>', disabled = True))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", emoji = '<:no1:1096087505159344138>', disabled = True))

class ClanEmbed(disnake.ui.View):
    def __init__(self, title_clan, desc_clan, image, bot):
        super().__init__()
        self.title_clan = title_clan
        self.desc_clan = desc_clan
        self.image = image
        self.bot = bot

    @disnake.ui.button(style = ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'accept_nabor', emoji = '<:yes11:1096091626889302086>')
    async def button_1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        with open('clan_sweetness.json','r', encoding='utf-8') as f:
            clan = json.load(f)

        clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
        channel = database.clan.find_one({'_id': str(clanxd)})['channel_1']

        embed = disnake.Embed(title = f"{self.title_clan.content}", description = f"> {self.desc_clan.content}", color = 3092790)
        try:
            for attach in self.image.attachments:
                embed.set_image(url = str(attach))
        except:
            embed.set_image(url = self.image.content)
        await self.bot.get_channel(channel).purge(limit = 4)
        msg = await self.bot.get_channel(channel).send(embed = embed, view = ClanAccept())
        database.clan.update_one({'_id': str(msg.id)}, {'$set': {'clan': clanxd}}, upsert = True)

        for child in self.children:
            if isinstance(child, disnake.ui.Button): 
                child.disabled = True

        await inter.response.edit_message(view=self)

    @disnake.ui.button(style = ButtonStyle.secondary, label = "–û—Ç–º–µ–Ω–∞", emoji = '<:no1:1096087505159344138>')
    async def button_2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await inter.message.delete()

class ClanNabor(disnake.ui.View):
    def __init__(self, clan_name, desc_clan, request, propositions, peoples, image, bot):
        super().__init__()
        self.clan_name = clan_name
        self.desc_clan = desc_clan
        self.request = request
        self.propositions = propositions
        self.peoples = peoples
        self.image = image
        self.bot = bot

    @disnake.ui.button(style = ButtonStyle.secondary, label = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", custom_id = 'accept_nabor', emoji = '<:yes11:1096091626889302086>')
    async def button_1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        embed = disnake.Embed(title = f"–ù–∞–±–æ—Ä –≤ –∫–ª–∞–Ω {self.clan_name}", description = f"> {self.desc_clan.content}", color = 3092790)
        try:
            for attach in self.image.attachments:
                embed.set_image(url = str(attach))
        except:
            embed.set_image(url = self.image.content)

        embed.add_field(name = "–ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç –≤–∞—Å", value = f"{self.request.content}", inline = False)
        embed.add_field(name = "–ß—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –¥–∞—Ç—å", value = f"{self.propositions.content}", inline = False)
        embed.add_field(name = "–ü–æ –ø–æ–≤–æ–¥—É –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω", value = f"{self.peoples.content}", inline = False)
        await self.bot.get_channel( ).send(embed = embed)

        for child in self.children:
            if isinstance(child, disnake.ui.Button):
                child.disabled = True

        await inter.message.edit(view=self)
        embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f"{inter.author.mention}, **–í–∞—à** –ø–æ—Å—Ç –æ **–Ω–∞–±–æ—Ä–µ** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", color = 3092790)
        embed.set_thumbnail(url = inter.author.display_avatar.url)
        await inter.send(embed = embed)
    @disnake.ui.button(style = ButtonStyle.secondary, label = "–û—Ç–º–µ–Ω–∞", custom_id = 'clan_back', emoji = '<:no1:1096087505159344138>')
    async def button_2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction): pass

class ClanShopAccept(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, custom_id = 'yesshop', emoji = '<:yes11:1096091626889302086>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>'))

class ClanAdmin(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–î–æ–±–∞–≤–∏—Ç—å', custom_id = 'clan_add_admin', emoji = '<:plus1:1096093185282945074>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–£–¥–∞–ª–∏—Ç—å', custom_id = 'clan_remove_admin', emoji = '<:minus1:1096093188013441184>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>'))

class ClanBan(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–î–æ–±–∞–≤–∏—Ç—å', custom_id = 'clan_add_ban', emoji = '<:plus1:1096093185282945074>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–£–¥–∞–ª–∏—Ç—å', custom_id = 'clan_remove_ban', emoji = '<:minus1:1096093188013441184>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>'))

class ProfileClanView(disnake.ui.View):
    def __init__(self):
        super().__init__()

        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', custom_id = 'clan_manage', emoji = '<:dev:1135559157903261767>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞', custom_id = 'clan_members', emoji = '<:staff:1096087520023945417>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ü–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω', custom_id = 'clan_leave', emoji = '<:exit1:1096087549597990922>', row = 1))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤', custom_id = 'clan_system', emoji = '<:star:1139827652010709092>', row = 2))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–ö–∞—Ä—Ç–∞ –∫–ª–∞–Ω–æ–≤‚†Ä', custom_id = 'clan_map', emoji = '<:map:1139827653298360421>', row = 2))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–í–æ–π–Ω–∞ –∫–ª–∞–Ω–æ–≤', custom_id = 'clan_war', emoji = '<:war:1139827649800319016>', row = 2))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.secondary, label = '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', custom_id = 'achievements_main', emoji = '<:achievements:1096087534913728552>', row = 3))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>', row = 3))

class ClanInvite(disnake.ui.View):
    def __init__(self, clan_owner, bot, name): 
        super().__init__()
        self.clan_owner = clan_owner
        self.bot = bot
        self.name = name

    @disnake.ui.button(style = ButtonStyle.secondary, custom_id = 'yes_invite', emoji = '<:yes11:1096091626889302086>')
    async def button_1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        with open('clan_sweetness.json','r', encoding='utf-8') as f:
            clan = json.load(f)

        clanxd = clan[str(960579506425446472)][str(self.clan_owner.id)]
        role_id = int(clan[str(960579506425446472)][str(clanxd)]['Role'])

        clan_invite[str(inter.author.id)] = int(role_id)
        msg = await self.bot.get_channel(961617052085415956).send(inter.author.id)

        cluster.sweetness.clan.update_one({'_id': str(inter.author.id)}, {'$set': {'rank': f'–£—á–∞—Å—Ç–Ω–∏–∫'}}, upsert = True)

        embed = disnake.Embed(description = f'### > {inter.author.mention} —Ç–µ–ø–µ—Ä—å —Ç—ã –≤ –∫–ª–∞–Ω–µ **{self.name}**!', color = 3092790)
        embed.set_author(name = f"–ö–ª–∞–Ω—ã | {self.bot.get_guild(960579506425446472).name}", icon_url = self.bot.get_guild(960579506425446472).icon.url)
        embed.set_footer(text = f"–î–æ–±–∞–≤–∏–ª –≤ –∫–ª–∞–Ω: {self.clan_owner}", icon_url = inter.author.display_avatar.url)
        embed.set_image(url = "https://media.discordapp.net/attachments/1146880953743061143/1147985480131031050/file.jpg?width=676&height=676")
        await inter.response.edit_message(embed = embed, components = [])

        embed = disnake.Embed(description = f'### > –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω <@&{role_id}>', color = 3092790)
        embed.set_author(name = f"–ö–ª–∞–Ω—ã | {self.bot.get_guild(960579506425446472).name}", icon_url = self.bot.get_guild(960579506425446472).icon.url)
        embed.set_thumbnail(url = inter.author.display_avatar.url)
        embed.set_footer(text = f"–î–æ–±–∞–≤–∏–ª –≤ –∫–ª–∞–Ω: {self.clan_owner}", icon_url = self.clan_owner.display_avatar.url)
        await self.bot.get_channel(int(clan[str(960579506425446472)][str(clanxd)]['TextChannel'])).send(inter.author.mention, embed = embed)

        input = datetime.datetime.now()
        data = int(input.timestamp())
        cluster.sweetness.clan.update_one({'_id': str(inter.author.id)}, {'$set': {'tip_data': f'<t:{data}:F>'}}, upsert = True)

        clan[str(960579506425446472)][str(clanxd)]['ClanMembers'] += 1
        clan[str(960579506425446472)][str(inter.author.id)] = clanxd
        with open('clan_sweetness.json','w') as f:
            json.dump(clan,f)

    @disnake.ui.button(style = ButtonStyle.secondary, custom_id = 'no_invite', emoji = '<:no1:1096087505159344138>')
    async def button_2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        embed = disnake.Embed(title = "–ö–ª–∞–Ω", description = f'–£ {inter.author.mention} —É–∂–µ –µ—Å—Ç—å –∫–ª–∞–Ω!', color = 3092790)
        await inter.message.edit(embed = embed)

class ClanManageDropdown(disnake.ui.Select):
    def __init__(self):
        super().__init__(
            options = [
                disnake.SelectOption(label="–ü–æ–ª–æ–∂–∏—Ç—å –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç", value = 'clan_deposit', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:take:1096087521978486894>'),
                disnake.SelectOption(label="–ö–ª–∞–Ω–æ–≤—ã–π –æ–Ω–ª–∞–π–Ω", value = 'clan_online', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:microphone:1140294304556908695>'),
                disnake.SelectOption(label="–¢–æ–ø –æ–Ω–ª–∞–π–Ω–∞", value = 'clan_top', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:microphone:1140294304556908695>'),
                disnake.SelectOption(label="–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è", value = 'clan_admin', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤", emoji = '<:plus1:1096093185282945074>'),
                disnake.SelectOption(label="–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", value = 'clan_desc', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ä—à–∏—Ö", emoji = '<:msg:1096090258107539486>'),
                disnake.SelectOption(label="–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä", value = 'clan_avatar', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ä—à–∏—Ö", emoji = '<:clan_role:1096087544715825184>'),
                disnake.SelectOption(label="–ó–∞–±–∞–Ω–∏—Ç—å/–†–∞–∑–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", value = 'clan_ban', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ä—à–∏—Ö", emoji = '<:unavailable:1096087529243037828>'),
                disnake.SelectOption(label="–°–ø–∏—Å–æ–∫ –¥–µ–ø–æ–∑–∏—Ç–∞", value = 'clan_list_of_deposit', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:bank:1096087553469333614>'),
                disnake.SelectOption(label="–°–ø–∏—Å–æ–∫ –ß–° –∫–ª–∞–Ω–∞", value = 'clan_blacklist', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:list_fail:1096087494036029460>'),
                disnake.SelectOption(label="–ö–ª–∞–Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω", value = 'clan_shop', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ—Ö", emoji = '<:shop1:1096087517150851223>'),
                disnake.SelectOption(label="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", value = 'clan_send', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤", emoji = '<:edit1:1096092966570971218>'),
                disnake.SelectOption(label="–ü–æ—Å—Ç –æ –Ω–∞–±–æ—Ä–µ", value = 'clan_post', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤", emoji = '<:send:1138558137373315185>'),
                disnake.SelectOption(label="–ü–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–ª–∞–Ω–∞", value = 'clan_owner', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞", emoji = '<:owner:1096087506879008868>'),
                disnake.SelectOption(label="–í–∫–ª/–í—ã–∫–ª —Ä–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è", value = 'clan_meet', description="–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç–∞—Ä—à–∏—Ö", emoji = '<:meet:1096087500000333956>'),
                disnake.SelectOption(label="–£–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω", value = 'clan_delete', description="–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤", emoji = '<:basket:1138812689502699680>'),
            ],
        )

class ClanManage(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(ClanManageDropdown())
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, label = '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞', custom_id = 'clan_invite', emoji = '<:invites:1096087491125203075>', row = 1))
        self.add_item(disnake.ui.Button(style = ButtonStyle.green, label = '–í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞', custom_id = 'clan_kick', emoji = '<:minus_man1:1096087502210744331>', row = 1))
        self.add_item(disnake.ui.Button(style = ButtonStyle.blurple, label = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å', custom_id = 'clan_back', emoji = '<:back2:1096126812767125504>', row = 2))
        self.add_item(disnake.ui.Button(style = ButtonStyle.red, label = '–ó–∞–∫—Ä—ã—Ç—å', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>', row = 2))

class ClanBack(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>'))

class ClanShop(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '1shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '2shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '3shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '4shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '5shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = ButtonStyle.secondary, custom_id = '6shop',emoji = '<:buy11:1147510217756643448>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.blurple, label = '–ú–µ–Ω—é', custom_id = 'clan_back', emoji = '<:menu1:1096091629393293494>'))
        self.add_item(disnake.ui.Button(style = disnake.ButtonStyle.red, label = '–í—ã—Ö–æ–¥', custom_id = 'clan_exit', emoji = '<:basket:1138812689502699680>'))

class ClanProfileCog(commands.Cog):
    def __init__(self, bot: commands.Bot(intents = disnake.Intents.all(), command_prefix = 'test!')):
        self.bot = bot

    @commands.Cog.listener()
    async def on_message(self, message):
        await self.bot.process_commands(message)

        if message.author.id == 992089934213152848:
            if message.channel.id == 961617052085415956:
                if not disnake.utils.get(message.guild.members, id = int(message.content)) == None:
                    member = disnake.utils.get(message.guild.members, id = int(message.content))
                    await member.add_roles(disnake.utils.get(message.guild.roles, id = 961529522082185226))

                    role = disnake.utils.get(message.guild.roles, id = int(clan_invite[str(message.content)]))
                    await member.add_roles(role)
                    return await message.delete()
                
        if message.author.bot:
            return

    @commands.slash_command(description='–ü—Ä–æ—Ñ–∏–ª—å')
    async def clan_profile(self, inter, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: disnake.Member = None):
        await inter.response.defer()

        if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == inter.author or –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == None:
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = inter.author

        profile_user[inter.author.id] = –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id

        with open('clan_sweetness.json', 'r', encoding='utf-8') as f:
            clan = json.load(f)

        if str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id) not in clan[str(inter.guild.id)]:
            clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
            with open('clan_sweetness.json', 'w') as f:
                json.dump(clan, f)

        embed = disnake.Embed(color = 3092790)
        embed.set_author(name = "–ö–ª–∞–Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å", icon_url = inter.guild.icon.url)
        embed.set_thumbnail(url=inter.author.display_avatar.url)

        if clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
            embed.description=f'{inter.author.mention}, —É {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention} –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!'
            return await inter.send(embed=embed, ephemeral=True)

        clanxd = clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)]
        if database.clan_online.count_documents({"_id": str(clanxd)}) == 0:
            database.clan_online.insert_one({"_id": str(clanxd), "clan_online": 0})

        if database.clan_rating.count_documents({"_id": str(clanxd)}) == 0:
            database.clan_rating.insert_one({"_id": str(clanxd), "rating": 0})

        if database.clan_alliance.count_documents({"_id": str(clanxd)}) == 0:
            database.clan_alliance.insert_one({"_id": str(clanxd), "alliance": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"})

        clan_take = clan[str(inter.guild.id)][str(clanxd)]
        clan_online = database.clan_online.find_one({'_id': str(clanxd)})['clan_online']
        clan_points = clan_online // 3600
        clan_level = clan_points // 20 + 1

        clan_take['Points'] = int(clan_points)
        clan_take['Level'] = int(clan_level)
        with open('clan_sweetness.json', 'w') as f:
            json.dump(clan, f)
        try:
            role = disnake.utils.get(inter.guild.roles, id=int(clan_take['Role']))
            clan_name = role.name
        except:
            embed.description=f'{inter.author.mention}, —É **–í–∞—Å** –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!'
            return await inter.send(embed=embed, ephemeral=True)
        clan_description = clan_take['Description']
        clan_owner = f"<@{clan_take['Owner']}>"
        clan_admins = ""

        for member in reversed(role.members):
            try:
                rank_member = cluster.sweetness.clan.find_one({'_id': str(member.id)})['rank']
                zam = cluster.sweetness.clan.find_one({'_id': str(rank_member)})['admin']

                if zam == "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" and member.id not in clan_take['Admin']:
                    clan_take['Admin'].append(member.id)
                    with open('clan_sweetness.json', 'w') as f:
                        json.dump(clan, f)
            except:
                pass

        if not clan_take['Admin']:
            clan_admins = "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else:
            for admin in clan[str(inter.guild.id)][str(clanxd)]["Admin"]:
                clan_admins += f"<@{admin}>, "

        clan_role = f"<@&{clanxd}>"
        clan_id = clanxd
        clan_date = f"{clan_take['Time']}"
        clan_points = f"{clan_take['Points']}"
        clan_level = f"{clan_take['Level']}"
        clan_limit = f"{clan_take['Limit']}"
        clan_balance = f"{clan_take['Balance']}"
        clan_rating = database.clan_rating.find_one({'_id': str(clanxd)})['rating']
        clan_alliance = database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']
        if not clan_alliance == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
            clan_alliance = f"<@&{clan_alliance}>"

        role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

        embed = disnake.Embed(
            description=f'# <:clan:1096087543398801601> –ö–ª–∞–Ω {clan_name}\n\n<:msg:1096090258107539486> **–û–ø–∏—Å–∞–Ω–∏–µ**\n```{clan_description}``` \
                \n<:owner:1096087506879008868> **–í–ª–∞–¥–µ–ª–µ—Ü**: {clan_owner}\n<:admin_clan:1096090695888031794> **–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏**: {clan_admins} \
                \n<:clan_role:1096087544715825184> **–†–æ–ª—å:** {clan_role}\n<:calendar:1096087540261462127> **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {clan_date} \
                \n<:point:1096087512834912398> **–û—á–∫–∏ –∫–ª–∞–Ω–∞:** {clan_points}\n<:level:1096087492542857346> **–£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞:** {clan_level} \
                \n<:top:1096087524985810964> **–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–∞:** {clan_rating} \
                \n<:alliance:1139674067067211919> **–ê–ª—å—è–Ω—Å:** {clan_alliance} \
                \n<:id:1096087488625377421> **ID:** {clan_id}', color=3092790)
        embed.add_field(name='<:staff:1096087520023945417> –£—á–∞—Å—Ç–Ω–∏–∫–∏', value=f'```{len(role_take.members)}/{clan_limit}```')
        embed.add_field(name='<:coin1:1096094598507532479> –ë–∞–ª–∞–Ω—Å', value=f'```{clan_balance}```')
        embed.add_field(name='<:microphone:1140294304556908695> –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω',
                        value=f'```üïì {clan_online // hour}—á. {(clan_online - (clan_online // hour * hour)) // 60}–º.```')

        clan_url = clan_take['Thumbnail']
        if clan_url != '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
            embed.set_thumbnail(url=clan_url)

        await inter.send(inter.author.mention, embed=embed, view=ProfileClanView())
    
    @commands.Cog.listener()
    async def on_dropdown(self, inter):
        custom_id = inter.values[0]

        with open('clan_sweetness.json','r', encoding='utf-8') as f: 
            clan = json.load(f)
        if custom_id[-6:] == 'achiev':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–ª–∞–Ω–æ–≤', color = 3092790)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))
            clan_alliance = database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']

            clan_online = database.clan_online.find_one({'_id': str(clanxd)})['clan_online']
            clan_points = clan_online // 3600
            clan_level = clan_points // 20 + 1

            embed = disnake.Embed(description = "", color = 3092790)
            embed.set_author(name = f"–ê—á–∏–≤–∫–∏ –∫–ª–∞–Ω–∞ ‚Äî {clan_name} | {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            match custom_id:
                case "1_achiev":
                    embed.description += "25 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(role_take.members)}/25 —É—á.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```500 üí∞```")
                case "2_achiev":
                    embed.description += "50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(role_take.members)}/50 —É—á.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```2000 üí∞```")
                case "3_achiev":
                    embed.description += "100 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(role_take.members)}/100 —É—á.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```5000 üí∞```")
                case "4_achiev":
                    embed.description += "1 –ø–æ–±–µ–¥–∞ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_win.find_one({'_id': str(clanxd)})['win'])}/1]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```500 üí∞```")
                case "5_achiev":
                    embed.description += "5 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_win.find_one({'_id': str(clanxd)})['win'])}/5]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```1000 üí∞```")
                case "6_achiev":
                    embed.description += "10 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_win.find_one({'_id': str(clanxd)})['win'])}/10]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```2000 üí∞```")
                case "7_achiev":
                    embed.description += "20 –ø–æ–±–µ–¥ –≤ –∫–ª–∞–Ω–æ–≤–æ–π –±–∏—Ç–≤–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_win.find_one({'_id': str(clanxd)})['win'])}/25]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```5000 üí∞```")
                case "8_achiev":
                    embed.description += "1000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online'])}/36.000.00]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```1000 üí∞```")
                case "9_achiev":
                    embed.description += "5000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online'])}/180.000.00—Å.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```5000 üí∞```")
                case "10_achiev":
                    embed.description += "10000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online'])}/360.000.00—Å.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```10000 üí∞```")
                case "11_achiev":
                    embed.description += "50000 —á–∞—Å–æ–≤ –≤ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π—Å–∞—Ö"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online'])}/180.000.000—Å.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```50000 üí∞```")
                case "12_achiev":
                    embed.description += "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 5 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(clan_level)}/5 —É—Ä.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```750 üí∞```")
                case "13_achiev":
                    embed.description += "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 15 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(clan_level)}/15 —É—Ä.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```2500 üí∞```")
                case "14_achiev":
                    embed.description += "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 30 —É—Ä–æ–≤–µ–Ω—å –≤ –∫–ª–∞–Ω–µ"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{int(clan_level)}/30 —É—Ä.]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```5000 üí∞```")
                case "15_achiev":
                    embed.description += "–ù–∞–π–º–∏—Ç–µ 1 –≥–µ—Ä–æ—è"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])}/1]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```5000 üí∞```")
                case "16_achiev":
                    embed.description += "–ù–∞–π–º–∏—Ç–µ 5 –≥–µ—Ä–æ–µ–≤"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])}/5]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```25000 üí∞```")
                case "17_achiev":
                    embed.description += "–ù–∞–π–º–∏—Ç–µ 15 –≥–µ—Ä–æ–µ–≤"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])}/15]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```75000 üí∞```")
                case "18_achiev":
                    embed.description += "–ù–∞–π–º–∏—Ç–µ 20 –≥–µ—Ä–æ–µ–≤"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])}/20]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```150000 üí∞```")
                case "19_achiev":
                    embed.description += "–°–¥–µ–ª–∞–π—Ç–µ –∞–ª—å—è–Ω—Å –∫–ª–∞–Ω–æ–≤"
                    embed.add_field(name=f"\n<:progress:1136957793480474664> –ü—Ä–æ–≥—Ä–µ—Å—Å", value=f"```‚Ä¢ [{'1' if not str(database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']) == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç' else '0'}/1]```")
                    embed.add_field(name=f"\n<:gift:1136967445530284073> –ù–∞–≥—Ä–∞–¥–∞", value=f"```1000000 üí∞```")

            value_match = re.search(r'\d+', custom_id)
            id = int(value_match.group()) if value_match else 0
            achievement[str(inter.author.id)] = id
            
            value_match = re.search(r'\d+', embed.fields[1].value)
            reward_amount = int(value_match.group()) if value_match else 0
            achievement_reward[str(inter.author.id)] = reward_amount

            embed.set_footer(text = f"–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}", icon_url = inter.guild.icon.url)
            try:
                asfasf = cluster.sweetness.achievements.find_one({'_id': str(inter.author.id)})[f"{str(id)}"]
                await inter.response.edit_message(embed = embed, view = BackAchievements(inter.author, id))
            except:
                cluster.sweetness.achievements.update_one({'_id': str(inter.author.id)}, {'$set': {f"{str(id)}": "NO"}}, upsert = True)
                await inter.response.edit_message(embed = embed, view = BackAchievements(inter.author, id))

        if custom_id.endswith('alliance'):
            embed = disnake.Embed(color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = f"–ê–ª—å—è–Ω—Å", icon_url = inter.guild.icon.url)

            if not inter.message.content == inter.author.mention:
                embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**'
                return await inter.send(ephemeral = True, embed = embed)

            role_alliance = disnake.utils.get(inter.guild.roles, id = int(custom_id[:-9]))
            clan_take_alliance = clan[str(inter.guild.id)][str(role_alliance.id)]

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan_take = clan[str(inter.guild.id)][str(clanxd)]
            clan_name = disnake.utils.get(inter.guild.roles, id = int(clanxd))

            clan_owner = disnake.utils.get(inter.guild.members, id = int(clan_take_alliance['Owner']))

            clan_balance = f"{clan_take['Balance']}"
            if int(25000) > int(clan_balance):
                embed.description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**'
                return await inter.response.edit_message(embed = embed)
            
            clan_balance = f"{clan_take_alliance['Balance']}"
            if int(25000) > int(clan_balance):
                embed.description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**'
                return await inter.response.edit_message(embed = embed)

            embed.description = f'{inter.author.mention}, **–í–∞—à –∑–∞–ø—Ä–æ—Å** –Ω–∞ **—Å–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—è–Ω—Å–∞** –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω **–∫–ª–∞–Ω-–ª–∏–¥–µ—Ä—É** {clan_owner.mention}.'
            await inter.response.edit_message(embed = embed, view = ClanWar())

            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ê–ª—å—è–Ω—Å–∞", icon_url = inter.guild.icon.url)
            embed.description = f"{clan_owner.mention}, **–í–∞–º** –ø–æ—Å—Ç—É–ø–∏–ª–∞ **–∑–∞—è–≤–∫–∞** –æ—Ç –ª–∏–¥–µ—Ä–∞ {inter.author.mention} –Ω–∞ **—Å–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—è–Ω—Å–∞** —Å –∫–ª–∞–Ω–æ–º {clan_name.name}."
            msg = await clan_owner.send(content = clan_owner.mention, embed = embed, view = ClanAllianceView())
            database.channels.update_one({'_id': str(msg.id)}, {'$set': {'alliance': clan_take}}, upsert = True)

        if custom_id.startswith("clan_zombie_attack"):
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"

            if cluster.sweetness.clan_attack.count_documents({"_id": str(clanxd)}) == 0:
                cluster.sweetness.clan_attack.insert_one({"_id": str(clanxd), "attack": "–ú–æ–∂–Ω–æ", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

            clan_attack_choice[str(inter.author.id)] = str(custom_id[-1:])

            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏", icon_url = inter.guild.icon.url)
            embed.description = f"{inter.author.mention}, **–í—ã** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ **–∞—Ç–∞–∫–æ–≤–∞—Ç—å** –∑–æ–º–±–∏ {custom_id[-1:]}-–æ–≥–æ —É—Ä–æ–≤–Ω—è?\n\n**–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç**"
            return await inter.response.edit_message(embed = embed, view = ClanZombieAttack())

        if custom_id.endswith("_clan_attack"):
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"

            if cluster.sweetness.clan_attack.count_documents({"_id": str(clanxd)}) == 0:
                cluster.sweetness.clan_attack.insert_one({"_id": str(clanxd), "attack": "–ú–æ–∂–Ω–æ", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

            clan_attack_choice[str(inter.author.id)] = str(custom_id[:-12])

            if str(custom_id[:-12]) == str(clanxd):
                embed = disnake.Embed(color = 3092790)
                embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∞—Ç–∞–∫–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–ª–∞–Ω"
                return await inter.response.edit_message(embed = embed, view = ClanAttack())
            
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
            embed.description = f"{inter.author.mention}, **–í—ã** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ **–∞—Ç–∞–∫–æ–≤–∞—Ç—å** –∫–ª–∞–Ω <@&{custom_id[:-12]}>?\n\n**–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç**"
            return await inter.response.edit_message(embed = embed, view = ClanAttack())
        
        if custom_id.startswith("clan_zombie"):
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"

            if cluster.sweetness.clan_attack.count_documents({"_id": str(clanxd)}) == 0:
                cluster.sweetness.clan_attack.insert_one({"_id": str(clanxd), "attack": "–ú–æ–∂–Ω–æ", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏", icon_url = inter.guild.icon.url)
            embed.description = f"{inter.author.mention}, **–í—ã** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ **–∞—Ç–∞–∫–æ–≤–∞—Ç—å** –∑–æ–º–±–∏ {custom_id[-1:]}-–æ–≥–æ —É—Ä–æ–≤–Ω—è?\n\n**–°–ª–µ–¥—É—é—â–µ–µ –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç**"
            return await inter.response.edit_message(embed = embed, view = ClanShield())

        if custom_id.startswith("clan_verb"):
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            clan_hero_number = custom_id[10:]

            clan_choice_hero[str(inter.author.id)] = clan_hero_number

            return await inter.response.edit_message(attachments=None, file = disnake.File(f"clan_hero_{clan_hero_number}.jpg"), embed = None, view = ClanVerbHero())

        if custom_id.startswith("clan_members"):

            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = utils.get(inter.guild.members, id=profile_user[inter.author.id])

            history_data = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})

            membersID = []
            tip_data_clan = []
            member_data_clan = []
            tip_time_time = []

            items_per_page = 10
            for member in reversed(role.members):
                membersID.append(member.id)

            embed = Embed(color=3092790)
            embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_avatar.url)
            embed.description = f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - **{len(membersID)}**"

            items_per_page = 10

            if str(inter.author.id) not in sort_clan_top:
                sort_clan_top[str(inter.author.id)] = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

            if custom_id == "clan_members_rang_asc":
                sort_clan_top[str(inter.author.id)] = "–†–∞–Ω–≥–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
                reason = history_data.get("prize", ["-"])
                dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
                
                pattern = r"<t:(\d+):F>"
                timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
                
                # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
                sorted_dates_asc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)))
                tip_data = sorted_dates_asc

            elif custom_id == "clan_members_rang_desc":
                sort_clan_top[str(inter.author.id)] = "–†–∞–Ω–≥–∏ –ø–æ —É–±—ã–≤–∞–Ω–∏—é"
                reason = history_data.get("prize", ["-"])
                dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
    
                pattern = r"<t:(\d+):F>"
                timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
                
                sorted_dates_desc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)), reverse=True)
                tip_data = sorted_dates_desc

            if custom_id == "clan_members_online_asc":
                sort_clan_top[str(inter.author.id)] = "–û–Ω–ª–∞–π–Ω –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é"
                reason = history_data.get("prize", ["-"])
                dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
                
                pattern = r"<t:(\d+):F>"
                timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
                
                # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
                sorted_dates_asc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)))
                tip_data = sorted_dates_asc

            elif custom_id == "clan_members_online_desc":
                sort_clan_top[str(inter.author.id)] = "–û–Ω–ª–∞–π–Ω –ø–æ —É–±—ã–≤–∞–Ω–∏—é"
                reason = history_data.get("prize", ["-"])
                dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
    
                pattern = r"<t:(\d+):F>"
                timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
                
                sorted_dates_desc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)), reverse=True)
                tip_data = sorted_dates_desc

            elif custom_id == "clan_members_time_asc":
                sort_clan_top[str(inter.author.id)] = "–í—Ä–µ–º—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
                tip_data = history_data.get("data", ["-"])

                prizes = cluster.sweetness.clanonline.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["online"]

                pattern = r'\d+'
                prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]

                sorted_prizes_asc = [prize for _, prize in sorted(zip(prize_values, prizes))]

                reason = sorted_prizes_asc

            elif custom_id == "clan_members_time_desc":
                sort_clan_top[str(inter.author.id)] = "–í—Ä–µ–º—è –ø–æ —É–±—ã–≤–∞–Ω–∏—é"
                tip_data = history_data.get("data", ["-"])

                prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]

                pattern = r'\d+'
                prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]

                sorted_prizes_desc = [prize for _, prize in sorted(zip(prize_values, prizes), reverse=True)]

                reason = sorted_prizes_desc
            else:
                reason = history_data.get("prize", ["-"])
                tip_data = history_data.get("data", ["-"])

            if str(inter.author.id) not in currentClanTopPage:
                currentClanTopPage[str(inter.author.id)] = 0

            pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]

            currentClanTopPage[str(inter.author.id)] = 0

            description = "\n".join(f"**{tip}**" for tip in pages[currentClanTopPage[str(inter.author.id)]])

            embed.add_field(name="`  –î–∞—Ç–∞  `", value=description)

            pages1 = [reason[i:i + items_per_page] for i in range(0, len(reason), items_per_page)]
            description1 = "\n".join(reasons for reasons in pages1[currentClanTopPage[str(inter.author.id)]][:10])
            embed.add_field(name="`  –ü—Ä–∏–∑  `", value=description1)

            pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
            embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentClanTopPage[str(inter.author.id)] + 1} –∏–∑ {len(pages)}",
                                icon_url="https://cdn.discordapp.com/attachments/1091732133111939135/1109845138764738653/menu.png")
            embed.set_author(name=f"–ò—Å—Ç–æ—Ä–∏—è {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å} | {inter.guild}", icon_url=inter.guild.icon.url)
            await inter.response.edit_message(embed=embed, view=ClanTopShop(inter.author.id))

        #if custom_id.startswith("clan_top"):
#
        #    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = utils.get(inter.guild.members, id=profile_user[inter.author.id])
#
        #    history_data = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})
#
        #    embed = Embed(color=3092790)
        #    embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_avatar.url)
        #    embed.description = f"–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–æ –∫–µ–π—Å–æ–≤: **{len(history_data['prize'])}**"
#
        #    items_per_page = 10
#
        #    if str(inter.author.id) not in sort_clan_top:
        #        sort_clan_top[str(inter.author.id)] = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
#
        #    if custom_id == "clan_top_prize_asc":
        #        sort_clan_top[str(inter.author.id)] = "–ü—Ä–∏–∑—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é"
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_asc = [prize for _, prize in sorted(zip(prize_values, prizes))]
#
        #        reason = sorted_prizes_asc
#
        #    elif custom_id == "clan_top_prize_desc":
        #        sort_clan_top[str(inter.author.id)] = "–ü—Ä–∏–∑—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é"
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_desc = [prize for _, prize in sorted(zip(prize_values, prizes), reverse=True)]
#
        #        reason = sorted_prizes_desc
        #    else:
        #        reason = history_data.get("prize", ["-"])
        #        tip_data = history_data.get("data", ["-"])
#
        #    if str(inter.author.id) not in currentClanTopPage:
        #        currentClanTopPage[str(inter.author.id)] = 0
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
#
        #    currentClanTopPage[str(inter.author.id)] = 0
#
        #    description = "\n".join(f"**{tip}**" for tip in pages[currentClanTopPage[str(inter.author.id)]])
#
        #    embed.add_field(name="`  –î–∞—Ç–∞  `", value=description)
#
        #    pages1 = [reason[i:i + items_per_page] for i in range(0, len(reason), items_per_page)]
        #    description1 = "\n".join(reasons for reasons in pages1[currentClanTopPage[str(inter.author.id)]][:10])
        #    embed.add_field(name="`  –ü—Ä–∏–∑  `", value=description1)
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
        #    embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentClanTopPage[str(inter.author.id)] + 1} –∏–∑ {len(pages)}",
        #                        icon_url="https://cdn.discordapp.com/attachments/1091732133111939135/1109845138764738653/menu.png")
        #    embed.set_author(name=f"–ò—Å—Ç–æ—Ä–∏—è {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å} | {inter.guild}", icon_url=inter.guild.icon.url)
        #    await inter.response.edit_message(embed=embed, view=ClanTopShop(inter.author.id))

        if custom_id[-4:] == "rank":

            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_author(name = "–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            currentRankChoice[str(inter.author.id)] = custom_id[:-5]

            embed = disnake.Embed(description = f'### > {inter.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å', color = 3092790)
            embed.set_author(name = f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–≥–æ–º {custom_id[:-5]}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed=embed, view = RankEdit())

        if custom_id[:4] == 'clan':

            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = '–ö–ª–∞–Ω', description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            if clanxd == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                embed = disnake.Embed(description = f'{inter.author.mention}, –£ **–í–∞—Å** –Ω–µ—Ç—É **–∫–ª–∞–Ω–∞**!', color = disnake.Color.red())
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.response.edit_message(ephemeral = True, embed = embed)
            
            if custom_id == 'clan_delete':
                if clan[str(inter.guild.id)][clanxd]['Owner'] == inter.author.id:
                    embed = disnake.Embed(color = 3092790, title = '–£–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω', description = f"{inter.author.mention}, **–í—ã** —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω?!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanDelete())
                else:
                    embed = disnake.Embed(color = 3092790, title = '–£–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_owner':
                if clan[str(inter.guild.id)][clanxd]['Owner'] == inter.author.id:
                    clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                    if clan[str(inter.guild.id)][str(clanxd)]['Owner'] == inter.author.id:
                        components = [disnake.ui.TextInput(label="–ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",style=disnake.TextInputStyle.paragraph, max_length=25)]
                        await inter.response.send_modal(title=f"–ü–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–ª–∞–Ω–∞",custom_id = "clan_owner", components=components)
                    else:
                        embed = disnake.Embed(color = 3092790, title = '–ü–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–ª–∞–Ω–∞', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_admin':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    embed = disnake.Embed(
                        title = f'–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞', color = 3092790,
                        description = f'–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç: {inter.author.mention}\n**–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é',
                    ).set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanAdmin())
                else:
                    embed = disnake.Embed(color = 3092790, title = '–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())
                    
            if custom_id == 'clan_ban':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    embed = disnake.Embed(
                        title = f'–ó–∞–±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', color = 3092790,
                        description = f'–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç: {inter.author.mention}\n**–í—ã–±–µ—Ä–∏—Ç–µ** –æ–ø–µ—Ä–∞—Ü–∏—é ',
                    ).set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBan())
                else:
                    embed = disnake.Embed(color = 3092790, title = '–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º/–ó–∞–º–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_desc':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    components = [disnake.ui.TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc clan",custom_id = "–û–ø–∏—Å–∞–Ω–∏–µ",style=disnake.TextInputStyle.paragraph, max_length=350)]
                    return await inter.response.send_modal(title=f"–û–ø–∏—Å–∞–Ω–∏–µ",custom_id = "clan_desc", components=components)
                if inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    components = [disnake.ui.TextInput(label="–û–ø–∏—Å–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc clan",custom_id = "–û–ø–∏—Å–∞–Ω–∏–µ",style=disnake.TextInputStyle.paragraph, max_length=350)]
                    return await inter.response.send_modal(title=f"–û–ø–∏—Å–∞–Ω–∏–µ",custom_id = "clan_desc", components=components)
                else:
                    embed = disnake.Embed(color = 3092790, title = '–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º/–ó–∞–º–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_avatar':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    embed = disnake.Embed(
                        description = f"{inter.author.mention} –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ **–§–æ—Ç–æ** —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É **–∫–ª–∞–Ω–∞**",
                        color = 3092790,
                    ).set_thumbnail(url = inter.author.display_avatar.url).set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º", icon_url = inter.guild.icon.url)
                    await inter.response.edit_message(embed = embed, components = [])
    
                    def check(m):
                        return m.author.id == inter.author.id
    
                    image = await self.bot.wait_for("message", check = check)
    
                    try:
                        for attach in image.attachments:
                            clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Thumbnail'] = str(attach)
                            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                            clan_name = f"{role.name}"
                            await attach.save(f"clan_{clan_name}.png")
                            with open('clan_sweetness.json','w') as f: 
                                json.dump(clan,f)
                    except:
                        embed = disnake.Embed(
                            description = f"{inter.author.mention}, –í–æ–∑–º–æ–∂–Ω–æ **–í—ã** –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ **—Å—Å—ã–ª–∫—É** –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ **–∞–≤–∞—Ç–∞—Ä**",
                            color = 3092790,
                        ).set_thumbnail(url = inter.author.display_avatar.url).set_author(name = "–û—à–∏–±–∫–∞ –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏", icon_url = inter.guild.icon.url)
                        return await inter.message.edit(embed = embed, view = ClanBack())
    
                    embed = disnake.Embed(
                        color = 3092790, 
                        description = f"{inter.author.mention} **–í—ã** —É—Å–ø–µ—à–Ω–æ **–∏–∑–º–µ–Ω–∏–ª–∏** –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ **–ø—Ä–æ—Ñ–∏–ª–µ!**"
                    ).set_thumbnail(url = inter.author.display_avatar.url).set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º", icon_url = inter.guild.icon.url)
                    await inter.message.edit(embed = embed, view = ClanBack())
                else:
                    embed = disnake.Embed(color = 3092790, title = '–î–æ–±–∞–≤–∏—Ç—å/–£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞', description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º/–ó–∞–º–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_meet':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    if database.channels.count_documents({"_id": str(clan[str(inter.guild.id)][str(inter.author.id)])}) == 0: 
                        database.channels.insert_one({"_id": str(clan[str(inter.guild.id)][str(inter.author.id)]), "sobranie": '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'})

                    try:
                        channel = inter.author.voice.channel
                    except:
                        embed = disnake.Embed(description = f'{inter.author.mention}, –î–ª—è **–≤–∫–ª—é—á–µ–Ω–∏—è** —Ä–µ–∂–∏–º–∞ —Å–æ–±—Ä–∞–Ω–∏—è, **–∑–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª**, –≥–¥–µ –±—É–¥–µ—Ç **–ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ.**', color = 3092790)
                        embed.set_author(name = "–†–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        await inter.response.edit_message(embed = embed, view = ClanBack())

                    if database.channels.find_one({"_id": str(clan[str(inter.guild.id)][str(inter.author.id)])})['sobranie'] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':

                        embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è.', color = 3092790)
                        embed.set_author(name = "–†–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        await inter.response.edit_message(embed = embed, view = ClanBack())

                        id_role = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                        role = disnake.utils.get(inter.guild.roles, id = int(id_role))
                        await inter.author.voice.channel.set_permissions(role, speak = False, view_channel = True, connect = True)
                        database.channels.update_one({'_id': str(clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role'])}, {'$set': {'sobranie': '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)

                        invitelink = await channel.create_invite(max_uses = 99)

                        for member in clan[str(inter.guild.id)]:
                            if clan[str(inter.guild.id)][str(member)] == str(clanxd):
                                try:
                                    member_take = disnake.utils.get(inter.guild.members, id = int(member))
                                    embed = disnake.Embed(description = f"<@{member}>, **–°–µ–π—á–∞—Å** –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è —Å–æ–±—Ä–∞–Ω–∏–µ.\n\n**–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª —Å–æ–±—Ä–∞–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.**", color = 3092790)
                                    embed.set_author(name = f"–ö–ª–∞–Ω—ã | {inter.guild.name}", icon_url = inter.guild.icon.url)
                                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                                    await member_take.send(embed = embed, view = Meet(invitelink))
                                except:
                                    pass

                        for member in inter.author.voice.channel.members:
                            await member.move_to(member.voice.channel)
                    else:
                        embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–∏–ª–∏ —Ä–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è.', color = 3092790)
                        embed.set_author(name = "–†–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        await inter.response.edit_message(embed = embed, view = ClanBack())

                        role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                        role = disnake.utils.get(inter.guild.roles, id = int(role_id))

                        database.channels.update_one({'_id': str(clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role'])}, {'$set': {'sobranie': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)

                        await inter.author.voice.channel.set_permissions(role, speak = True, view_channel = True, connect = True)

                        for member in clan[str(inter.guild.id)]:
                            if clan[str(inter.guild.id)][str(member)] == str(clanxd):
                                try:
                                    member_take = disnake.utils.get(inter.guild.members, id = int(member))
                                    embed = disnake.Embed(description = f"<@{member}>, **–°–æ–±—Ä–∞–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ**\n\n–ü—Ä–∏—á–∏–Ω–∞: `–°–∞–Ω—Ç–∞ –∫–∞—Ä–ª–æ—Å –ª–æ—Ö, —Å–º–æ—Ç—Ä–∏—Ç —Å–µ—Ä–∏–∞–ª`", color = 3092790)
                                    embed.set_author(name = f"–ö–ª–∞–Ω—ã | {inter.guild.name}", icon_url = inter.guild.icon.url)
                                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                                    await member_take.send(embed = embed)
                                except:
                                    pass

                        for member in inter.author.voice.channel.members: 
                            await member.move_to(member.voice.channel)
                else:
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ** –í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è** —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–ª–∏–¥–µ—Ä–æ–º –∫–ª–∞–Ω–∞!**', color = disnake.Color.red())
                    embed.set_author(name = "–†–µ–∂–∏–º —Å–æ–±—Ä–∞–Ω–∏—è", icon_url = inter.guild.icon.url)
                    embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_deposit':
                await inter.response.send_modal(title=f"–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–ª–∞–Ω", custom_id = "pay_clan",components=[
                    disnake.ui.TextInput(label="–°—É–º–º–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1000",custom_id = "–°—É–º–º–∞",style=disnake.TextInputStyle.short, max_length=25)])

            if custom_id == 'clan_online':
                if database.clanonline.count_documents({"_id": str(inter.author.id)}) == 0:
                    database.clanonline.insert_one({"_id": str(inter.author.id),"online": 0})

                N = database.clanonline.find_one({'_id': str(inter.author.id)})['online']

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                clan_name = f"{role.name}"

                embed = disnake.Embed(color = 3092790)
                embed.add_field(name = "–ö–æ–ª-–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –≤–æ–π—Å–µ:", value = f"```{N // hour}—á. {(N - (N // hour * hour)) // 60}–º. {N - ((N // hour * hour) + ((N - (N // hour * hour)) // 60 * min))}—Å.```")
                embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω ‚Äî {inter.author} | {clan_name}", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_send':
                embed = disnake.Embed(title = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º", color = 3092790)
                embed.description = f'{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ** —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å'
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = ClanChoice())

            if custom_id == 'clan_post':
                embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f'{inter.author.mention}, **–ù–∞–ø–∏—à–∏—Ç–µ** –Ω–∏–∂–µ **–æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞** –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –ø–æ—Å—Ç–µ', color = 3092790)
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed, components = [])
                def check(m): 
                    return m.author.id == inter.author.id
                try: 
                    desc_clan = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f'{inter.author.mention}, **–£–∫–∞–∂–∏—Ç–µ** —á—Ç–æ **—Ç—Ä–µ–±—É–µ—Ç—Å—è** –æ—Ç –Ω–æ–≤–æ–≥–æ **—É—á–∞—Å—Ç–Ω–∏–∫–∞** –∫–ª–∞–Ω–∞', color = 3092790)
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed, components = [])
                def check(m): 
                    return m.author.id == inter.author.id
                try: 
                    request = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f'{inter.author.mention}, **–£–∫–∞–∂–∏—Ç–µ** —á—Ç–æ **–í—ã** –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å **–Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É** –∫–ª–∞–Ω–∞', color = 3092790)
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed, components = [])
                def check(m): 
                    return m.author.id == inter.author.id
                try: 
                    propositions = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f'{inter.author.mention}, **–£–∫–∞–∂–∏—Ç–µ** –ª—é–¥–µ–π –∫ –∫–æ—Ç–æ—Ä—ã–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –ø–æ–≤–æ–¥—É **–≤—Å—Ç—É–ø–ª–µ–Ω–∏—è** –≤ –∫–ª–∞–Ω', color = 3092790)
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed, components = [])
                def check(m): 
                    return m.author.id == inter.author.id
                try: 
                    peoples = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(title = "–ü–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª #–ø–æ–∏—Å–∫", description = f'{inter.author.mention}, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ **–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ**, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —ç–º–±–µ–¥–µ.', color = 3092790)
                embed.set_footer(text = inter.author, icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed)
                def check(m): 
                    return m.author.id == inter.author.id
                try:
                    image = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                clan_name = f"{role.name}"

                embed = disnake.Embed(title = f"–ù–∞–±–æ—Ä –≤ –∫–ª–∞–Ω {clan_name}", description = f"> {desc_clan.content}", color = 3092790)
                try:
                    for attach in image.attachments:
                        embed.set_image(url = str(attach))
                except:
                    embed.set_image(url = image.content)
                bot = self.bot
                embed.add_field(name = "–ß—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç –≤–∞—Å", value = f"{request.content}", inline = False)
                embed.add_field(name = "–ß—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –¥–∞—Ç—å", value = f"{propositions.content}", inline = False)
                embed.add_field(name = "–ü–æ –ø–æ–≤–æ–¥—É –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω", value = f"{peoples.content}", inline = False)
                await inter.send(embed = embed, view = ClanNabor(clan_name, desc_clan, request, propositions, peoples, image, bot))

            if custom_id[:8] == 'clan_top':
                idd = 1
                description = ''
                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                membersID = []
                for x in database.clanonline.find().sort("online",-1):
                    try:
                        member = disnake.utils.get(inter.guild.members, id = int(x['_id']))
                        for r in member.roles:
                            if r.id == role.id:
                                membersID.append(x['_id'])
                    except:
                        pass
                items_per_page = 10
                if not str(inter.author.id) in currentClanTopPage:
                    currentClanTopPage[str(inter.author.id)] = 0
                pages = [membersID[i:i + items_per_page] for i in range(0, len(membersID), items_per_page)]
                for member_id in pages[0]:
                    N = database.clanonline.find_one({'_id': str(member_id)})['online']
                    match idd:
                        case 1:
                            description += f"**<:11:1096126530247204966> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 2:
                            description += f"**<:21:1096126528670138469> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 3:
                            description += f"**<:31:1096126525683810465> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 4:
                            description += f"**<:41:1096126532826697909> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 5:
                            description += f"**<:51:1097534359675879515> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 6:
                            description += f"**<:61:1107004738194653246> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 7:
                            description += f"**<:71:1107004742326034593> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 8:
                            description += f"**<:81:1107004743815008328> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 9:
                            description += f"**<:91:1107004746822328350> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                        case 10:
                            description += f"**<:101:1107004740723802112> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    idd += 1
                    if idd > 10:
                        break
                embed = disnake.Embed(description = description, color = 3092790)
                embed.set_author(name = f"–¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –∫–ª–∞–Ω–∞ {role.name}", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanTopShop(inter.author.id))

            if custom_id == 'clan_shop':
                embed = disnake.Embed(color = 3092790)
                embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω {inter.guild.name}", icon_url = inter.guild.icon.url)
                embed.add_field(name = '<:11:1096126530247204966> –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª', value = '**–¶–µ–Ω–∞:** 2500 <:coin1:1096094598507532479>', inline = False)
                embed.add_field(name = '<:21:1096126528670138469> –î–æ–±–∞–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ –Ω–∞ —Ä–æ–ª—å', value = '**–¶–µ–Ω–∞:** 2500 <:coin1:1096094598507532479>', inline = False)
                embed.add_field(name = '<:31:1096126525683810465> –°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞', value = '**–¶–µ–Ω–∞:** 1000 <:coin1:1096094598507532479>', inline = False)
                embed.add_field(name = '<:41:1096126532826697909> –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç', value = '**–¶–µ–Ω–∞:** 500 <:coin1:1096094598507532479>', inline = False)
                embed.add_field(name = '<:51:1097534359675879515> –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ—Ç—ã –≤ –∫–ª–∞–Ω', value = '**–¶–µ–Ω–∞:** 250 –∑–∞ 1 —Å–ª–æ—Ç <:coin1:1096094598507532479>', inline = False)
                embed.add_field(name = '<:61:1107004738194653246> –î–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª', value = '**–¶–µ–Ω–∞:** 5000 <:coin1:1096094598507532479>', inline = False)
                await inter.response.edit_message(embed = embed, view = ClanShop())

            if custom_id == 'clan_list_of_deposit':
                top_users = {k: v for k, v in sorted(clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Deposit'].items(), key=lambda item: item[1], reverse=True)}
                names = ''
                idd = 1
                for postion, user in enumerate(top_users):
                    names += f'**{idd} ‚Äî **<@!{user}> **{top_users[user]}** <:coin1:1096094598507532479>\n'
                    idd += 1
                embed = disnake.Embed(title="–°–ø–∏—Å–æ–∫ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –∫–ª–∞–Ω–∞", description = names, color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f"–í—Å–µ–≥–æ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –∫–ª–∞–Ω–∞ {clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Balance']} <:coin1:1096094598507532479>")
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_blacklist':
                embed = disnake.Embed(color = 3092790, description = f"**–°–ø–∏—Å–æ–∫ –ß–° –∫–ª–∞–Ω–∞** <@&{clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']}>: \n{' '.join([inter.guild.get_member(i).mention for i in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['BanList']])} | **{' '.join([inter.guild.get_member(i).name for i in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['BanList']])}**\n\n")
                return await inter.response.edit_message(embed = embed, view = ClanBack())

    @commands.Cog.listener()
    async def on_button_click(self, inter):
        custom_id = inter.component.custom_id

        with open('clan_sweetness.json','r', encoding='utf-8') as f:
            clan = json.load(f)

        if custom_id == 'clan_accept':
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                await inter.response.defer()
                member = disnake.utils.get(inter.guild.members, id = int(database.clan.find_one({'_id': str(inter.message.id)})['clan']))

                if not str(member.id) in clan[str(inter.guild.id)]:
                    clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    with open('clan_sweetness.json', 'w') as f:
                        json.dump(clan,f)

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                if clan[str(inter.guild.id)][str(clanxd)]['Limit'] == clan[str(inter.guild.id)][str(clanxd)]['ClanMembers']:
                    await inter.message.edit(view = Disabled())
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í–∞—à** –∫–ª–∞–Ω –¥–æ—Å—Ç–∏–≥ **–ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**!', color = disnake.Color.red())
                    embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.send(ephemeral = True, embed = embed, view = ClanBack())

                if int(member.id) in clan[str(inter.guild.id)][str(clanxd)]['BanList']:
                    await inter.message.edit(view = Disabled())
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–≠—Ç–æ—Ç** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –∫–ª–∞–Ω–∞.', color = disnake.Color.red())
                    embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.send(ephemeral = True, embed = embed, view = ClanBack())

                if clan[str(inter.guild.id)][str(member.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                    await inter.message.edit(view = Disabled())

                    clanxd = clan[str(960579506425446472)][str(inter.author.id)]
                    role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                    role_id = int(clan[str(960579506425446472)][str(clanxd)]['Role'])

                    clan_invite[str(member.id)] = int(role_id)
                    msg = await self.bot.get_channel(1154463674346508390).send(member.id)

                    embed = disnake.Embed(description = f'{member.mention} —Ç–µ–ø–µ—Ä—å —Ç—ã –≤ –∫–ª–∞–Ω–µ **{role.name}**!', color = 3092790)
                    embed.set_author(url = "–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                    embed.set_footer(text = f"–ü—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É: {inter.author}", icon_url = inter.author.display_avatar.url)
                    embed.set_image(url = "https://media.discordapp.net/attachments/1146880953743061143/1147985480131031050/file.jpg?width=676&height=676")
                    await member.send(embed = embed, components = [])

                    clan[str(960579506425446472)][str(clanxd)]['ClanMembers'] += 1
                    clan[str(960579506425446472)][str(member.id)] = clanxd
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                    embed = disnake.Embed(description = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω <@&{role_id}>', color = 3092790)
                    embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                    embed.set_footer(text = f"–ü—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É: {inter.author}", icon_url = inter.author.display_avatar.url)
                    return await self.bot.get_channel(int(clan[str(960579506425446472)][str(clanxd)]['TextChannel'])).send(member.mention, embed = embed)
                else:
                    await inter.message.edit(view = Disabled())
                    embed = disnake.Embed(description = f'–£ {member.mention} —É–∂–µ –µ—Å—Ç—å **–∫–ª–∞–Ω**!', color = disnake.Color.red())
                    embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.send(ephemeral = True, embed = embed, view = ClanBack())

        if custom_id == 'clan_decline':
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                return await inter.response.edit_message(components = [])

        if custom_id == "achievements_take_reward":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description=f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color=3092790)
                embed.set_author(name = "–ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É", icon_url=inter.guild.icon.url)
                embed.set_thumbnail(url=inter.author.display_avatar.url)
                return await inter.send(ephemeral=True, embed=embed)
            
            achievements_reward = achievement_reward[str(inter.author.id)]
            achievements = achievement[str(inter.author.id)]

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan[str(inter.guild.id)][clanxd]['Balance'] += int(achievements_reward)
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)

            embed = disnake.Embed(description=f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–ø–æ–ª—É—á–∏–ª–∏ –Ω–∞–≥—Ä–∞–¥—É** –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤ —Ä–∞–∑–º–µ—Ä–µ **{achievements_reward}** <:coin1:1096094598507532479>', color=3092790)
            embed.set_author(name = "–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ", icon_url=inter.guild.icon.url)
            embed.set_thumbnail(url=inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, components = [])

            cluster.sweetness.achievements.update_one({'_id': str(inter.author.id)}, {'$set': {f'{str(achievements)}': "YES"}}, upsert = True)

        if custom_id.endswith('heroes'):
            guild = self.bot.get_guild(960579506425446472)
            embed = disnake.Embed(description="**–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –≥–µ—Ä–æ–µ–≤:**\n", color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = f"–ì–µ—Ä–æ–∏ | {inter.guild.name}", icon_url = guild.icon.url)

            if not inter.message.content == inter.author.mention:
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                return await inter.send(ephemeral = True, embed = embed)
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]

            if custom_id == "clan_list_heroes":
                for hero in cluster.sweetness.clan_heroes.find_one({"_id": str(clanxd)})["heroes"]:
                    embed.description += f"–ì–µ—Ä–æ–π: **{hero}** [–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è]\n"
                if len(cluster.sweetness.clan_heroes.find_one({"_id": str(clanxd)})["heroes"]) == 0:
                    embed.description += "–ü—É—Å—Ç–æ"
                return await inter.response.edit_message(attachments = None, embed = embed, view = ClanBack())

            if custom_id == "clan_take_heroes":
                match int(clan_choice_hero[str(inter.author.id)]):
                    case 1:
                        clan_hero_cost[str(inter.author.id)] = 100000
                        clan_hero_name[str(inter.author.id)] = "–î–µ—Ä–∏–ª –î–∏–∫—Å–æ–Ω"
                    case 2:
                        clan_hero_name[str(inter.author.id)] = "–î–µ–≤–æ—á–∫–∞ –ø–æ—Å—Ç-—ç–ø–æ—Ö–∏"
                        clan_hero_cost[str(inter.author.id)] = 100000
                    case 3:
                        clan_hero_name[str(inter.author.id)] = "–ì–æ–ª–æ–±—É–π –¥—Ä–æ—Ç–∏–∫"
                        clan_hero_cost[str(inter.author.id)] = 100000
                    case 4:
                        clan_hero_name[str(inter.author.id)] = "–ì—Ä–æ–±–æ–≤—â–∏—Ü–∞"
                        clan_hero_cost[str(inter.author.id)] = 200000
                    case 5:
                        clan_hero_name[str(inter.author.id)] = "–ë—Ä–∏—Ç–≤–∞"
                        clan_hero_cost[str(inter.author.id)] = 300000
                    case 6:
                        clan_hero_name[str(inter.author.id)] = "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç"
                        clan_hero_cost[str(inter.author.id)] = 400000
                    case 7:
                        clan_hero_name[str(inter.author.id)] = "–ñ–µ–ª–µ–∑–Ω—ã–π —Å—Ç—Ä–∞–∂"
                        clan_hero_cost[str(inter.author.id)] = 500000
                    case 8:
                        clan_hero_name[str(inter.author.id)] = "–ñ–Ω–µ—Ü"
                        clan_hero_cost[str(inter.author.id)] = 600000
                    case 9:
                        clan_hero_name[str(inter.author.id)] = "–ê—Ä—Å–µ–Ω–∞–ª"
                        clan_hero_cost[str(inter.author.id)] = 700000
                    case 10:
                        clan_hero_name[str(inter.author.id)] = "–†–∞–∑—Ä—É—à–∏—Ç–µ–ª—å"
                        clan_hero_cost[str(inter.author.id)] = 800000
                    case 11:
                        clan_hero_name[str(inter.author.id)] = "–í–æ–æ—Ä—É–∂—ë–Ω–Ω—ã–π –±–µ–∑—É–º–µ—Ü"
                        clan_hero_cost[str(inter.author.id)] = 900000
                    case 12:
                        clan_hero_name[str(inter.author.id)] = "–ò–∑–≥–æ–π"
                        clan_hero_cost[str(inter.author.id)] = 1000000
                    case 13:
                        clan_hero_name[str(inter.author.id)] = "–ó–∞—â–∏—Ç–Ω–∏–∫ —Ä–∞—Å—Å–≤–µ—Ç–∞"
                        clan_hero_cost[str(inter.author.id)] = 2000000
                    case 14:
                        clan_hero_name[str(inter.author.id)] = "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å"
                        clan_hero_cost[str(inter.author.id)] = 3000000
                    case 15:
                        clan_hero_name[str(inter.author.id)] = "–ê–¥–∞"
                        clan_hero_cost[str(inter.author.id)] = 4000000
                    case 16:
                        clan_hero_name[str(inter.author.id)] = "–ú–µ–≥–≥–∏ –ì—Ä–∏–Ω"
                        clan_hero_cost[str(inter.author.id)] = 5000000
                embed.description = f'{inter.author.mention}, **–í—ã** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≥–µ—Ä–æ—è –∑–∞ **{clan_hero_cost[str(inter.author.id)]}** <:coin1:1096094598507532479>'
                return await inter.response.edit_message(attachments = None, embed = embed, view = ClanHeroBuy())
            if custom_id == "clan_buy_heroes":
                clan_take = clan[str(guild.id)][clanxd]
                clan_balance = f"{clan_take['Balance']}"
                channel = database.clan.find_one({'_id': str(clanxd)})['channel_3'] # news channel
                cost = clan_hero_cost[str(inter.author.id)]
                
                clan_hero = clan_hero_name[str(inter.author.id)]

                if str(clan_hero) in database.clan_heroes.find_one({'_id': str(clanxd)})['heroes']:
                    embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≥–µ—Ä–æ—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –∏ —Ç–∞–∫ **–∫—É–ø–∏–ª–∏**'
                    return await inter.response.edit_message(embed = embed)
                if cost > int(clan_balance):
                    embed.description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**'
                    return await inter.response.edit_message(embed = embed)

                database.clan_heroes.update_one({'_id': str(clanxd)}, {'$push': {'heroes': clan_hero}}, upsert = True)

                clan_take['Balance'] -= int(cost)
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

                embed.description = f"### **–í–∞—à** –∫–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ **–ø—Ä–∏–æ–±—Ä–µ–ª –≥–µ—Ä–æ—è** {clan_hero} –∑–∞ **{cost}** <:coin1:1096094598507532479>"
                embed.set_footer(text = f"–ü—Ä–∏–æ–±—Ä–µ–ª –≥–µ—Ä–æ—è: {inter.author}", icon_url = inter.author.display_avatar.url)
                embed.set_thumbnail("https://cdn.discordapp.com/attachments/1147505417417670726/1147515271934906408/battle_1_1.png")
                msg = await self.bot.get_channel(channel).send(f"<@&{clanxd}>", embed = embed)

                embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –≥–µ—Ä–æ—è {clan_hero} –∑–∞ **{cost}** <:coin1:1096094598507532479>'
                return await inter.response.edit_message(embed = embed, view = ClanBack())
            
        if custom_id.endswith('alliance'):
            guild = self.bot.get_guild(960579506425446472)
            embed = disnake.Embed(color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = f"–ê–ª—å—è–Ω—Å", icon_url = guild.icon.url)

            if not inter.message.content == inter.author.mention:
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                return await inter.send(ephemeral = True, embed = embed)
            
            clanxd = clan[str(guild.id)][str(inter.author.id)]
            clan_take = clan[str(guild.id)][clanxd]
            clan_balance = f"{clan_take['Balance']}"

            if custom_id == "clan_accept_alliance":

                await inter.message.edit(components = [])

                clan_balance = f"{clan_take['Balance']}"
                clan_alliance = database.channels.find_one({'_id': str(inter.message.id)})['alliance']
                clan_name = disnake.utils.get(guild.roles, id = int(clan_alliance["Role"]))
                clan_balance = f"{clan_take['Balance']}"

                clan_alliance_name = disnake.utils.get(guild.roles, id = int(clanxd))

                if int(25000) > int(clan_balance):
                    embed.description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**'
                    return await inter.send(embed = embed)

                clan_balance = f"{clan_alliance['Balance']}"
                if int(25000) > int(clan_balance):
                    embed.description = f'{inter.author.mention}, –£ **–≤—Ç–æ—Ä–æ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**'
                    return await inter.send(embed = embed)

                cluster.sweetness.clan_alliance.update_one({'_id': str(clanxd)}, {'$set': {'alliance': clan_alliance["Role"]}}, upsert = True)
                cluster.sweetness.clan_alliance.update_one({'_id': str(clan_alliance["Role"])}, {'$set': {'alliance': clanxd}}, upsert = True)

                embed.description = f"{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **—Å–æ–∑–¥–∞–ª–∏** –∞–ª—å—è–Ω—Å —Å –∫–ª–∞–Ω–æ–º **{clan_name}**"
                await inter.author.send(embed = embed)

                clan_owner = disnake.utils.get(guild.members, id = int(clan_alliance['Owner']))

                embed = disnake.Embed(color = 3092790)
                embed.set_thumbnail(url = clan_owner.display_avatar.url)
                embed.set_author(name = f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ê–ª—å—è–Ω—Å–∞", icon_url = guild.icon.url)
                embed.description = f"{clan_owner.mention}, **–¢–µ–ø–µ—Ä—å** —É –≤–∞—Å –µ—Å—Ç—å **—Å–æ—é–∑** —Å –∞–ª—å—è–Ω—Å–æ–º {clan_alliance_name.name} –ø–æ–¥ **—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –ª–∏–¥–µ—Ä–∞** {inter.author.mention}."
                await clan_owner.send(embed = embed)

                clan_take['Balance'] -= 25000
                clan_alliance['Balance'] -= 25000
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

            if custom_id == "clan_war_alliance":
                if clan_take['Owner'] == inter.author.id:
                    embed.description = f"* {inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ –∞–ª—å—è–Ω—Å–∞**"
                    return await inter.response.edit_message(attachments = None, embed = embed, view = ClanAlliance())
            
            elif custom_id == "clan_create_alliance":
                embed.description = f'{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ** –∫–ª–∞–Ω —Å –∫–æ—Ç–æ—Ä—ã–º **–í—ã** —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–ª—é—á–∏—Ç—å **–∞–ª—å—è–Ω—Å:**'
                return await inter.response.edit_message(embed = embed, view = ClanView(self.bot, clanxd))
        
        if custom_id == "clan_zombie_attack":
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–µ –ë–∏—Ç–≤—ã | {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail("https://cdn.discordapp.com/attachments/1147505417417670726/1147515271934906408/battle_1_1.png")

            if not inter.message.content == inter.author.mention:
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                return await inter.send(ephemeral = True, embed = embed)
            
            await inter.response.defer()
        
            clan_zombie = clan_attack_choice[str(inter.author.id)]
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

            data_attack = database.clan_attack.find_one({'_id': str(clanxd)})['time']
            if not data_attack == "–ú–æ–∂–Ω–æ":
                remaining_minutes = (data_attack - datetime.datetime.now()).total_seconds() // 60
                if not remaining_minutes < 1:
                    embed.description = f"{inter.author.mention}, **–í–∞–º** –µ—â—ë —Å—Ç–æ–∏—Ç **–ø–æ–¥–æ–∂–¥–∞—Ç—å**\n–°–ª–µ–¥—É—â–∞—è –∞—Ç–∞–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤: {data_attack}, –ø—Ä–µ–∂–¥–µ —á–µ–º **–Ω–∞–ø–∞–¥–∞—Ç—å**"
                    return await inter.message.edit(embed = embed)

            cluster.sweetness.clan_attack.update_one({'_id': str(clanxd)}, {'$set': {'time': datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(minutes = 30)}}, upsert = True)
            cluster.sweetness.clan_zombie.update_one({'_id': str(clanxd)}, {'$set': {'target': clan_zombie, 'time': datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(minutes = 5)}}, upsert = True)
            news_channel = database.clan.find_one({'_id': str(clanxd)})['channel_3'] # news channel

            embed.description = f"### –í–∞—à –∫–ª–∞–Ω –Ω–∞—á–∞–ª –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ –∑–æ–º–±–∏ {clan_zombie}-–æ–≥–æ —É—Ä–æ–≤–Ω—è! –í–æ–π—Å–∫–∞ –ø—Ä–∏–±—É–¥—É—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –≤ —Ç–æ—á–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è."
            msg = await self.bot.get_channel(news_channel).send(f"<@&{clanxd}>", embed = embed)

            im = Image.open('clan_map_main.png')
            idd = 1
        
            guild_clans = clan.get(str(inter.guild.id), {})

            attackers = []
            defenders = []
            zombie_attackers = []
            for clan_key, clan_value in guild_clans.items():
                if isinstance(clan_value, dict):
                    try:
                        role = disnake.utils.get(inter.guild.roles, id=int(clan_key))
                        level = clan[str(inter.guild.id)][str(clan_key)]['Level']

                        if cluster.sweetness.clan_shield.count_documents({"_id": str(clan_key)}) == 0:
                            cluster.sweetness.clan_shield.insert_one({"_id": str(clan_key), "activate": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

                        shield = database.clan_shield.find_one({'_id': str(clan_key)})['activate']

                        match idd:
                            case 1:
                                coordinates = (540, 290)  # —Ä–æ–∑–æ–≤—ã–π
                                size = 18
                                fill = "#B684E8"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_pink.png')
                                    im.paste(transparent_image1, (533, 185), transparent_image1)
                            case 2:
                                coordinates = (312, 177)  # —Å–∏–Ω–∏–π –∑–∞–º–æ–∫ (–û–†–ê–ù–ñ–ï–í–´–ô)
                                size = 18
                                fill = "#D8904E"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_orange.png')
                                    im.paste(transparent_image1, (303, 96), transparent_image1)
                            case 3:
                                coordinates = (790, 171)  # –ª–∞–π–º
                                size = 18
                                fill = "#6BFF8C"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_lime.png')
                                    im.paste(transparent_image1, (686, 143), transparent_image1)
                            case 4:
                                coordinates = (494, 365)  # –ê–§–†–ò–ö–ê (MAGNET)
                                size = 18
                                fill = "#BD1F58"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_magenta.png')
                                    im.paste(transparent_image1, (378, 326), transparent_image1)
                            case 5:
                                coordinates = (779, 557)  # –ê–¶–¢–ï–ö (–°–ò–ù–ò–ô)
                                size = 16
                                fill = "#2FDBBC"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_aztec.png')
                                    im.paste(transparent_image1, (809, 493), transparent_image1)
                            case 6:
                                coordinates = (239, 442)  # –ö–†–ê–°–ù–´–ô
                                size = 18
                                fill = "#AF3A3A"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_red.png')
                                    im.paste(transparent_image1, (246, 439), transparent_image1)
                            case 7:
                                coordinates = (137, 343)  # –§–ò–û–õ–ï–¢–û–í–´–ô
                                size = 18
                                fill = "#8458FF"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_purple.png')
                                    im.paste(transparent_image1, (116, 243), transparent_image1)
                            case 8:
                                coordinates = (769, 175)  # –ó–ï–õ–ï–ù–´–ô
                                size = 18
                                fill = "#18D214"
                                if shield == "YES":
                                    transparent_image1 = Image.open('shield_green.png')
                                    im.paste(transparent_image1, (1, 182), transparent_image1)
                            case _:
                                coordinates = None
        
                        if coordinates:
                            if not database.clan_defender.count_documents({"_id": str(clan_key)}) == 0: 
                                defenders.append({"clanxd": clan_key, "position": coordinates})
                            if not database.clan_war.count_documents({"_id": str(clan_key)}) == 0: 
                                attackers.append({"clanxd": clan_key, "position": coordinates})
                            if not database.clan_zombie.count_documents({"_id": str(clan_key)}) == 0:
                                lvl = database.clan_zombie.find_one({'_id': str(clanxd)})['target']
                                match int(lvl):
                                    case 1:
                                        coords = (793, 493)
                                    case 2:
                                        coords = (274, 299)
                                    case 3:
                                        coords = (144, 137)
                                    case 4:
                                        coords = (636, 347)
                                    case 5:
                                        coords = (631, 345)
                                    case 6:
                                        coords = (711, 321)
                                    case 7:
                                        coords = (352, 389)
                                    case _:
                                        coords = None

                                zombie_attackers.append({"clanxd": clan_key, "position": coords, "position_clanxd": coordinates})

                            ImageDraw.Draw(im).text(coordinates, str(f"{role.name[:10]}\n–£—Ä. {level}"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=size), fill=fill)
                        idd += 1
                    except:
                        pass
            for attacker in attackers:
                for defender in defenders:
                    attacker_cords = zombie_attackers.get("position")

                    draw = ImageDraw.Draw(im)
                    neon_color = (255, 0, 0)

                    draw.line((attacker_cords, defender_cords), fill=neon_color, width=3)

                    x, y = attacker_cords
                
                    y -= 40
                    
                    machine_cords = (x, y)

                    transparent_image1 = Image.open('machine.png')
                    im.paste(transparent_image1, (machine_cords), transparent_image1)

                    x, y = attacker_cords

                    x += 28
                    y -= 21
                    
                    text_cords = (x, y)

                    ImageDraw.Draw(im).text((text_cords), str(f"–ò–¥–µ—Ç –∞—Ç–∞–∫–∞"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=15), fill=(255, 255, 255))

            for zombie in zombie_attackers:
                attacker_cords = zombie.get("position_clanxd")
                zombie_cords = zombie.get("position")

                draw = ImageDraw.Draw(im)
                neon_color = (255, 0, 0)

                draw.line((attacker_cords, zombie_cords), fill=neon_color, width=3)

                x, y = attacker_cords
            
                y -= 27
                
                machine_cords = (x, y)

                transparent_image1 = Image.open('machine.png')
                im.paste(transparent_image1, (machine_cords), transparent_image1)

                x, y = attacker_cords

                x += 28
                y -= 21
                
                text_cords = (x, y)

                ImageDraw.Draw(im).text((text_cords), str(f"–ò–¥–µ—Ç –∞—Ç–∞–∫–∞"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=15), fill=(255, 255, 255)) 

            im.save('out_clan_map.png')
        
            await inter.message.edit(attachments = None, embed=None, file=disnake.File('out_clan_map.png'), view=ClanMap())

        if custom_id == "clan_accept_attack":
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–µ –ë–∏—Ç–≤—ã | {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail("https://cdn.discordapp.com/attachments/1147505417417670726/1147515271934906408/battle_1_1.png")

            if not inter.message.content == inter.author.mention:
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                return await inter.send(ephemeral = True, embed = embed)
            
            await inter.response.defer()
            with open('clan_sweetness.json', 'r') as f:
                clan_data = json.load(f)
        
            clan_choice = clan_attack_choice[str(inter.author.id)]
            shield = database.clan_shield.find_one({'_id': str(clan_choice)})['activate']
            clan_online = database.clan_online.find_one({'_id': str(clan_choice)})['clan_online']

            clan_points = clan_online // 3600
            clan_level = clan_points // 20 + 1
            if not int(clan_level) > 4:
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ **–∫–ª–∞–Ω**, –∫–æ—Ç–æ—Ä—ã–π **–Ω–∏–∂–µ 5 —É—Ä–æ–≤–Ω—è.**"
                return await inter.message.edit(embed = embed)
            if not shield == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ **–∫–ª–∞–Ω**, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ **—â–∏—Ç–æ–º.**"
                return await inter.message.edit(embed = embed)
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

            shield = database.clan_shield.find_one({'_id': str(clanxd)})['activate']
            if not shield == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ **–∫–ª–∞–Ω**, **–Ω–∞—Ö–æ–¥—è—Å—å** –ø—Ä–∏ —ç—Ç–æ–º –ø–æ–¥ **—â–∏—Ç–æ–º.**"
                return await inter.message.edit(embed = embed)
            data_attack = database.clan_attack.find_one({'_id': str(clanxd)})['time']
            if not data_attack == "–ú–æ–∂–Ω–æ":
                remaining_minutes = (data_attack - datetime.datetime.now()).total_seconds() // 60
                if not remaining_minutes < 1:
                    embed.description = f"{inter.author.mention}, **–í–∞–º** –µ—â—ë —Å—Ç–æ–∏—Ç **–ø–æ–¥–æ–∂–¥–∞—Ç—å**\n–°–ª–µ–¥—É—â–∞—è –∞—Ç–∞–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤: {data_attack}, –ø—Ä–µ–∂–¥–µ —á–µ–º **–Ω–∞–ø–∞–¥–∞—Ç—å**"
                    return await inter.message.edit(embed = embed)

            cluster.sweetness.clan_attack.update_one({'_id': str(clanxd)}, {'$set': {'time': datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(minutes = 120)}}, upsert = True)
            cluster.sweetness.clan_war.update_one({'_id': str(clanxd)}, {'$set': {'target': clan_choice, 'time': datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(minutes = 5)}}, upsert = True)
            cluster.sweetness.clan_defender.update_one({'_id': str(clan_choice)}, {'$set': {'attacker': clanxd}}, upsert = True)

            news_channel = database.clan.find_one({'_id': str(clan_choice)})['channel_3'] # news channel

            embed.description = f"### –í–∞—à –∫–ª–∞–Ω –∞—Ç–∞–∫—É—é—Ç! –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –≤—Ä–∞–∂–µ—Å–∫–∏–µ –≤–æ–π—Å–∫–∞ –±—É–¥—É—Ç —É –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞! –ó–∞–π–¥–∏—Ç–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã —É—Å–∏–ª–∏—Ç—å –∑–∞—â–∏—Ç—É!"
            msg = await self.bot.get_channel(news_channel).send(f"<@&{clan_choice}>", embed = embed)

            news_channel = database.clan.find_one({'_id': str(clanxd)})['channel_3'] # news channel

            embed.description = f"### –í–∞—à –∫–ª–∞–Ω –Ω–∞—á–∞–ª –Ω–∞–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ –∫–ª–∞–Ω <@&{clan_choice}>! –í–æ–π—Å–∫–∞ –ø—Ä–∏–±—É–¥—É—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –≤ —Ç–æ—á–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è."
            msg = await self.bot.get_channel(news_channel).send(f"<@&{clanxd}>", embed = embed)

            im = Image.open('clan_map_main.png')
            idd = 1
        
            guild_clans = clan_data.get(str(inter.guild.id), {})

            attackers = []
            defenders = []
            for clan_key, clan_value in guild_clans.items():
                if isinstance(clan_value, dict):
                    try:
                        role = disnake.utils.get(inter.guild.roles, id=int(clan_key))
                        level = clan[str(inter.guild.id)][str(clan_key)]['Level']

                        if cluster.sweetness.clan_shield.count_documents({"_id": str(clan_key)}) == 0:
                            cluster.sweetness.clan_shield.insert_one({"_id": str(clan_key), "activate": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

                        shield = database.clan_shield.find_one({'_id': str(clan_key)})['activate']

                        if idd == 1:
                            coordinates = (540, 290) # —Ä–æ–∑–æ–≤—ã–π
                            size = 18
                            fill = "#B684E8"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_pink.png')
                                im.paste(transparent_image1, (533, 185), transparent_image1)
                        elif idd == 2:
                            coordinates = (312, 177) # —Å–∏–Ω–∏–π –∑–∞–º–æ–∫ (–û–†–ê–ù–ñ–ï–í–´–ô)
                            size = 18
                            fill = "#D8904E"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_orange.png')
                                im.paste(transparent_image1, (303, 96), transparent_image1)
                        elif idd == 3:
                            coordinates = (790, 171) # –ª–∞–π–º
                            size = 18
                            fill = "#6BFF8C"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_lime.png')
                                im.paste(transparent_image1, (686, 143), transparent_image1)
                        elif idd == 4:
                            coordinates = (494, 365) # –ê–§–†–ò–ö–ê (MAGNET)
                            size = 18
                            fill = "#BD1F58"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_magenta.png')
                                im.paste(transparent_image1, (378, 326), transparent_image1)
                        elif idd == 5:
                            coordinates = (779, 557) # –ê–¶–¢–ï–ö (–°–ò–ù–ò–ô)
                            size = 16
                            fill = "#2FDBBC"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_aztec.png')
                                im.paste(transparent_image1, (809, 493), transparent_image1)
                        elif idd == 6:
                            coordinates = (239, 442) # –ö–†–ê–°–ù–´–ô
                            size = 18
                            fill = "#AF3A3A"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_red.png')
                                im.paste(transparent_image1, (246, 439), transparent_image1)
                        elif idd == 7:
                            coordinates = (137, 343) # –§–ò–û–õ–ï–¢–û–í–´–ô
                            size = 18
                            fill = "#8458FF"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_purple.png')
                                im.paste(transparent_image1, (116, 243), transparent_image1)
                        elif idd == 8:
                            coordinates = (769, 175) # –ó–ï–õ–ï–ù–´–ô
                            size = 18
                            fill = "#18D214"
                            if shield == "YES":
                                transparent_image1 = Image.open('shield_green.png')
                                im.paste(transparent_image1, (1, 182), transparent_image1)
                        else:
                            coordinates = None
        
                        if coordinates:
                            if not database.clan_defender.count_documents({"_id": str(clan_key)}) == 0: 
                                defenders.append({"clanxd": clan_key, "position": coordinates})
                            if not database.clan_war.count_documents({"_id": str(clan_key)}) == 0: 
                                attackers.append({"clanxd": clan_key, "position": coordinates})
                            ImageDraw.Draw(im).text(coordinates, str(f"{role.name[:10]}\n–£—Ä. {level}"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=size), fill=fill)
                        idd += 1
                    except:
                        pass
            for attacker in attackers:
                for defender in defenders:
                    attacker_cords = attacker.get("position")
                    defender_cords = defender.get("position")

                    draw = ImageDraw.Draw(im)
                    neon_color = (255, 0, 0)


                    draw.line((attacker_cords, defender_cords), fill=neon_color, width=3)

                    x, y = attacker_cords
                
                    y -= 40
                    
                    machine_cords = (x, y)

                    transparent_image1 = Image.open('machine.png')
                    im.paste(transparent_image1, (machine_cords), transparent_image1)

                    x, y = attacker_cords

                    x += 28
                    y -= 21
                    
                    text_cords = (x, y)

                    ImageDraw.Draw(im).text((text_cords), str(f"–ò–¥–µ—Ç –∞—Ç–∞–∫–∞"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=15), fill=(255, 255, 255)) 

            im.save('out_clan_map.png')
        
            await inter.message.edit(attachments = None, embed=None, file=disnake.File('out_clan_map.png'), view=ClanMap())

        if custom_id == "clan_attack_zombie":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏', color = 3092790)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∑–æ–º–±–∏", icon_url = inter.guild.icon.url)
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                embed.description = f"{inter.author.mention}, –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–≥–æ –∑–æ–º–±–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∞—Å—Ç—å:"
                await inter.response.edit_message(content = inter.author.mention, embed = embed, view = AttackZombie())
            else:
                embed.description = f'### > {inter.author.mention}, –£ **–í–∞—Å** –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **–ø—Ä–∞–≤** –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ **—ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**'
                return await inter.send(ephemeral = True, embed = embed)
            
        if custom_id == "clan_attack_castle":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∫–ª–∞–Ω', color = 3092790)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ê—Ç–∞–∫–æ–≤–∞—Ç—å –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
            clan_id = clan[str(inter.guild.id)][str(inter.author.id)]
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                embed.description = f"{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ**, –Ω–∞ –∫–∞–∫–æ–π **–∫–ª–∞–Ω** –≤—ã —Ö–æ—Ç–∏—Ç–µ **–Ω–∞–ø–∞—Å—Ç—å**:"
                await inter.response.edit_message(content = inter.author.mention, embed = embed, view = AttackClan(self.bot, clan_id))
            else:
                embed.description = f'### > {inter.author.mention}, –£ **–í–∞—Å** –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **–ø—Ä–∞–≤** –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ **—ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**'
                return await inter.send(ephemeral = True, embed = embed)

        if custom_id == "clan_battle_rules":
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ü—Ä–∞–≤–∏–ª–∞ –±–∏—Ç–≤—ã –∫–ª–∞–Ω–æ–≤", icon_url = inter.guild.icon.url)
            embed.description = "**–î–ª—è –Ω–∞–ø–∞–¥–µ–Ω–∏—è** –Ω–∞ –∑–æ–º–±–∏ **–º–æ–∂–Ω–æ** –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–ª—é–±–æ–π —Å–æ—Å—Ç–∞–≤** –∞—Ä–º–∏–∏. **–ü—Ä–∏ –Ω–∞–ø–∞–¥–µ–Ω–∏–∏** –Ω–∞ –∑–æ–º–±–∏ **—Å–æ—é–∑–Ω—ã–π –∞–ª—å—è–Ω—Å** –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å **–ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ**.\n\
            **–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–∏—Ç–≤—ã** —Å –∑–æ–º–±–∏ –∏–ª–∏ –≤—Ä–∞–∂–µ—Å–∫–∏–º –∫–ª–∞–Ω–æ–º, –∞—Ä–º–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ **—Ä–µ–∂–∏–º –æ—Ç–¥—ã—Ö–∞ –Ω–∞ 30 –º–∏–Ω—É—Ç**.\n\n\
            **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö** –≥–µ—Ä–æ–µ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç `20`. **–ù–µ–ª—å–∑—è –Ω–∞–ø–∞–¥–∞—Ç—å** –Ω–∞ –≤—Ä–∞–∂–µ—Å–∫–∏–π –∫–ª–∞–Ω, –∫–æ–≥–¥–∞ —É –Ω–µ–≥–æ **–∞–∫—Ç–∏–≤–µ–Ω –±–∞—Ä—å–µ—Ä**.\n\n\
            **–ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏ –Ω–∞ –Ω–∞–ø–∞–¥–µ–Ω–∏–µ:**\n \
            > –ó–æ–º–±–∏ **1-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 20000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ó–æ–º–±–∏ **2-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 100.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ó–æ–º–±–∏ **3-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 1.000.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ó–æ–º–±–∏ **4-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 10.000.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ó–æ–º–±–∏ **5-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 45.000.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ó–æ–º–±–∏ **6-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 100.000.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n \
            > –ë–æ—Å—Å **7-–æ–≥–æ** —É—Ä–æ–≤–Ω—è: 1.000.000.000 –ë–æ–µ–≤–æ–π –ú–æ—â–∏.\n\n* –ë–æ–µ–≤–∞—è –º–æ—â—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏: –ù–∞–π–º –≥–µ—Ä–æ–µ–≤, –∞–ª—å—è–Ω—Å –∫–ª–∞–Ω–æ–≤, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö, –≤—Å–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
            await inter.send(ephemeral = True, embed = embed)

        if custom_id.startswith('achievements'):
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(title = f'–ö–≤–µ—Å—Ç—ã –∫–ª–∞–Ω–æ–≤', color = 3092790)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**"
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)

            achievements_count = 0

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))
            clan_alliance = database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']

            if database.clan_win.count_documents({"_id": str(clanxd)}) == 0:
                database.clan_win.insert_one({"_id": str(clanxd), "win": 0})
            if database.clan_online.count_documents({"_id": str(clanxd)}) == 0:
                database.clan_online.insert_one({"_id": str(clanxd), "clan_online": 0})
            if database.clan_heroes.count_documents({"_id": str(clanxd)}) == 0:
                database.clan_heroes.insert_one({"_id": str(clanxd), "heroes": []})
            if database.clan_rating.count_documents({"_id": str(clanxd)}) == 0:
                database.clan_rating.insert_one({"_id": str(clanxd), "rating": 0})

            clan_online = database.clan_online.find_one({'_id': str(clanxd)})['clan_online']
            clan_points = clan_online // 3600
            clan_level = clan_points // 20 + 1
            description = ""

            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = f"–ê—á–∏–≤–∫–∏ –∫–ª–∞–Ω–∞ ‚Äî {clan_name} | {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)

            if custom_id == 'achievements_next_1' or custom_id == "achievements_main":
                await inter.response.defer()

                if len(role_take.members) >= 25:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'1': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ü–µ—Ä–≤–æ–±—ã—Ç–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'
                else:
                    description += '<:cross:1066791510877667428> –ü–µ—Ä–≤–æ–±—ã—Ç–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'
                if len(role_take.members) >= 50:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'2': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'
                else:
                    description += '<:cross:1066791510877667428> –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'
                if len(role_take.members) >= 100:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'3': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ü–æ—Å—Ç–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'
                else:
                    description += '<:cross:1066791510877667428> –ü–æ—Å—Ç–∏–Ω–¥—É—Å—Ç—Ä–∏–∞–ª—å–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ\n'

                if int(database.clan_win.find_one({'_id': str(clanxd)})['win']) >= 1:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'4': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã!\n'
                else:
                    description += '<:cross:1066791510877667428> –í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã!\n'

                if int(database.clan_win.find_one({'_id': str(clanxd)})['win']) >= 5:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'5': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ë–æ–ª—å—à–µ, –º–Ω–µ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ!\n'
                else:
                    description += '<:cross:1066791510877667428> –ë–æ–ª—å—à–µ, –º–Ω–µ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ!\n'

                if int(database.clan_win.find_one({'_id': str(clanxd)})['win']) >= 10:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'6': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã!\n'
                else:
                    description += '<:cross:1066791510877667428> –í–æ—Ç –æ–Ω - –≤–∫—É—Å –ø–æ–±–µ–¥—ã!\n'

                if int(database.clan_win.find_one({'_id': str(clanxd)})['win']) >= 20:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'7': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ì–ª–∞–≤–Ω–æ–µ –Ω–µ —Ç–æ, –∫–∞–∫ —Ç—ã –±—å–µ—à—å, –∞ –∫–∞–∫ –¥–µ—Ä–∂–∏—à—å —É–¥–∞—Ä!\n'
                else:
                    description += '<:cross:1066791510877667428> –ì–ª–∞–≤–Ω–æ–µ –Ω–µ —Ç–æ, –∫–∞–∫ —Ç—ã –±—å–µ—à—å, –∞ –∫–∞–∫ –¥–µ—Ä–∂–∏—à—å —É–¥–∞—Ä!\n'
                    

                if int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online']) >= 3600000:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'8': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ë—Ä–æ, —Ç–µ–±–µ –Ω–∞–¥–æ –±–æ–ª—å—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n'
                else:
                    description += '<:cross:1066791510877667428> –ë—Ä–æ, —Ç–µ–±–µ –Ω–∞–¥–æ –±–æ–ª—å—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n'

                if int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online']) >= 18000000:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'9': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ù–µ —Å—É–µ—Ç–∏—Å—å, –≤—Å–µ–º—É —Å–≤–æ—ë –≤—Ä–µ–º—è!\n'
                else:
                    description += '<:cross:1066791510877667428> –ù–µ —Å—É–µ—Ç–∏—Å—å, –≤—Å–µ–º—É —Å–≤–æ—ë –≤—Ä–µ–º—è!\n'

                if int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online']) >= 36000000:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'10': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ö–ª–∞–Ω –æ—Ç–∞–∫—É!\n'
                else:
                    description += '<:cross:1066791510877667428> –ö–ª–∞–Ω –æ—Ç–∞–∫—É!\n'

                if int(database.clan_online.find_one({'_id': str(clanxd)})['clan_online']) >= 180000000:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'11': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ü–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ –∫ —É—Å–ø–µ—Ö—É!\n'
                else:
                    description += '<:cross:1066791510877667428> –ü–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ –∫ —É—Å–ø–µ—Ö—É!\n'

                if int(clan_level) >= 5:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'12': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ù–µ–±–æ—Å–∫—Ä—ë–± –ü—Ä–æ–≥—Ä–µ—Å—Å–∞!\n'
                else:
                    description += '<:cross:1066791510877667428> –ù–µ–±–æ—Å–∫—Ä—ë–± –ü—Ä–æ–≥—Ä–µ—Å—Å–∞!\n'


                if int(clan_level) >= 15:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'13': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ö–æ—Ä–æ–ª—å –ö–ª–∞–Ω–æ–≤!\n'
                else:
                    description += '<:cross:1066791510877667428> –ö–æ—Ä–æ–ª—å –ö–ª–∞–Ω–æ–≤!\n'

                if int(clan_level) >= 30:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'14': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –í–µ—Ä—à–∏–Ω–∞ –ö–ª–∞–Ω–æ–≤–æ–≥–æ –ú–∏—Ä–∞!\n'
                else:
                    description += '<:cross:1066791510877667428> –í–µ—Ä—à–∏–Ω–∞ –ö–ª–∞–Ω–æ–≤–æ–≥–æ –ú–∏—Ä–∞!\n'

                if len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) >= 1:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'15': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ü–µ—Ä–≤—ã–π —Å–æ—é–∑–Ω–∏–∫!\n'
                else:
                    description += '<:cross:1066791510877667428> –ü–µ—Ä–≤—ã–π —Å–æ—é–∑–Ω–∏–∫!\n'

                embed.description = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ **–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π** –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: **{achievements_count}**\n\n{description}"
                embed.set_footer(text = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1 –∏–∑ 2")
                await inter.message.edit(attachments=None, embed = embed, view = ClanQuest())
            if custom_id == 'achievements_next_2':
                await inter.response.defer()

                if len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) >= 5:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'16': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –°–ª—É–∂–∏—Ç–µ–ª–∏ –ü—è—Ç–µ—Ä—ã—Ö!\n'
                else:
                    description += '<:cross:1066791510877667428> –°–ª—É–∂–∏—Ç–µ–ª–∏ –ü—è—Ç–µ—Ä—ã—Ö!\n'
                if len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) >= 15:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'17': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ê—Ä–º–∏—è –í–µ–ª–∏–∫–∏—Ö –ü—è—Ç–Ω–∞–¥—Ü–∞—Ç–∏!\n'
                else:
                    description += '<:cross:1066791510877667428> –ê—Ä–º–∏—è –í–µ–ª–∏–∫–∏—Ö –ü—è—Ç–Ω–∞–¥—Ü–∞—Ç–∏!\n'
                if len(database.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) >= 20:
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'18': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ú–∞—Å—Ç–µ—Ä –†–µ–∫—Ä—É—Ç–∏–Ω–≥–∞!\n'
                else:
                    description += '<:cross:1066791510877667428> –ú–∞—Å—Ç–µ—Ä –†–µ–∫—Ä—É—Ç–∏–Ω–≥–∞!\n'
                if not str(database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']) == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
                    cluster.sweetness.achievements_count.update_one({'_id': str(inter.author.id)}, {'$set': {'20': "YES"}}, upsert = True)
                    achievements_count += 1
                    description += '<:check_mark:1066791513390075954> –ö–ª–∞–Ω–æ–≤—ã–π —Å–æ—é–∑–Ω–∏–∫!!\n'
                else:
                    description += '<:cross:1066791510877667428> –ö–ª–∞–Ω–æ–≤—ã–π —Å–æ—é–∑–Ω–∏–∫!\n'

                embed.description = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ **–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π** –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: **{achievements_count}**\n\n{description}"
                embed.set_footer(text = "–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2 –∏–∑ 2")
                await inter.message.edit(attachments=None, embed = embed, view = ClanQuest2())

        if custom_id == "clan_war_settings":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"
            rating = database.clan_rating.find_one({'_id': str(clanxd)})['rating']
            role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

            embed = Embed(color=3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)

            embed.add_field(name = "–†–µ–π—Ç–∏–Ω–≥", value = f"```üèÜ {rating}```")
            clan_heroes = len(cluster.sweetness.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])
            voice_members = 1
            if int(clan_heroes) == 0:
                power = len(role_take.members) * 50 * voice_members
            else:
                for member in role_take.members:
                    try:
                        channel = member.voice.channel.id
                        voice_members += 1
                    except:
                        pass
                power_heroes = len(cluster.sweetness.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) * 100
                power = len(role_take.members) * 50 * voice_members * int(power_heroes)
            embed.add_field(name = "–í–∞—à–∞ –±–æ–µ–≤–∞—è –º–æ—â—å –∫–ª–∞–Ω–∞:", value = f"```‚öîÔ∏è {power}```")
            embed.add_field(name = "–ì–µ—Ä–æ–∏ –∫–ª–∞–Ω–∞:", value = f'```{len(cluster.sweetness.clan_heroes.find_one({"_id": str(clanxd)})["heroes"])}/16```')
            embed.add_field(name = "–ê—Ä–º–∏—è:", value = f"```???/???```")
            embed.set_author(name = f"–û—Ç—Ä—è–¥ –∫–ª–∞–Ω–∞ {clan_name}", icon_url = inter.guild.icon.url)
            return await inter.response.edit_message(attachments = None, embed = embed, view = ClanSquad())

        if custom_id.endswith("shield"):
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"

            embed = disnake.Embed(color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π —â–∏—Ç {clan_name}", icon_url = inter.guild.icon.url)

            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:

                if not inter.message.content == inter.author.mention:
                    embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**'
                    return await inter.send(ephemeral = True, embed = embed)

                if custom_id == "clan_war_shield":

                    if cluster.sweetness.clan_shield.count_documents({"_id": str(clanxd)}) == 0:
                        cluster.sweetness.clan_shield.insert_one({"_id": str(clanxd), "activate": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

                    data_shield = cluster.sweetness.clan_shield.find_one({'_id': str(clanxd)})['time']
                    remaining_days = (data_shield - datetime.datetime.now()).days
                    if data_shield > datetime.datetime.now():
                        sec = data_shield - datetime.datetime.now()

                        hours = sec // hour
                        minutes = (sec - (sec // hour * hour)) // 60
                        seconds = (str(sec.seconds % 60).split('.')[0])

                        embed.description=f"{inter.author.mention}, **–í—ã** —É–∂–µ **–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏** —â–∏—Ç **—Ä–∞–Ω–µ–µ**, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ **{hours}—á. {minutes}–º. {seconds}—Å.**"
                        return await inter.send(embed = embed, ephemeral=True)

                    embed.description = f"{inter.author.mention}, **–í—ã** –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ **–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å** —â–∏—Ç –Ω–∞ **24 —á–∞—Å–∞**? –ó–∞ **100.000** <:coin1:1096094598507532479>\n**–í—ã** –Ω–µ —Å–º–æ–∂–µ—Ç–µ –Ω–∏ **–∞—Ç–∞–∫–æ–≤–∞—Ç—å**, –Ω–∏ –±—ã—Ç—å **–∞—Ç–∞–∫–æ–≤–∞–Ω–Ω—ã–º**"
                    return await inter.response.edit_message(embed = embed, view = ClanShield())

                if custom_id == "clan_accept_shield":
                    clan_balance = f"{clan[str(inter.guild.id)][clanxd]['Balance']}"
                    if int(100000) > int(clan_balance):
                        embed = disnake.Embed(description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed)

                    new_date = datetime.datetime.now().replace(microsecond=0) + datetime.timedelta(days=1)
                    cluster.sweetness.clan_shield.update_one({'_id': str(clanxd)}, {'$set': {'time': new_date}}, upsert = True)
                    cluster.sweetness.clan_shield.update_one({'_id': str(clanxd)}, {'$set': {'activate': "YES"}}, upsert = True)

                    clan_take = clan[str(inter.guild.id)][clanxd]
                    clan_take['Balance'] -= 100000
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                    embed.description = f"{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏** —â–∏—Ç –Ω–∞ **24 —á–∞—Å–∞** –≤ –∫–ª–∞–Ω–µ **{clan_name}**"
                    return await inter.response.edit_message(embed = embed, view = ClanBack())
            else:
                embed.description = f'### > {inter.author.mention}, –£ **–í–∞—Å** –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ **–ø—Ä–∞–≤** –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ **—ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã**'
                return await inter.send(ephemeral = True, embed = embed)
            
        if custom_id == "clan_war_heroes":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            clan_name = f"{role.name}"

            if database.clan_heroes.count_documents({"_id": str(inter.author.id)}) == 0: 
                database.clan_heroes.insert_one({"_id": str(inter.author.id), "alarm_sps": 0})

            return await inter.response.edit_message(attachments = None, embed = None, file = disnake.File("clan_heroes.png"), view = ClanWarHeroes())

        #if custom_id.startswith("clan_top"):
#
        #    if not inter.message.content == inter.author.mention:
        #        embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
        #        embed.set_thumbnail(url = inter.author.display_avatar.url)
        #        embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
        #        return await inter.send(ephemeral = True, embed = embed)
#
        #    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = utils.get(inter.guild.members, id=profile_user[inter.author.id])
#
        #    history_data = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})
        #    
        #    N = database.clanonline.find_one({'_id': str(inter.author.id)})['online']
#
        #    embed = Embed(color=3092790)
        #    embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_avatar.url)
        #    embed.description = f"–í–∞—à –æ–Ω–ª–∞–π–Ω –≤ –∫–ª–∞–Ω–µ: **{N // hour}—á. {(N - (N // hour * hour)) // 60}–º. {N - ((N // hour * hour) + ((N - (N // hour * hour)) // 60 * min))}—Å.**"
#
        #    items_per_page = 10
#
        #    if str(inter.author.id) not in sort_clan_top:
        #        sort_clan_top[str(inter.author.id)] = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
#
        #    if sort_clan_top[str(inter.author.id)] == "–î–∞—Ç—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–∞–º
        #        reason = history_data.get("prize", ["-"])
        #        dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
        #        
        #        pattern = r"<t:(\d+):F>"
        #        timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
        #        
        #        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
        #        sorted_dates_asc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)))
        #        
        #        tip_data = sorted_dates_asc
        #    elif sort_clan_top[str(inter.author.id)] == "–î–∞—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–∞–º
        #        reason = history_data.get("prize", ["-"])
        #        dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
    #
        #        pattern = r"<t:(\d+):F>"
        #        timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
        #        
        #        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        #        sorted_dates_desc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)), reverse=True)
        #        
        #        tip_data = sorted_dates_desc
        #    if sort_clan_top[str(inter.author.id)] == "–ü—Ä–∏–∑—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –ø—Ä–∏–∑–∞–º
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_asc = [prize for _, prize in sorted(zip(prize_values, prizes))]
#
        #        reason = sorted_prizes_asc
        #    elif sort_clan_top[str(inter.author.id)] == "–ü—Ä–∏–∑—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –ø—Ä–∏–∑–∞–º
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_desc = [prize for _, prize in sorted(zip(prize_values, prizes), reverse=True)]
#
        #        reason = sorted_prizes_desc
        #    else:
        #        reason = history_data.get("prize", ["-"])
        #        tip_data = history_data.get("data", ["-"])
#
#
        #    if str(inter.author.id) not in currentClanTopPage:
        #        currentClanTopPage[str(inter.author.id)] = 0
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
#
        #    if custom_id == "case_history_first_page":
        #        currentClanTopPage[str(inter.author.id)] = 0
        #    elif custom_id == "case_history_prev_page" and currentClanTopPage[str(inter.author.id)] > 0:
        #        currentClanTopPage[str(inter.author.id)] -= 1
        #    elif custom_id == "case_history_exit":
        #        return await inter.message.delete()
        #    elif custom_id == "case_history_right_page":
        #        if currentClanTopPage[str(inter.author.id)] < len(pages) - 1:
        #            currentClanTopPage[str(inter.author.id)] += 1
        #    elif custom_id == "case_history_last_page":
        #        currentClanTopPage[str(inter.author.id)] = len(pages) - 1
#
        #    description = "\n".join(f"**{tip}**" for tip in pages[currentClanTopPage[str(inter.author.id)]])
#
        #    embed.add_field(name="`  –î–∞—Ç–∞  `", value=description)
#
        #    pages1 = [reason[i:i + items_per_page] for i in range(0, len(reason), items_per_page)]
        #    description1 = "\n".join(reasons for reasons in pages1[currentClanTopPage[str(inter.author.id)]][:10])
        #    embed.add_field(name="`  –ü—Ä–∏–∑  `", value=description1)
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
        #    embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentClanTopPage[str(inter.author.id)] + 1} –∏–∑ {len(pages)}",
        #                        icon_url="https://cdn.discordapp.com/attachments/1091732133111939135/1109845138764738653/menu.png")
        #    embed.set_author(name=f"–ò—Å—Ç–æ—Ä–∏—è {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å} | {inter.guild}", icon_url=inter.guild.icon.url)
        #    await inter.response.edit_message(embed=embed, view=ClanTopShop(inter.author.id))
#
        #if custom_id.startswith("clan_top"):
        #    if not inter.message.content == inter.author.mention:
        #        embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
        #        embed.set_thumbnail(url = inter.author.display_avatar.url)
        #        embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
        #        return await inter.send(ephemeral = True, embed = embed)
#
        #    –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = utils.get(inter.guild.members, id=profile_user[inter.author.id])
#
        #    history_data = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})
#
        #    embed = Embed(color=3092790)
        #    embed.set_thumbnail(url=–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.display_avatar.url)
        #    embed.description = f"–í–∞—à –æ–Ω–ª–∞–π–Ω –≤ –∫–ª–∞–Ω–µ: **{N // hour}—á. {(N - (N // hour * hour)) // 60}–º. {N - ((N // hour * hour) + ((N - (N // hour * hour)) // 60 * min))}—Å.**"
#
        #    items_per_page = 10
#
        #    if str(inter.author.id) not in sort_clan_top:
        #        sort_clan_top[str(inter.author.id)] = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
#
        #    if sort_clan_top[str(inter.author.id)] == "–î–∞—Ç—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–∞–º
        #        reason = history_data.get("prize", ["-"])
        #        dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
        #        
        #        pattern = r"<t:(\d+):F>"
        #        timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
        #        
        #        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
        #        sorted_dates_asc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)))
        #        
        #        tip_data = sorted_dates_asc
        #    elif sort_clan_top[str(inter.author.id)] == "–î–∞—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –¥–∞—Ç–∞–º
        #        reason = history_data.get("prize", ["-"])
        #        dates = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["data"]
    #
        #        pattern = r"<t:(\d+):F>"
        #        timestamps = [int(re.search(pattern, date).group(1)) for date in dates]
        #        
        #        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        #        sorted_dates_desc = sorted(dates, key=lambda x: int(re.search(pattern, x).group(1)), reverse=True)
        #        
        #        tip_data = sorted_dates_desc
        #    if sort_clan_top[str(inter.author.id)] == "–ü—Ä–∏–∑—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –ø—Ä–∏–∑–∞–º
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_asc = [prize for _, prize in sorted(zip(prize_values, prizes))]
#
        #        reason = sorted_prizes_asc
        #    elif sort_clan_top[str(inter.author.id)] == "–ü—Ä–∏–∑—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –ø—Ä–∏–∑–∞–º
        #        tip_data = history_data.get("data", ["-"])
#
        #        prizes = cluster.sweetness.history_case.find_one({"_id": str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)})["prize"]
#
        #        pattern = r'\d+'
        #        prize_values = [int(re.search(pattern, prize).group()) for prize in prizes]
#
        #        sorted_prizes_desc = [prize for _, prize in sorted(zip(prize_values, prizes), reverse=True)]
#
        #        reason = sorted_prizes_desc
        #    else:
        #        reason = history_data.get("prize", ["-"])
        #        tip_data = history_data.get("data", ["-"])
#
#
        #    if str(inter.author.id) not in currentClanTopPage:
        #        currentClanTopPage[str(inter.author.id)] = 0
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
#
        #    if custom_id == "case_history_first_page":
        #        currentClanTopPage[str(inter.author.id)] = 0
        #    elif custom_id == "case_history_prev_page" and currentClanTopPage[str(inter.author.id)] > 0:
        #        currentClanTopPage[str(inter.author.id)] -= 1
        #    elif custom_id == "case_history_exit":
        #        return await inter.message.delete()
        #    elif custom_id == "case_history_right_page":
        #        if currentClanTopPage[str(inter.author.id)] < len(pages) - 1:
        #            currentClanTopPage[str(inter.author.id)] += 1
        #    elif custom_id == "case_history_last_page":
        #        currentClanTopPage[str(inter.author.id)] = len(pages) - 1
#
        #    description = "\n".join(f"**{tip}**" for tip in pages[currentClanTopPage[str(inter.author.id)]])
#
        #    embed.add_field(name="`  –î–∞—Ç–∞  `", value=description)
#
        #    pages1 = [reason[i:i + items_per_page] for i in range(0, len(reason), items_per_page)]
        #    description1 = "\n".join(reasons for reasons in pages1[currentClanTopPage[str(inter.author.id)]][:10])
        #    embed.add_field(name="`  –ü—Ä–∏–∑  `", value=description1)
#
        #    pages = [tip_data[i:i + items_per_page] for i in range(0, len(tip_data), items_per_page)]
        #    embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentClanTopPage[str(inter.author.id)] + 1} –∏–∑ {len(pages)}",
        #                        icon_url="https://cdn.discordapp.com/attachments/1091732133111939135/1109845138764738653/menu.png")
        #    embed.set_author(name=f"–ò—Å—Ç–æ—Ä–∏—è {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å} | {inter.guild}", icon_url=inter.guild.icon.url)
        #    await inter.response.edit_message(embed=embed, view=ClanTopShop(inter.author.id))

        if custom_id == 'clan_join':
            try:
                if database.clan.count_documents({"_id": str(inter.author.id)}) == 0: 
                    database.clan.insert_one({"_id": str(inter.author.id), "alarm_sps": 0})

                clanxd = database.clan.find_one({'_id': str(inter.message.id)})['clan']

                request = database.clan.find_one({'_id': str(clanxd)})['trebovaniya'][0]
                request1 = database.clan.find_one({'_id': str(clanxd)})['trebovaniya'][1]
                request2 = database.clan.find_one({'_id': str(clanxd)})['trebovaniya'][2]
                request3 = database.clan.find_one({'_id': str(clanxd)})['trebovaniya'][3]
                request4 = database.clan.find_one({'_id': str(clanxd)})['trebovaniya'][4]
            except:
                embed = disnake.Embed(color = 3092790, description=f"{inter.author.mention}, **–í —ç—Ç–æ–º –∫–ª–∞–Ω–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π**, –ø–æ—ç—Ç–æ–º—É –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–∫–Ω–æ —Å —Ñ–æ—Ä–º–æ–π –∑–∞—è–≤–∫–∏")
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = "–û—à–∏–±–∫–∞", icon_url = inter.guild.icon.url)
                return await inter.response.send_message(embed = embed, ephemeral = True)
            
            try:
                return await inter.response.send_modal(title=f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ",custom_id = "clan_join", components=[
                    disnake.ui.TextInput(label=request,custom_id = request,style=disnake.TextInputStyle.short),
                    disnake.ui.TextInput(label=request1,custom_id = request1,style=disnake.TextInputStyle.short),
                    disnake.ui.TextInput(label=request2,custom_id = request2,style=disnake.TextInputStyle.paragraph),
                    disnake.ui.TextInput(label=request3,custom_id = request3,style=disnake.TextInputStyle.paragraph),
                    disnake.ui.TextInput(label=request4,custom_id = request4,style=disnake.TextInputStyle.paragraph)])
            except:
                embed = disnake.Embed(color = 3092790, description=f"{inter.author.mention}, **–í —ç—Ç–æ–º –∫–ª–∞–Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã**, –ø–æ—ç—Ç–æ–º—É –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–∫–Ω–æ —Å —Ñ–æ—Ä–º–æ–π –∑–∞—è–≤–∫–∏")
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = "–û—à–∏–±–∫–∞", icon_url = inter.guild.icon.url)
                return await inter.response.send_message(embed = embed, ephemeral = True)

        if custom_id == "clan_report":
            id_message = str(inter.message.id)

            await inter.response.send_modal(title = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É", custom_id = "report_activity", components = [
                disnake.ui.TextInput(label="–ü—Ä–∏—á–∏–Ω–∞",custom_id = "–ü—Ä–∏—á–∏–Ω–∞",style=disnake.TextInputStyle.paragraph, max_length=200)])
            
            modal_inter: disnake.ModalInteraction = await self.bot.wait_for("modal_submit",check=lambda i: i.custom_id == "report_activity" and i.author.id == inter.author.id)

            for key, value in modal_inter.text_values.items():
                reason = value

            number = randint(1, 15)

            embed = disnake.Embed(description="", color = 3092790)

            embed.set_author(name = "–ö–ª–∞–Ω–æ–≤—ã–µ –∂–∞–ª–æ–±—ã", icon_url = "https://cdn.discordapp.com/attachments/1125009710446288926/1142861099897716879/report.png")
            embed.add_field(name = "> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏—Å—Ç—Ü–µ:", value = f"‚†Ä**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {inter.author.mention}\n‚†Ä**ID:** {inter.author.id}", inline = True)
            embed.add_field(name = "> ID –∂–∞–ª–æ–±—ã:", value = f"‚†Ä**{number}**", inline = True)
            embed.add_field(name = "> –ü—Ä–∏—á–∏–Ω–∞", value = f"```{reason}```", inline = False)
            msg = await self.bot.get_channel(1152307160097763358).send(content = "<@&1025807036799275141>", embed = embed, view = ReportView())
            
            cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'user': inter.author.id}}, upsert = True)
            
            embed = disnake.Embed(color = 3092790, description=f"{inter.author.mention}, **–ñ–∞–ª–æ–±–∞** –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ **–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞** –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ, –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º **{number}**")
            embed.set_author(name = "–ö–ª–∞–Ω–æ–≤—ã–µ –∂–∞–ª–æ–±—ã", icon_url = "https://cdn.discordapp.com/attachments/1125009710446288926/1142861099897716879/report.png")
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await modal_inter.response.send_message(embed = embed, ephemeral = True)

        if custom_id == 'ball_report':
            await inter.response.send_modal(title=f"–û—Ç–∑—ã–≤", custom_id = "review_report", components=[
                disnake.ui.TextInput(label=f"–¢–µ–∫—Å—Ç", custom_id = f"–¢–µ–∫—Å—Ç", style=disnake.TextInputStyle.paragraph, max_length=500)])

        if custom_id[-6:] == 'report':
            if custom_id == 'accept_report':
                embed = inter.message.embeds[0]
                embed.set_footer(text=f"–ü—Ä–∏–Ω—è–ª —Ä–µ–ø–æ—Ä—Ç - {inter.author} / id - {inter.author.id}", icon_url=inter.author.display_avatar.url)
                await inter.message.edit(embed=embed, components = [])
                number = randint(1000, 9999)

                category = disnake.utils.get(inter.guild.categories, id = 1025859125701259384)
                report_channel_text = await inter.guild.create_text_channel(name = f"üí¨„Éª–ñ–∞–ª–æ–±–∞ –∏–≤–µ–Ω—Ç—ã {number}", category = category)
                report_channel_voice = await inter.guild.create_voice_channel(name = f"üö´„Éª–ñ–∞–ª–æ–±–∞ –∏–≤–µ–Ω—Ç—ã {number}", category = category)
                await report_channel_voice.set_permissions(inter.author, connect = True, view_channel = True)

                user = disnake.utils.get(inter.guild.members, id = cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['user'])

                embed = disnake.Embed(title = "Clans Report", color = 3092790, description=f"{user.mention}, –í–∞—à–∞ **–∂–∞–ª–æ–±–∞** –Ω–∞ –∫–ª–∞–Ω –±—ã–ª–∞ **–ü—Ä–∏–Ω—è—Ç–∞** —Å—Ç–∞—Ä—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç—Ä–æ–º, –≤ —Å–∫–æ—Ä–æ–º **–í—Ä–µ–º–µ–Ω–∏** —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.")
                embed.set_thumbnail(url = user.display_avatar.url)
                embed.add_field(name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value = f"> {inter.author.mention}\n> {inter.author.id}")
                embed.set_footer(text = f"–°–µ—Ä–≤–µ—Ä {inter.guild.name}", icon_url = inter.guild.icon.url)
                msg = await user.send(embed = embed)

                embed = disnake.Embed(description=f"<:zxc3:1009168371213926452> - –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤ –ø–æ–ª—å–∑—É {user.mention} \
                                      \n<:zxc2:1009168373936050206> - –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∂–∞–ª–æ–±—É {user.mention}", color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∞–ª–æ–±–æ–π", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - {inter.author} / id - {inter.author.id}", icon_url = inter.author.display_avatar.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                msg = await report_channel_text.send(inter.author.mention, embed = embed, view = ReportMenu())

                cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'text_channel': report_channel_text.id}}, upsert = True)
                cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'channel': report_channel_voice.id}}, upsert = True)
                cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'user': user.id}}, upsert = True)
                
            if custom_id == 'decline_report':
                embed = inter.message.embeds[0]
                embed.set_footer(text=f"–û—Ç–∫–ª–æ–Ω–∏–ª —Ä–µ–ø–æ—Ä—Ç - {inter.author} / id - {inter.author.id}", icon_url=inter.author.display_avatar.url)
                await inter.message.edit(embed=embed, components = [])

            if custom_id == 'move_one_report':
                await inter.response.defer()
                report_channel_voice = cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['channel']
                user = disnake.utils.get(inter.guild.members, id = cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['user'])
                try:
                    await user.move_to(self.bot.get_channel(report_channel_voice))
                except:
                    embed = disnake.Embed(color = 3092790, description = f"{inter.author.mention}, **{user.mention}** –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ")
                    embed.set_author(name = f"–†–µ–ø–æ—Ä—Ç—ã | {inter.guild.name}", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.send(embed = embed)

        if custom_id == 'accept_one':
            user = disnake.utils.get(inter.guild.members, id = cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['user'])
            await inter.message.edit(components = [])
            try:
                embed = disnake.Embed(title = "Clans Report", color = 3092790, description=f"{user.mention}, **–†–∞–∑–±–æ—Ä** –í–∞—à–µ–π –∂–∞–ª–æ–±—ã **–±—ã–ª** –∑–∞–≤–µ—Ä—à–µ–Ω –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–æ. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ —Å—Ç–∞—Ä—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n–û—Å—Ç–∞–≤—å—Ç–µ **–æ—Ç–∑—ã–≤** –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π **–∑–∞–Ω–∏–º–∞–ª—Å—è** –í–∞—à–µ–π **–∂–∞–ª–æ–±–æ–π**")
                embed.set_thumbnail(url = user.display_avatar.url)
                embed.add_field(name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value = f"> {inter.author.mention}\n> {inter.author.id}")
                embed.set_footer(text = f"–°–µ—Ä–≤–µ—Ä {inter.guild.name}", icon_url = inter.guild.icon.url)
                msg = await user.send(embed = embed, view = BallReport())
                cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'moderator': int(inter.author.id)}}, upsert = True)
            except:
                pass

            report_channel_voice = self.bot.get_channel(cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['channel'])
            report_channel_text = self.bot.get_channel(cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['text_channel'])
            await report_channel_text.delete()
            await report_channel_voice.delete()

        if custom_id == 'accept_two':
            user = disnake.utils.get(inter.guild.members, id = cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['user'])
            await inter.message.edit(components = [])
            try:
                embed = disnake.Embed(title = "Clans Report", color = 3092790, description=f"{user.mention}, **–†–∞–∑–±–æ—Ä** –í–∞—à–µ–π –∂–∞–ª–æ–±—ã **–±—ã–ª** –∑–∞–≤–µ—Ä—à–µ–Ω. –†–µ—à–µ–Ω–∏–µ–º —Å—Ç–∞—Ä—à–µ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∂–∞–ª–æ–±–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–û—Å—Ç–∞–≤—å—Ç–µ **–æ—Ç–∑—ã–≤** –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π **–∑–∞–Ω–∏–º–∞–ª—Å—è** –í–∞—à–µ–π **–∂–∞–ª–æ–±–æ–π**")
                embed.set_thumbnail(url = user.display_avatar.url)
                embed.add_field(name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", value = f"> {inter.author.mention}\n> {inter.author.id}")
                embed.set_footer(text = f"–°–µ—Ä–≤–µ—Ä {inter.guild.name}", icon_url = inter.guild.icon.url)
                msg = await user.send(embed = embed, view = BallReport())
                cluster.sweetness.clan_report.update_one({'_id': str(msg.id)}, {'$set': {'moderator': int(inter.author.id)}}, upsert = True)
            except:
                pass

            report_channel_voice = self.bot.get_channel(cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['channel'])
            report_channel_text = self.bot.get_channel(cluster.sweetness.clan_report.find_one({'_id': str(inter.message.id)})['text_channel'])
            await report_channel_text.delete()
            await report_channel_voice.delete()

        if custom_id[-4:] == "rank":
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            if not clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                embed = disnake.Embed(description = f'### > {inter.author.mention}, –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)
                
            if custom_id == "clan_accept_rank":
                rang = currentRankChoice[str(inter.author.id)]

                database.clan.update_one({'_id': str(rang)}, {'$set': {'admin': '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)
                embed = disnake.Embed(description = f"### > {inter.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ –ø—Ä–∞–≤–∞ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è —Ä–∞–Ω–≥—É {rang}", color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanBack())
            
            if custom_id == "clan_decline_rank":
                rang = currentRankChoice[str(inter.author.id)]
                database.clan.update_one({'_id': str(rang)}, {'$set': {'admin': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)

                embed = disnake.Embed(description = f"### > {inter.author.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ –ø—Ä–∞–≤–∞ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è —É —Ä–∞–Ω–≥–∞ {rang}", color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanBack())
            
            –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = disnake.utils.get(inter.guild.members, id = profile_user[inter.author.id])
            clanxd = clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)]

            if custom_id == "clan_add_rank":
                rang = currentRankChoice[str(inter.author.id)]
                return await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å {rang}", custom_id = "clan_add_rank", components=[
                    disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=25)])
            
            if custom_id == "clan_remove_rank":
                rang = currentRankChoice[str(inter.author.id)]
                return await inter.response.send_modal(title=f"–°–Ω—è—Ç—å {rang}", custom_id = "clan_remove_rank", components=[
                    disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=25)])

            try:
                rank = database.clan.find_one({'_id': str(clanxd)})['rank']
            except: 
                database.clan.update_one({'_id': str(clanxd)}, {'$set': {'rank': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)
                rank = database.clan.find_one({'_id': str(clanxd)})['rank']

            if custom_id == "clan_limit_rank":
                rang = currentRankChoice[str(inter.author.id)]
                return await inter.response.send_modal(title=f"–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –Ω–∞ —Ä–∞–Ω–≥ {rang}", custom_id = "clan_limit_rank", components=[
                    disnake.ui.TextInput(label="–õ–∏–º–∏—Ç",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 5",custom_id = "–õ–∏–º–∏—Ç",style=disnake.TextInputStyle.short, max_length=3)])
            
            if custom_id == "clan_admin_rank":
                rang = currentRankChoice[str(inter.author.id)]

                embed = disnake.Embed(description = f"### > {inter.author.mention}, –ù—É–∂–Ω—ã –ª–∏ {rang} —Ä–∞–Ω–≥—É –ø—Ä–∞–≤–∞ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è?", color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanSystemRankAccept())
            
            if custom_id == "clan_create_rank":
                return await inter.response.send_modal(title=f"–°–æ–∑–¥–∞—Ç—å —Ä–∞–Ω–≥",custom_id = "clan_create_rank", components=[
                    disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=25)])
            
            if custom_id == "clan_delete_rank":
                return await inter.response.send_modal(title=f"–£–¥–∞–ª–∏—Ç—å —Ä–∞–Ω–≥",custom_id = "clan_delete_rank", components=[
                    disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=25)])

            if custom_id == "clan_edit_rank":
                embed = disnake.Embed(description = f"### > {inter.author.mention}, –¢—É—Ç **–í—ã** –º–æ–∂–µ—Ç–µ **—Å–æ–∑–¥–∞–≤–∞—Ç—å** –Ω–æ–≤—ã–µ —Ä–∞–Ω–≥–∏ –∏–ª–∏ –∂–µ **—É–ø—Ä–∞–≤–ª—è—Ç—å** —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏.", color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanSystemEdit())

            if custom_id == "clan_system_rank":
                database.clan.update_one({'_id': str(clanxd)}, {'$set': {'rank': []}}, upsert = True)
                rank = database.clan.find_one({'_id': str(clanxd)})['rank']
                embed = disnake.Embed(description = f"### > {inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ **—Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–≥–æ–≤**, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É **—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ**", color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f'–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanSystem(rank))

        if custom_id[:8] == 'clan_top':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)

            idd = 1
            description = ''
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
            membersID = []
            for x in database.clanonline.find().sort("online",-1):
                try:
                    member = disnake.utils.get(inter.guild.members, id = int(x['_id']))
                    for r in member.roles:
                        if r.id == role.id:
                            membersID.append(x['_id'])
                except:
                    pass

            items_per_page = 10

            pages = [membersID[i:i + items_per_page] for i in range(0, len(membersID), items_per_page)]
            if not str(inter.author.id) in currentClanTopPage:
                currentClanTopPage[str(inter.author.id)] = 0
            match custom_id:
                case 'clan_top_first_page':
                    currentClanTopPage[str(inter.author.id)] = 0
                case 'clan_top_prev_page' if currentClanTopPage[str(inter.author.id)] > 0:
                    currentClanTopPage[str(inter.author.id)] -= 1
                case 'clan_top_exit':
                    await inter.message.delete()
                case 'clan_top_right_page' if currentClanTopPage[str(inter.author.id)] < len(pages) - 1:
                    currentClanTopPage[str(inter.author.id)] += 1
                case 'clan_top_last_page':
                    currentClanTopPage[str(inter.author.id)] = len(pages) - 1
            for member_id in pages[currentClanTopPage[str(inter.author.id)]]:
                N = database.clanonline.find_one({'_id': str(member_id)})['online']
                match idd:
                    case 1:
                        description += f"**<:11:1096126530247204966> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 2:
                        description += f"**<:21:1096126528670138469> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 3:
                        description += f"**<:31:1096126525683810465> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 4:
                        description += f"**<:41:1096126532826697909> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 5:
                        description += f"**<:51:1097534359675879515> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 6:
                        description += f"**<:61:1107004738194653246> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 7:
                        description += f"**<:71:1107004742326034593> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 8:
                        description += f"**<:81:1107004743815008328> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 9:
                        description += f"**<:91:1107004746822328350> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                    case 10:
                        description += f"**<:101:1107004740723802112> ‚Äî <@{member_id}>** <:microphone:1140294304556908695> **{N // hour}**—á. **{(N - (N // hour * hour)) // 60}**–º.\n\n"
                idd += 1
                if idd > 10:
                    break
            embed = disnake.Embed(description = description, color = 3092790)
            embed.set_author(name = f"–¢–æ–ø –ø–æ –æ–Ω–ª–∞–π–Ω—É –∫–ª–∞–Ω–∞ {role.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
            return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanTopShop(inter.author.id))

        if custom_id[-4:] == 'shop':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan_balance = f"{clan[str(inter.guild.id)][clanxd]['Balance']}"

            if inter.component.custom_id == 'yesshop':
                if clanshop[inter.author.id] == 1:
                    if int(2500) > int(clan_balance):
                        embed = disnake.Embed(description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed)
                    
                    return await inter.response.send_modal(title=f"–°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",custom_id = "create_text_channel", components=[
                        disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=20)])

                if clanshop[inter.author.id] == 2:
                    if int(2500) > int(clan_balance):
                        embed = disnake.Embed(description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_author(name = f"–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed)
                    
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–°–∫–∏–Ω—å—Ç–µ** —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ —á–∞—Ç, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã **–ø–æ—Å—Ç–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å** –∏–∫–æ–Ω–∫—É –Ω–∞ —Ä–æ–ª–∏!', color=3092790)
                    embed.set_author(name = f"–î–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É", icon_url = inter.guild.icon.url)
                    await inter.send(inter.author.mention, embed = embed)
                    def check(m):
                        return m.author.id == inter.author.id
                    try: 
                        image = await self.bot.wait_for("message", check = check, timeout = 60)
                    except TimeoutError:
                        return
                    role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                    role = disnake.utils.get(inter.guild.roles, id = int(role_id))
                    for attach in image.attachments:
                        await attach.save(f"icon_role.png")
                    with open(f'icon_role.png', "rb") as image:
                        img_byte = image.read()
                    emoji = await inter.guild.create_custom_emoji(name = 'xdd', image = img_byte)
                    try:
                        await role.edit(icon = emoji)
                    except:
                        embed = disnake.Embed(title = f"–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É", description = f"{inter.author.mention}, **–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—É—Å—Ç–æ–≤** –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –Ω–∞ —Ä–æ–ª—å!", color = 3092790)
                        return await inter.response.edit_message(embed = embed)

                    await emoji.delete()

                    clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Limit'] += 1
                    clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= 2500
                    with open('clan_sweetness.json','w') as f: 
                        json.dump(clan,f)
                    embed = disnake.Embed(title = f"–î–æ–±–∞–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É", description = f"{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏/–∏–∑–º–µ–Ω–∏–ª–∏ –∏–∫–æ–Ω–∫—É **–∫–ª–∞–Ω–∞!**", color = 3092790)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.send(embed = embed)
                
                if clanshop[inter.author.id] == 3:
                    if int(1000) > int(clan_balance):
                        embed = disnake.Embed(title = '–ö–ª–∞–Ω', description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed)
                
                    return await inter.response.send_modal(title=f"–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞",custom_id = "change_name_clan", components=[disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",
                                                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=20)])

                if clanshop[inter.author.id] == 4:
                    if int(500) > int(clan_balance):
                        embed = disnake.Embed(title = '–ö–ª–∞–Ω', description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.response.edit_message(embed = embed, view = ClanBack())
                    
                    return await inter.response.send_modal(title=f"–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç",custom_id = "change_color", components=[disnake.ui.TextInput(label="–¶–≤–µ—Ç",
                                                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #000001",custom_id = "–¶–≤–µ—Ç",style=disnake.TextInputStyle.short, max_length=20)])
                
                if clanshop[inter.author.id] == 5:
                    return await inter.response.send_modal(title=f"–î–æ–±–∞–∏—Ç—å –ª–∏–º–∏—Ç",custom_id = "limit_clan", components=[disnake.ui.TextInput(label="–ß–∏—Å–ª–æ",
                                                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 10",custom_id = "–ß–∏—Å–ª–æ",style=disnake.TextInputStyle.short, max_length=3)])

                if clanshop[inter.author.id] == 6:
                    if int(5000) > int(clan_balance):
                        embed = disnake.Embed(title = '–ö–ª–∞–Ω', description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed)
                    
                    return await inter.response.send_modal(title=f"–°–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",custom_id = "create_voice_channel", components=[disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: zxc",custom_id = "–ù–∞–∑–≤–∞–Ω–∏–µ",style=disnake.TextInputStyle.short, max_length=20)])

            if custom_id == '1shop':
                clanshop[inter.author.id] = 1
                text = '–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª'
                count = 2500
            if custom_id == '2shop':
                clanshop[inter.author.id] = 2
                text = '–î–æ–±–∞–≤–∏—Ç—å –∑–Ω–∞—á–æ–∫ –Ω–∞ —Ä–æ–ª—å'
                count = 2500
            if custom_id == '3shop':
                clanshop[inter.author.id] = 3
                text = '–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞'
                count = 1000
            if custom_id == '4shop':
                clanshop[inter.author.id] = 4
                text = '–ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç'
                count = 500
            if custom_id == '5shop':
                clanshop[inter.author.id] = 5
                text = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ—Ç—ã –≤ –∫–ª–∞–Ω'
                count = 250
            if custom_id == '6shop':
                clanshop[inter.author.id] = 6
                text = '–î–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª'
                count = 5000

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã —É–≤–µ—Ä–µ–Ω—ã**, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ **{text}** –∑–∞ **{count}** <:coin1:1096094598507532479>?\n–î–ª—è **—Å–æ–≥–ª–∞—Å–∏—è** –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <:yes11:1096091626889302086>, –¥–ª—è **–æ—Ç–∫–∞–∑–∞** –Ω–∞ <:no1:1096087505159344138>', color = 3092790)
            embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = ClanShopAccept())

        if custom_id[:4] == 'clan':
            if not inter.message.content == inter.author.mention:
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—á—É–∂–∏–µ –∫–Ω–æ–ø–∫–∏!**', color = 3092790)
                embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.send(ephemeral = True, embed = embed)
            
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]

            if custom_id == "clan_invite":
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    components = [disnake.ui.TextInput(label = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=25)]
                    await inter.response.send_modal(title = f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", custom_id = "vidat_clan", components = components)
                else:
                    embed = disnake.Embed(color = 3092790, description = '**–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º/–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!')
                    embed.set_author(name = f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())
                
            if custom_id == "clan_kick":
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id or inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    components = [disnake.ui.TextInput(label = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=25)]
                    await inter.response.send_modal(title = f"–í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", custom_id = "kick_clan", components = components)
                else: 
                    embed = disnake.Embed(color = 3092790, description = f"{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!")
                    embed.set_author(name = f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == "clan_war":
                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]

                if cluster.sweetness.clan_heroes.count_documents({"_id": str(clanxd)}) == 0:
                    cluster.sweetness.clan_heroes.insert_one({"_id": str(clanxd), "heroes": []})   
                
                if database.clan_shield.count_documents({"_id": str(clanxd)}) == 0:
                    database.clan_shield.insert_one({"_id": str(clanxd), "activate": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})
                    
                if database.clan_rating.count_documents({"_id": str(clanxd)}) == 0:
                    database.clan_rating.insert_one({"_id": str(clanxd), "rating": 0})

                shield = database.clan_shield.find_one({'_id': str(clanxd)})['activate']
                rating = database.clan_rating.find_one({'_id': str(clanxd)})['rating']

                embed = disnake.Embed(description = f'### {inter.author.mention}, –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –Ω–∞ –≤–∞—à –∫–ª–∞–Ω, –º–æ–≥—É—Ç –Ω–∞–ø–∞—Å—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.', color = 3092790)

                if shield == "YES":
                    date_shield = database.clan_shield.find_one({'_id': str(clanxd)})['time']
                    sec = date_shield - datetime.datetime.now()

                    days = (date_shield - datetime.datetime.now()).days
                    hours = (str(sec.seconds // 3600).split('.')[0])
                    minutes = (str((sec.seconds % 3600) // 60).split('.')[0])
                    seconds = (str(sec.seconds % 60).split('.')[0])

                    if date_shield > datetime.datetime.now():
                        sec = date_shield - datetime.datetime.now()
    
                    embed.add_field(name = "–©–∏—Ç ", value = f"```üõ°Ô∏è {days}–¥. {hours}—á. {minutes}–º. {seconds}—Å.```")
                else:
                    embed.add_field(name = "–©–∏—Ç", value = f"```üõ°Ô∏è {shield}```")

                role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

                embed.add_field(name = "–†–µ–π—Ç–∏–Ω–≥", value = f"```üèÜ {rating}```")
                clan_heroes = len(cluster.sweetness.clan_heroes.find_one({'_id': str(clanxd)})['heroes'])
                voice_members = 1
                if int(clan_heroes) == 0:
                    power = len(role_take.members) * 50 * voice_members
                else:
                    for member in role_take.members:
                        try:
                            channel = member.voice.channel.id
                            voice_members += 1
                        except:
                            pass
                    power_heroes = len(cluster.sweetness.clan_heroes.find_one({'_id': str(clanxd)})['heroes']) * 100
                    power = len(role_take.members) * 50 * voice_members * int(power_heroes)
                embed.add_field(name = "–í–∞—à–∞ –±–æ–µ–≤–∞—è –º–æ—â—å –∫–ª–∞–Ω–∞:", value = f"```‚öîÔ∏è {power}```")
                embed.add_field(name = "–ì–µ—Ä–æ–∏ –∫–ª–∞–Ω–∞:", value = f'```{len(cluster.sweetness.clan_heroes.find_one({"_id": str(clanxd)})["heroes"])}/16```')
                embed.set_author(name = f"–ë–∏—Ç–≤–∞ –∫–ª–∞–Ω–æ–≤ | {inter.guild.name}", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(attachments = None, embed = embed, view = ClanWar())

            if custom_id == "clan_map":
                with open('clan_sweetness.json', 'r') as f:
                    clan_data = json.load(f)
            
                im = Image.open('clan_map_main.png')
                idd = 1

                guild_clans = clan_data.get(str(inter.guild.id), {})

                attackers = []
                defenders = []
                zombie_attackers = []

                await inter.response.defer()

                for clan_key, clan_value in guild_clans.items():
                    if isinstance(clan_value, dict):
                        try:
                            role = disnake.utils.get(inter.guild.roles, id=int(clan_key))
                            level = clan[str(inter.guild.id)][str(clan_key)]['Level']

                            if cluster.sweetness.clan_shield.count_documents({"_id": str(clan_key)}) == 0:
                                cluster.sweetness.clan_shield.insert_one({"_id": str(clan_key), "activate": "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "time": datetime.datetime.now().replace(microsecond=0) - datetime.timedelta(hours=5)})

                            shield = database.clan_shield.find_one({'_id': str(clan_key)})['activate']

                            match idd:
                                case 1:
                                    coordinates = (540, 290)  # —Ä–æ–∑–æ–≤—ã–π
                                    size = 18
                                    fill = "#B684E8"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_pink.png')
                                        im.paste(transparent_image1, (533, 185), transparent_image1)
                                case 2:
                                    coordinates = (312, 177)  # —Å–∏–Ω–∏–π –∑–∞–º–æ–∫ (–û–†–ê–ù–ñ–ï–í–´–ô)
                                    size = 18
                                    fill = "#D8904E"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_orange.png')
                                        im.paste(transparent_image1, (303, 96), transparent_image1)
                                case 3:
                                    coordinates = (790, 171)  # –ª–∞–π–º
                                    size = 18
                                    fill = "#6BFF8C"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_lime.png')
                                        im.paste(transparent_image1, (686, 143), transparent_image1)
                                case 4:
                                    coordinates = (494, 365)  # –ê–§–†–ò–ö–ê (MAGNET)
                                    size = 18
                                    fill = "#BD1F58"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_magenta.png')
                                        im.paste(transparent_image1, (378, 326), transparent_image1)
                                case 5:
                                    coordinates = (779, 557)  # –ê–¶–¢–ï–ö (–°–ò–ù–ò–ô)
                                    size = 16
                                    fill = "#2FDBBC"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_aztec.png')
                                        im.paste(transparent_image1, (809, 493), transparent_image1)
                                case 6:
                                    coordinates = (239, 442)  # –ö–†–ê–°–ù–´–ô
                                    size = 18
                                    fill = "#AF3A3A"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_red.png')
                                        im.paste(transparent_image1, (246, 439), transparent_image1)
                                case 7:
                                    coordinates = (137, 343)  # –§–ò–û–õ–ï–¢–û–í–´–ô
                                    size = 18
                                    fill = "#8458FF"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_purple.png')
                                        im.paste(transparent_image1, (116, 243), transparent_image1)
                                case 8:
                                    coordinates = (769, 175)  # –ó–ï–õ–ï–ù–´–ô
                                    size = 18
                                    fill = "#18D214"
                                    if shield == "YES":
                                        transparent_image1 = Image.open('shield_green.png')
                                        im.paste(transparent_image1, (1, 182), transparent_image1)
                                case _:
                                    coordinates = None

                            if coordinates:
                                if not database.clan_defender.count_documents({"_id": str(clan_key)}) == 0:
                                    defenders.append({"clanxd": clan_key, "position": coordinates})
                                if not database.clan_war.count_documents({"_id": str(clan_key)}) == 0: 
                                    attackers.append({"clanxd": clan_key, "position": coordinates})
                                if not database.clan_zombie.count_documents({"_id": str(clan_key)}) == 0:
                                    lvl = database.clan_zombie.find_one({'_id': str(clanxd)})['target']
                                    match int(lvl):
                                       case 1:
                                           coords = (793, 493)
                                       case 2:
                                           coords = (274, 299)
                                       case 3:
                                           coords = (144, 137)
                                       case 4:
                                           coords = (636, 347)
                                       case 5:
                                           coords = (631, 345)
                                       case 6:
                                           coords = (711, 321)
                                       case 7:
                                           coords = (352, 389)
                                       case _:
                                           coords = None

                                    zombie_attackers.append({"clanxd": clan_key, "position": coords, "position_clanxd": coordinates})

                                ImageDraw.Draw(im).text(coordinates, str(f"{role.name[:10]}\n–£—Ä. {level}"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=size), fill=fill)
                            idd += 1

                        except:
                            pass
                try:
                    for attacker in attackers:
                        for defender in defenders:
                            attacker_cords = attacker_cords.get("position")

                            draw = ImageDraw.Draw(im)
                            neon_color = (255, 0, 0)

                            draw.line((attacker_cords, defender_cords), fill=neon_color, width=3)

                            x, y = attacker_cords

                            y -= 40

                            machine_cords = (x, y)

                            transparent_image1 = Image.open('machine.png')
                            im.paste(transparent_image1, (machine_cords), transparent_image1)

                            x, y = attacker_cords

                            x += 28
                            y -= 21

                            text_cords = (x, y)

                            ImageDraw.Draw(im).text((text_cords), str(f"–ò–¥–µ—Ç –∞—Ç–∞–∫–∞"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=15), fill=(255, 255, 255))

                    for zombie in zombie_attackers:
                        attacker_cords = zombie.get("position_clanxd")
                        zombie_cords = zombie.get("position")

                        draw = ImageDraw.Draw(im)
                        neon_color = (255, 0, 0)

                        draw.line((attacker_cords, zombie_cords), fill=neon_color, width=3)

                        x, y = attacker_cords

                        y -= 27

                        machine_cords = (x, y)

                        transparent_image1 = Image.open('machine.png')
                        im.paste(transparent_image1, (machine_cords), transparent_image1)

                        x, y = attacker_cords

                        x += 28
                        y -= 21

                        text_cords = (x, y)

                        ImageDraw.Draw(im).text((text_cords), str(f"–ò–¥–µ—Ç –∞—Ç–∞–∫–∞"), font=ImageFont.truetype('Montserrat-Bold.ttf', encoding='UTF-8', size=15), fill=(255, 255, 255)) 
                except:
                    pass

                im.save('out_clan_map.png')
            
                await inter.message.edit(embed=None, file=disnake.File('out_clan_map.png'), view=ClanMap())

            if custom_id == "clan_system":
                try:
                    rank = database.clan.find_one({'_id': str(clanxd)})['rank']
                except:
                    database.clan.update_one({'_id': str(clanxd)}, {'$set': {'rank': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}}, upsert = True)
                    rank = database.clan.find_one({'_id': str(clanxd)})['rank']
                embed = disnake.Embed(description = f'### {inter.author.mention}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∫–ª–∞–Ω–æ–≤ —Ä–∞–Ω–≥–∏\n> **–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ**', color = 3092790)
                embed.set_author(name = f"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤ | {inter.guild.name}", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = ClanSystem(rank))

            if custom_id == 'clan_leave':
                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                if clan[str(inter.guild.id)][str(clanxd)]['Owner'] == inter.author.id:
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω, –ø–æ–∫–∞ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º –∫–ª–∞–Ω–∞!', color = disnake.Color.red())
                    embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed, view = ClanBack())
                else:
                    if inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                        clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'].remove(inter.author.id)
                        with open('clan_sweetness.json','w') as f:
                            json.dump(clan,f)
                        await inter.author.remove_roles(disnake.utils.get(inter.guild.roles, id = 961299056968237127))

                    await inter.author.remove_roles(disnake.utils.get(inter.guild.roles, id = clan[str(inter.guild.id)][str(clanxd)]['Role']))
                    await inter.author.remove_roles(disnake.utils.get(inter.guild.roles, id = 961529522082185226))
                    clan[str(inter.guild.id)][str(inter.author.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    clan[str(inter.guild.id)][str(clanxd)]['ClanMembers'] -= 1
                    with open('clan_sweetness.json','w') as f: 
                        json.dump(clan,f)

                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –∫–ª–∞–Ω!', color = 3092790)
                    embed.set_author(name = "–ü–æ–∫–∏–Ω—É—Ç—å –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
                    embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_delete':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    id_role = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']

                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∫–ª–∞–Ω!', color = 3092790)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    embed.set_author(name = f"–£–¥–∞–ª–∏—Ç—å –∫–ª–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {inter.guild.name}", icon_url = inter.guild.icon.url)
                    await inter.response.edit_message(embed = embed, components = [])

                    category_id = database.clan.find_one({'_id': str(id_role)})['category']

                    category = disnake.utils.get(inter.guild.categories, id = int(category_id))
                    for channel in category.voice_channels:
                        await channel.delete()
                    for channel in category.text_channels:
                        await channel.delete()

                    await category.delete()
                    clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                    for member in clan[str(inter.guild.id)].copy():
                        if clan[str(inter.guild.id)][str(member)] == str(clanxd):
                            try:
                                if clan[str(inter.guild.id)][str(clanxd)]['Owner'] == int(member):
                                    user = disnake.utils.get(inter.guild.members, id = int(member))
                                    role = disnake.utils.get(inter.guild.roles, id = 961296301901885531)
                                    await user.remove_roles(role)
                                if int(member) in clan[str(inter.guild.id)][str(clanxd)]['Admin']:
                                    await disnake.utils.get(inter.guild.members, id = int(member)).remove_roles(disnake.utils.get(inter.guild.roles, id = 961299056968237127))
                                else:
                                    await disnake.utils.get(inter.guild.members, id = int(member)).remove_roles(disnake.utils.get(inter.guild.roles, id = 961529522082185226))
                            except:
                                pass
                            del clan[str(inter.guild.id)][str(member)]
                            with open('clan_sweetness.json','w') as f: 
                                json.dump(clan,f)
                    database.clan.delete_one({'_id': str(clanxd)})

                    await disnake.utils.get(inter.guild.roles, id = int(id_role)).delete()

                    del clan[str(inter.guild.id)][str(clanxd)]
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                    return await self.bot.get_channel(1026239319624667236).set_permissions(inter.author, view_channel=False, send_messages=False)

            if custom_id == 'clan_embed':
                embed = disnake.Embed(description = f'{inter.author.mention}, **–ù–∞–ø–∏—à–∏—Ç–µ** –Ω–∏–∂–µ **–∑–∞–≥–æ–ª–æ–≤–æ–∫** –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –ø–æ—Å—Ç–µ', color = 3092790)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                embed.set_author(name = "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º–±–µ–¥–∞ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö", icon_url = inter.guild.icon.url)
                await inter.send(embed = embed, components = [])
                def check(m):
                    return m.author.id == inter.author.id
                try:
                    title_clan = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(description = f'{inter.author.mention}, **–ù–∞–ø–∏—à–∏—Ç–µ** –Ω–∏–∂–µ **–æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞** –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –ø–æ—Å—Ç–µ', color = 3092790)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                embed.set_author(name = "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º–±–µ–¥–∞ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö", icon_url = inter.guild.icon.url)
                await inter.send(embed = embed, components = [])
                def check(m):
                    return m.author.id == inter.author.id
                try:
                    desc_clan = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return
                embed = disnake.Embed(description = f'{inter.author.mention}, **–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ** –Ω–∏–∂–µ **—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –∫–ª–∞–Ω–∞** –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ —ç–º–±–µ–¥–µ', color = 3092790)
                embed.set_author(name = "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º–±–µ–¥–∞ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed, components = [])
                def check(m):
                    return m.author.id == inter.author.id
                try:
                    image = await self.bot.wait_for("message", check = check, timeout = 500)
                except TimeoutError:
                    return

                embed123 = disnake.Embed(title = title_clan.content, description = f"> {desc_clan.content}", color = 3092790)
                try:
                    for attach in image.attachments:
                        embed123.set_image(url = str(attach))
                except:
                    embed123.set_image(url = str(image.content))
                bot = self.bot
                await inter.send(embed = embed123, view = ClanEmbed(title_clan, desc_clan, image, bot))

            if custom_id == 'clan_request':
                components = [
                    disnake.ui.TextInput(label="–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",custom_id = "–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å",style=disnake.TextInputStyle.paragraph, max_length=45),
                    disnake.ui.TextInput(label="–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–æ–∑—Ä–∞—Å—Ç",custom_id = "–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å",style=disnake.TextInputStyle.paragraph, max_length=45),
                    disnake.ui.TextInput(label="–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–º—è",custom_id = "–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å",style=disnake.TextInputStyle.paragraph, max_length=45),
                    disnake.ui.TextInput(label="–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å",custom_id = "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å",style=disnake.TextInputStyle.paragraph, max_length=45),
                    disnake.ui.TextInput(label="–ü—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–º—Ä –≤ –¥–æ—Ç–µ",custom_id = "–ü—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å",style=disnake.TextInputStyle.paragraph, max_length=45)]
                await inter.response.send_modal(title=f"–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è",custom_id = "clan_request", components=components)

            if custom_id == "clan_map":
                embed = disnake.Embed(description = f'### {inter.author.mention}, –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∫–ª–∞–Ω–æ–≤ –∫–∞—Ä—Ç—ã\n> **–ö–∞—Ä—Ç—ã –∫–ª–∞–Ω–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**', color = 3092790)
                embed.set_author(name = "–ö–∞—Ä—Ç–∞ –∫–ª–∞–Ω–æ–≤", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_add_ban':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    components = [disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)]
                    await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å –±–∞–Ω",custom_id = "vidat_ban", components=components)
                else: 
                    embed = disnake.Embed(color = 3092790, description = f'{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!')
                    embed.set_author(name = f"–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())
            if custom_id == 'clan_remove_ban':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    components = [disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)]
                    await inter.response.send_modal(title=f"–†–∞–∑–±–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞",custom_id = "remove_ban", components=components)
                else: 
                    embed = disnake.Embed(color = 3092790, description = f'{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!')
                    embed.set_author(name = f"–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_add_admin':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    components = [disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)]
                    await inter.response.send_modal(title=f"–í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞",custom_id = "vidat_admin", components=components)
                else: 
                    embed = disnake.Embed(color = 3092790, description = f'{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!')
                    embed.set_author(name = f"–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())
                    
            if custom_id == 'clan_remove_admin':
                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                    components = [disnake.ui.TextInput(label="–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 849353684249083914",custom_id = "–ê–π–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞",style=disnake.TextInputStyle.short, max_length=20)]
                    await inter.response.send_modal(title=f"–ó–∞–±—Ä–∞—Ç—å —Ä–æ–ª—å",custom_id = "remove_admin", components=components)
                else: 
                    embed = disnake.Embed(color = 3092790, description = f'{inter.author.mention}, **–í—ã** –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å **–õ–∏–¥–µ—Ä–æ–º** —ç—Ç–æ–≥–æ –∫–ª–∞–Ω–∞!')
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    await inter.response.edit_message(embed = embed, view = ClanBack())

            if custom_id == 'clan_exit':
                await inter.message.delete()

            if custom_id.startswith('clan_members'):

                –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = disnake.utils.get(inter.guild.members, id = profile_user[inter.author.id])

                idd = 1
                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))

                membersID = []
                tip_data_clan = []
                member_data_clan = []
                tip_time_time = []

                items_per_page = 10
                for member in reversed(role.members):
                    membersID.append(member.id)

                embed = disnake.Embed(description = f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º - **{len(membersID)}**", color = 3092790)
                pages = [membersID[i:i + items_per_page] for i in range(0, len(membersID), items_per_page)]

                if not str(inter.author.id) in currentClanTopPage:
                    currentClanTopPage[str(inter.author.id)] = 0
                if custom_id == 'clan_members_first_page':
                    currentClanTopPage[str(inter.author.id)] = 0
                if custom_id == 'clan_members_prev_page':
                    if currentClanTopPage[str(inter.author.id)] > 0:
                        currentClanTopPage[str(inter.author.id)] -= 1
                if custom_id == 'clan_members_exit':
                    return await inter.message.delete()
                if custom_id == 'clan_members_right_page':
                    if currentClanTopPage[str(inter.author.id)] < len(pages) - 1:
                        currentClanTopPage[str(inter.author.id)] += 1
                if custom_id == 'clan_members_last_page':
                    currentClanTopPage[str(inter.author.id)] = len(pages) - 1
                for member_id in pages[currentClanTopPage[str(inter.author.id)]]:
                    tip_data_clan.append(cluster.sweetness.clan.find_one({'_id': str(member_id)})['rank'])
                    tip_time_time.append(cluster.sweetness.clan.find_one({'_id': str(member_id)})['tip_data'])
                    member_data_clan.append(f"<@{member_id}>")
                    idd += 1
                    if idd > 10:
                        break

                embed.set_author(name = f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞ {role.name}", icon_url = inter.guild.icon.url)
                tip_data = "\n".join(reason for reason in tip_data_clan)
                tip_time ="\n".join(reason for reason in tip_time_time)
                member_data = "\n".join(reason for reason in member_data_clan)
                embed.add_field(name = "–î–∞—Ç–∞ –≤—Ö–æ–¥–∞", value = f"{tip_time}")
                embed.add_field(name = "–¢–∏–ø", value = f"{tip_data}")
                embed.add_field(name = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value = f"{member_data}")
                embed.set_footer(text = f'–ó–∞–ø—Ä–æ—Å–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanMembers(inter.author.id))

            if custom_id == 'clan_manage':

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                clan_name = f"{role.name}"

                embed = disnake.Embed(description = f"{inter.author.mention}, **–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ** –Ω–∞–¥ **–∫–ª–∞–Ω–æ–º** <@&{clanxd}>", color = 3092790)
                embed.set_author(name = f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º {clan_name}", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed, view = ClanManage())

            if custom_id == 'clan_back':
                –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å = disnake.utils.get(inter.guild.members, id = int(profile_user[inter.author.id]))

                with open('clan_sweetness.json','r', encoding='utf-8') as f: 
                    clan = json.load(f)

                if not str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id) in clan[str(inter.guild.id)]:
                    clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                if –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == inter.author or –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å == None:
                    if clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                        embed = disnake.Embed(description = f'{inter.author.mention}, —É **–í–∞—Å** –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!', color = disnake.Color.red())
                        embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å", icon_url = inter.guild.icon.url)
                        embed.set_thumbnail(url = inter.author.display_avatar.url)
                        return await inter.send(embed = embed, ephemeral = True)

                if clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                    embed = disnake.Embed(description = f'{inter.author.mention}, —É **{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.mention}** –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!', color = disnake.Color.red())
                    embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å", icon_url = inter.guild.icon.url)
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.send(embed = embed, ephemeral = True)

                clanxd = clan[str(inter.guild.id)][str(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.id)]
                if database.clan_online.count_documents({"_id": str(clanxd)}) == 0:
                    database.clan_online.insert_one({"_id": str(clanxd), "clan_online": 0})

                if database.clan_rating.count_documents({"_id": str(clanxd)}) == 0:
                    database.clan_rating.insert_one({"_id": str(clanxd), "rating": 0})

                clan_online = database.clan_online.find_one({'_id': str(clanxd)})['clan_online']

                clan_points = clan_online // 3600
                clan_level = clan_points // 20
                clan_level += 1

                clan[str(inter.guild.id)][clanxd]['Points'] = int(clan_points)
                clan[str(inter.guild.id)][clanxd]['Level'] = int(clan_level)
                with open('clan_sweetness.json','w') as f: 
                    json.dump(clan,f)

                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                clan_name = f"{role.name}"
                clan_description = clan[str(inter.guild.id)][clanxd]['Description']
                clan_owner = f"<@{clan[str(inter.guild.id)][clanxd]['Owner']}>"
                clan_admins = ""
                if clan[str(inter.guild.id)][str(clanxd)]['Admin'] == []:
                    clan_admins += "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
                if not clan[str(inter.guild.id)][str(clanxd)]['Admin'] == []:
                    clan_admins += f'{" ".join([inter.guild.get_member(i).mention for i in clan[str(inter.guild.id)][str(clanxd)]["Admin"]])}'
                clan_role = f"<@&{clanxd}>"
                clan_id = clanxd
                clan_date = f"{clan[str(inter.guild.id)][clanxd]['Time']}"
                clan_points = f"{clan[str(inter.guild.id)][clanxd]['Points']}"

                clan_level = f"{clan[str(inter.guild.id)][clanxd]['Level']}"
                clan_limit = f"{clan[str(inter.guild.id)][clanxd]['Limit']}"
                clan_balance = f"{clan[str(inter.guild.id)][clanxd]['Balance']}"
                clan_rating = database.clan_rating.find_one({'_id': str(clanxd)})['rating']
                clan_alliance = database.clan_alliance.find_one({'_id': str(clanxd)})['alliance']
                if not clan_alliance == "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç":
                    clan_alliance = f"<@&{clan_alliance}>"

                role_take = disnake.utils.get(inter.guild.roles, id = int(clanxd))

                embed = disnake.Embed(
                    description=f'# <:clan:1096087543398801601> –ö–ª–∞–Ω {clan_name}\n\n<:msg:1096090258107539486> **–û–ø–∏—Å–∞–Ω–∏–µ**\n```{clan_description}``` \
                        \n<:owner:1096087506879008868> **–í–ª–∞–¥–µ–ª–µ—Ü**: {clan_owner}\n<:admin_clan:1096090695888031794> **–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏**: {clan_admins} \
                        \n<:clan_role:1096087544715825184> **–†–æ–ª—å:** {clan_role}\n<:calendar:1096087540261462127> **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {clan_date} \
                        \n<:point:1096087512834912398> **–û—á–∫–∏ –∫–ª–∞–Ω–∞:** {clan_points}\n<:level:1096087492542857346> **–£—Ä–æ–≤–µ–Ω—å –∫–ª–∞–Ω–∞:** {clan_level} \
                        \n<:top:1096087524985810964> **–†–µ–π—Ç–∏–Ω–≥ –∫–ª–∞–Ω–∞:** {clan_rating} \
                        \n<:alliance:1139674067067211919> **–ê–ª—å—è–Ω—Å:** {clan_alliance} \
                        \n<:id:1096087488625377421> **ID:** {clan_id}', color=3092790)
                embed.add_field(name='<:staff:1096087520023945417> –£—á–∞—Å—Ç–Ω–∏–∫–∏', value=f'```{len(role_take.members)}/{clan_limit}```')
                embed.add_field(name = '<:coin1:1096094598507532479> <:to4kaa:981274474009743430> –ë–∞–ª–∞–Ω—Å', value = f'```{clan_balance}```')
                embed.add_field(name = '<:microphone:1140294304556908695> <:to4kaa:981274474009743430> –ì–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω', value = f'```üïì {clan_online // hour}—á. {(clan_online - (clan_online // hour * hour)) // 60}–º.```')

                clan_url = f"{clan[str(inter.guild.id)][clanxd]['Thumbnail']}"
                if not clan_url == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                    embed.set_thumbnail(url = clan_url)
                else:
                    embed.set_thumbnail(None)

                await inter.response.edit_message(attachments = None, embed = embed, view = ProfileClanView())

    @commands.Cog.listener()
    async def on_modal_submit(self, inter):
        custom_id = inter.custom_id
        with open('clan_sweetness.json','r', encoding='utf-8') as f: 
            clan = json.load(f)
            
        if custom_id[-4:] == "rank":
            for key, value in inter.text_values.items():
                value = value

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_footer(text = f'–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}', icon_url = inter.author.display_avatar.url)

            if custom_id == "clan_add_rank":
                rang = currentRankChoice[str(inter.author.id)]

                database.clan.update_one({'_id': str(value)}, {'$set': {'rank': rang}}, upsert = True)
                embed.description = f"### > {inter.author.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ —Ä–∞–Ω–≥ `{rang}` <@{value}>"
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanBack())

            if custom_id == "clan_remove_rank":
                rang = currentRankChoice[str(inter.author.id)]

                database.clan.update_one({'_id': str(value)}, {'$set': {'rank': "–£—á–∞—Å—Ç–Ω–∏–∫"}}, upsert = True)
                embed.description = f"### > {inter.author.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ —Ä–∞–Ω–≥ `{rang}` <@{value}>"
                return await inter.response.edit_message(content = inter.author.mention, embed = embed, view = ClanBack())

            if custom_id == "clan_limit_rank":
                rank = currentRankChoice[str(inter.author.id)]
                database.clan.update_one({'_id': str(rank)}, {'$set': {'limit': value}}, upsert = True)
                embed.description = f"> ### {inter.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ª–∏–º–∏—Ç **{value}** —Ä–∞–Ω–≥—É {rank}"

            if custom_id == "clan_create_rank":
                database.clan.update_one({'_id': str(value)}, {'$set': {'limit': 5}}, upsert = True)
                database.clan.update_one({'_id': str(value)}, {'$set': {'admin': '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}}, upsert = True)
                database.clan.update_one({'_id': str(clanxd)}, {'$push': {'rank': value}}, upsert = True)
                embed.description = f"> ### {inter.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ —Ä–∞–Ω–≥ {value}"
            if custom_id == "clan_delete_rank":
                database.clan.update_one({'_id': str(clanxd)}, {'$pull': {'rank': value}}, upsert = True)
                database.clan.delete_one({'_id': str(value)})
                embed.description = f"> ### {inter.author.mention}, –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ä–∞–Ω–≥ {value}"

            return await inter.response.edit_message(embed = embed, view = ClanBack())

        if custom_id == "change_color":
            for key, value in inter.text_values.items(): 
                value = value

            role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
            role = disnake.utils.get(inter.guild.roles, id = int(role_id))
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= 500
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)

            await role.edit(color = disnake.Color(hex_to_rgb(str(value))))

            embed = disnake.Embed( description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ **—Ü–≤–µ—Ç –∫–ª–∞–Ω–∞!**', color = 3092790)
            embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed, view = ClanBack())
        if custom_id == "limit_clan":
            for key, value in inter.text_values.items(): 
                value = value

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan_balance = f"{clan[str(inter.guild.id)][clanxd]['Balance']}"
            need_balance = int(value) * 250

            if need_balance > int(clan_balance):
                embed = disnake.Embed(description = f'{inter.author.mention}, –£ **–í–∞—à–µ–≥–æ** –∫–ª–∞–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!**', color = 3092790)
                embed.set_author(name = "–ö–ª–∞–Ω", icon_url = inter.guild.icon.url)
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                return await inter.response.edit_message(embed = embed, view = ClanBack())
            
            clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Limit'] += int(value)
            clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= need_balance
            with open('clan_sweetness.json','w') as f: 
                json.dump(clan,f)

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ **{value} —Å–ª–æ—Ç–æ–≤** –≤ –∫–ª–∞–Ω', color = 3092790)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            embed.set_author(name = f"–ö–ª–∞–Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω {inter.guild.name}", icon_url = inter.guild.icon.url)
            return await inter.response.edit_message(embed = embed, view = ClanBack())

        if custom_id == 'change_name_clan':
            for key, value in inter.text_values.items(): 
                value = value
            role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
            role = disnake.utils.get(inter.guild.roles, id = int(role_id))
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= 1000
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)
            await role.edit(name = value)
            MainCategory = disnake.utils.get(inter.guild.categories, id = int(database.clan.find_one({'_id': str(clanxd)})['category']))
            await MainCategory.edit(name = value)
            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ **–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞!**', color = 3092790)
            embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed, view = ClanBack())
        
        if custom_id == 'clan_request':
            id = 0
            for key, value in inter.text_values.items(): 
                if id == 0:
                    trebovaniya = value
                if id == 1:
                    trebovaniya1 = value
                if id == 2:
                    trebovaniya2 = value
                if id == 3:
                    trebovaniya3 = value
                if id == 4:
                    trebovaniya4 = value
                id += 1

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]

            database.clan.update_one({'_id': str(clanxd)}, {'$set': {'trebovaniya': []}}, upsert = True)
            database.clan.update_one({'_id': str(clanxd)}, {'$push': {'trebovaniya': trebovaniya}}, upsert = True)
            database.clan.update_one({'_id': str(clanxd)}, {'$push': {'trebovaniya': trebovaniya1}}, upsert = True)
            database.clan.update_one({'_id': str(clanxd)}, {'$push': {'trebovaniya': trebovaniya2}}, upsert = True)
            database.clan.update_one({'_id': str(clanxd)}, {'$push': {'trebovaniya': trebovaniya3}}, upsert = True)
            database.clan.update_one({'_id': str(clanxd)}, {'$push': {'trebovaniya': trebovaniya4}}, upsert = True)

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è', color = 3092790)
            embed.set_author(name = "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –≤ –∫–ª–∞–Ω:", icon_url = inter.guild.icon.url)
            embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
            await inter.response.edit_message(embed = embed, view = ClanBack())

        if custom_id == 'clan_join':
            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)

            for key, value in inter.text_values.items(): 
                embed.add_field(name = key.capitalize(), value=value, inline = False)
            
            clanxd = database.clan.find_one({'_id': str(inter.message.id)})['clan']
            channel = database.clan.find_one({'_id': str(clanxd)})['channel_2']

            embed.description = f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –∫–ª–∞–Ω –æ—Ç: {inter.author.mention}"
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            msg = await self.bot.get_channel(channel).send(embed = embed, view = ClanJoin())
            database.clan.update_one({'_id': str(msg.id)}, {'$set': {'clan': inter.author.id}}, upsert = True)

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É** –≤ –∫–ª–∞–Ω <@&{clanxd}>!', color = 3092790)
            embed.set_author(name = "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –∫–ª–∞–Ω", icon_url = inter.guild.icon.url)
            embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
            await inter.send(ephemeral = True, embed = embed)

        if custom_id == 'clan_owner':
            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))
            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            clan[str(inter.guild.id)][str(clanxd)]['Owner'] = member.id

            await inter.author.remove_roles(disnake.utils.get(inter.guild.roles, id = 961296301901885531))
            await member.add_roles(disnake.utils.get(inter.guild.roles, id = 961296301901885531))

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ **–≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–ª–∞–Ω–∞** {member.mention}!', color = 3092790)
            embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
            embed.set_author(name = "–ü–µ—Ä–µ–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–ª–∞–Ω–∞", icon_url = inter.guild.icon.url)
            await inter.response.edit_message(embed = embed)

            with open('clan_sweetness.json','w') as f: 
                json.dump(clan,f)

        if custom_id[-7:] == 'channel':
            for key, value in inter.text_values.items():
                name = value

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
            role = disnake.utils.get(inter.guild.roles, id = int(role_id))

            if custom_id == 'create_voice_channel':
                MainCategory = disnake.utils.get(inter.guild.categories, id = int(database.clan.find_one({'_id': str(clanxd)})['category']))
                channel_1 = await inter.guild.create_voice_channel(name = f"üí´„Éª{name}", category = MainCategory)
                await channel_1.set_permissions(role, view_channel = True, connect = True)
                await channel_1.set_permissions(inter.guild.default_role, view_channel = True, connect = False)
                await channel_1.set_permissions(inter.guild.get_role(1001186408486141974), view_channel = False, connect = False) # –ù–µ –¥–æ–ø—É—Å–∫
                await channel_1.set_permissions(inter.guild.get_role(1001140364226347108), view_channel = False, connect = False) # –ê–Ω–≤–µ—Ä–∏—Ñ–∏
                for admin in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    await channel_1.set_permissions(disnake.utils.get(inter.guild.members, id = int(admin)), manage_channels = True)
                clan_leader = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner']
                await channel_1.set_permissions(disnake.utils.get(inter.guild.members, id = int(clan_leader)), manage_channels = True)
                await channel_1.set_permissions(inter.author, manage_channels = True)
                await channel_1.set_permissions(disnake.utils.get(inter.guild.roles, id = 1025807036799275141), move_members = True, deafen_members = True, mute_members = True, view_channel = True, connect = True)

                database.clan.update_one({'_id': str(clanxd)}, {'$set': {'voice_channels': []}}, upsert = True)
                database.clan.update_one({'_id': str(clanxd)}, {'$push': {'voice_channels': int(channel_1.id)}}, upsert = True)

                clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= 5000
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

            if custom_id == 'create_text_channel':
                MainCategory = disnake.utils.get(inter.guild.categories, id = int(database.clan.find_one({'_id': str(clanxd)})['category']))
                channel_1 = await inter.guild.create_text_channel(name = f"üí¨„Éª{name}", category = MainCategory)
                await channel_1.set_permissions(inter.guild.default_role, send_messages = False, view_channel = False)
                await channel_1.set_permissions(role, send_messages=True, view_channel = True)

                clan[str(inter.guild.id)][clan[str(inter.guild.id)][str(inter.author.id)]]['Balance'] -= 2500
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–¥–æ–±–∞–≤–∏–ª–∏ –∫–∞–Ω–∞–ª** –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º **{name}**', color = 3092790)
            embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)
            return await inter.response.edit_message(embed = embed)

        if custom_id == 'clan_avatar':
            for key, value in inter.text_values.items():
                site = value

            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Thumbnail'] = site
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫—É –∫–ª–∞–Ω–∞!', color = disnake.Color.green())
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed)
            else: 
                embed = disnake.Embed(color = 3092790)
                embed.set_author(name = f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º {inter.guild.name}", icon_url = inter.guild.icon.url)
                embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ —ç—Ç–∏–º –∫–ª–∞–Ω–æ–º!"
                await inter.send(embed = embed)
                
            with open('clan_sweetness.json','w') as f: 
                json.dump(clan,f)
        
        if custom_id == 'clan_desc':
            for key, value in inter.text_values.items():
                –æ–ø–∏—Å–∞–Ω–∏–µ = value
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Description'] = –æ–ø–∏—Å–∞–Ω–∏–µ
                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏/–∏–∑–º–µ–Ω–∏–ª–∏ **–æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞**!', color = 3092790)
                embed.set_author(name = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º", icon_url = inter.guild.icon.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.send(embed = embed)
            else:
                embed = disnake.Embed(title = f'{inter.author.mention}, **–í—ã** –Ω–µ –≤–ª–∞–¥–µ–µ—Ç–µ —ç—Ç–∏–º –∫–ª–∞–Ω–æ–º!', color = disnake.Color.red())
                embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                await inter.send(embed = embed)
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)

        if custom_id[-3:] == 'ban':
            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            if custom_id == 'vidat_ban':
                if not str(member.id) in clan[str(inter.guild.id)]:
                    clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                if clan[str(inter.guild.id)][str(member.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                    embed = disnake.Embed(description = f'{inter.author.mention}, –£ **{member.id}** –Ω–µ—Ç—É **–∫–ª–∞–Ω–∞**!', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]

                if member == inter.author:
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ —É —Å–µ–±—è **–∑–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø** –≤ –∫–ª–∞–Ω', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)

                if member.id in clan[str(inter.guild.id)][str(clanxd)]['BanList']:
                    embed = disnake.Embed(description = f'{inter.author.mention}, **–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å** –∏ —Ç–∞–∫ **–Ω–∞—Ö–æ–¥–∏—Ç—Å—è** –≤ —á—ë—Ä–Ω–æ–º **—Å–ø–∏—Å–∫–µ –∫–ª–∞–Ω–∞**', color = disnake.Color.red())
                    embed.set_thumbnail(url = inter.author.display_avatar.url)
                    return await inter.response.edit_message(embed = embed)
                
                clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                await member.remove_roles(role)

                clan[str(inter.guild.id)][str(clanxd)]['ClanMembers'] -= 1
                clan[str(inter.guild.id)][str(clanxd)]['BanList'].append(member.id)
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))
                await member.remove_roles(role)

                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ —É {member.mention} –¥–æ—Å—Ç—É–ø –≤ –∫–ª–∞–Ω', color = disnake.Color.green())
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed)
            if custom_id == 'remove_ban':
                if not str(member.id) in clan[str(inter.guild.id)]:
                    clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                clan[str(inter.guild.id)][str(clanxd)]['BanList'].remove(member.id)
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ {member.mention} –¥–æ—Å—Ç—É–ø –≤ –∫–ª–∞–Ω', color = disnake.Color.green())
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed)

        if custom_id[-5:] == 'admin':
            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            if custom_id == 'vidat_admin':
                embed = disnake.Embed(color = 3092790, description = f"{inter.author.mention}, **–£** {member.mention} –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!")
                embed.set_thumbnail(url = inter.author.display_avatar.url)
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                embed.set_author(name = f"–í—ã–¥–∞—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è", icon_url = inter.guild.icon.url)

                if int(member.id) == int(inter.author.id):
                    embed.description = f"{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å —Å–µ–±–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è!"
                    return await inter.send(embed = embed)

                if not str(member.id) in clan[str(inter.guild.id)]:
                    embed.description = f"{inter.author.mention}, **–£** {member.mention} –Ω–µ—Ç—É –∫–ª–∞–Ω–∞!"
                    return await inter.send(embed = embed)

                if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç':
                
                    clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'] = []
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                cluster.sweetness.clan.update_one({'_id': str(member.id)}, {'$set': {'rank': f'–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å'}}, upsert = True)
                        
                clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'].append(member.id)
                with open('clan_sweetness.json','w') as f:
                    json.dump(clan,f)

                embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–Ω–∞–∑–Ω–∞—á–∏–ª–∏** –Ω–∞ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è {member.mention}'
                await inter.response.edit_message(embed = embed)

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))

                await member.add_roles(disnake.utils.get(inter.guild.roles, id = 961299056968237127))

                embed = disnake.Embed(description = f'{inter.author.mention} –ù–∞–∑–Ω–∞—á–∏–ª –≤–∞—Å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –∫–ª–∞–Ω–∞ **{role.name}**', color = 3092790)
                embed.set_author(name = f"–ö–ª–∞–Ω—ã {inter.guild.name}", icon_url = inter.guild.icon.url)
                await member.send(embed = embed)

            if custom_id == 'remove_admin':
                clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'].remove(member.id)
                with open('clan_sweetness.json','w') as f: 
                    json.dump(clan,f)

                cluster.sweetness.clan.update_one({'_id': str(member.id)}, {'$set': {'rank': f"–£—á–∞—Å—Ç–Ω–∏–∫"}}, upsert = True)

                embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {member.mention} —Å **–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è**', color = disnake.Color.green())
                embed.set_footer(text = f"–í—ã–ø–æ–ª–Ω–∏–ª(–∞) {inter.author}",icon_url = inter.author.display_avatar.url)
                await inter.response.edit_message(embed = embed)

                clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
                role = disnake.utils.get(inter.guild.roles, id = int(clan[str(inter.guild.id)][str(clanxd)]['Role']))

                await member.remove_roles(disnake.utils.get(inter.guild.roles, id = 961299056968237127))

                embed = disnake.Embed(description = f'{inter.author.mention} –°–Ω—è–ª —Å –≤–∞—Å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞ **{role.name}**', color = disnake.Color.red())
                return await member.send(embed = embed)

        if custom_id == 'kick_clan':
            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            embed = disnake.Embed(color = 3092790)
            embed.set_author(name = "–í—ã–≥–Ω–∞—Ç—å –∏–∑ –∫–ª–∞–Ω–∞", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)

            clan[str(inter.guild.id)][str(value)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)

            if clan[str(inter.guild.id)][str(inter.author.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                embed.description = f'{inter.author.mention}, –£ **–í–∞—Å** –Ω–µ—Ç—É **–∫–ª–∞–Ω–∞**!'
                return await inter.response.edit_message(embed = embed)
            
            if member == inter.author:
                embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å **—Å–µ–±—è –∏–∑ –∫–ª–∞–Ω–∞**'
                return await inter.response.edit_message(embed = embed)
            
            if str(member.id) == str(clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner']):
                embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å **–∫–ª–∞–Ω –ª–∏–¥–µ—Ä–∞**'
                return await inter.response.edit_message(embed = embed)
                
            if clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Owner'] == inter.author.id:
                clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

                role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                role = disnake.utils.get(inter.guild.roles, id = int(role_id))
                await member.remove_roles(role)

                embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –≤—ã–≥–Ω–∞–ª–∏ <@{value}> –∏–∑ –∫–ª–∞–Ω–∞ <@&{clan[str(inter.guild.id)][str(inter.author.id)]}>'
                await inter.response.edit_message(embed = embed, view = ClanBack())

                if member.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    await member.remove_roles(disnake.utils.get(inter.guild.roles, id = 961299056968237127))
                    clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin'].remove(member.id)
                    with open('clan_sweetness.json','w') as f:
                        json.dump(clan,f)

                return await member.remove_roles(disnake.utils.get(inter.guild.roles, id = 961529522082185226))
            
            if inter.author.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                if member.id in clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Admin']:
                    embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è –∫–ª–∞–Ω–∞, —è–≤–ª—è—è—Å—å **–∑–∞–º–µ—Å—Ç–∏–ª–µ–º –∫–ª–∞–Ω–∞**'
                    return await inter.response.edit_message(embed = embed)
                
                clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'

                role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                role = disnake.utils.get(inter.guild.roles, id = int(role_id))
                await member.remove_roles(role)

                embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ –≤—ã–≥–Ω–∞–ª–∏ <@{value}> –∏–∑ –∫–ª–∞–Ω–∞ <@&{clan[str(inter.guild.id)][str(inter.author.id)]}>'
                await inter.response.edit_message(embed = embed, view = ClanBack())

                return await member.remove_roles(disnake.utils.get(inter.guild.roles, id = 961529522082185226))





        if custom_id == "vidat_clan":
            for key, value in inter.text_values.items():
                member = disnake.utils.get(inter.guild.members, id = int(value))

            embed = disnake.Embed(description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ **–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–µ–±—è** –≤ –∫–ª–∞–Ω!', color = 3092790)
            embed.set_author(name = f"–ö–ª–∞–Ω | {inter.guild.name}", icon_url = inter.guild.icon.url)
            embed.set_thumbnail(url = inter.author.display_avatar.url)

            try:
                if not str(member.id) in clan[str(inter.guild.id)]:
                    clan[str(inter.guild.id)][str(member.id)] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
                    with open('clan_sweetness.json', 'w') as f:
                        json.dump(clan,f)
            except:
                embed.description = f'{inter.author.mention}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ª–∏–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω –∞–π–¥–∏'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            if member == inter.author: 
                embed.description = f'{inter.author.mention}, **–í—ã** –Ω–µ –º–æ–∂–µ—Ç–µ **–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–µ–±—è** –≤ –∫–ª–∞–Ω!'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            if clan[str(inter.guild.id)][str(clanxd)]['Limit'] == clan[str(inter.guild.id)][str(clanxd)]['ClanMembers']:
                embed.description = f'{inter.author.mention}, **–í–∞—à** –∫–ª–∞–Ω –¥–æ—Å—Ç–∏–≥ **–ª–∏–º–∏—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**!'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            if int(member.id) in clan[str(inter.guild.id)][str(clanxd)]['BanList']: 
                embed.description = f'{inter.author.mention}, **–≠—Ç–æ—Ç** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ –∫–ª–∞–Ω–∞.'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            if clan[str(inter.guild.id)][str(member.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':
                clan_owner = inter.author
                role_id = clan[str(inter.guild.id)][str(clan[str(inter.guild.id)][str(inter.author.id)])]['Role']
                role = disnake.utils.get(inter.guild.roles, id = int(role_id))
                name = role.name
                embed.description = f'{inter.author.mention} **–ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç** –≤–∞–º –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω {name}, **–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏** –Ω–∏–∂–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞'
                bot = self.bot
                try:
                    await member.send(embed = embed, view = ClanInvite(clan_owner, bot, name))
                except:
                    embed.description = f'{inter.author.mention}, **–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ** –æ—Ç–ø—Ä–∞–≤–∏—Ç—å **—Å–æ–æ–±—â–µ–Ω–∏–µ** {member.mention}'
                    return await inter.response.edit_message(embed = embed, view = ClanBack())

                embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ –∫–ª–∞–Ω** {member.mention}'
                await inter.response.edit_message(embed = embed, view = ClanBack())
            else: 
                embed.description = f'–£ {member.mention} —É–∂–µ –µ—Å—Ç—å **–∫–ª–∞–Ω**!'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

        if custom_id == 'pay_clan':
            for key, value in inter.text_values.items():
                count = value

            embed = disnake.Embed(description=f'{inter.author.mention}, **–ù–µ–ª—å–∑—è** —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É **–Ω–∏–∂–µ –Ω—É–ª—è**!', color=3092790)
            embed.set_thumbnail(url=inter.author.display_avatar.url)
            embed.set_author(name=f"–î–µ–ø–æ–∑–∏—Ç | {inter.guild.name}", icon_url=inter.guild.icon.url)
            
            match int(count):
                case x if x < 0:
                    embed.description=f'{inter.author.mention}, **–ù–µ–ª—å–∑—è** —É–∫–∞–∑–∞—Ç—å —Å—É–º–º—É **–Ω–∏–∂–µ –Ω—É–ª—è**!'
                    return await inter.response.edit_message(embed=embed, view=ClanBack())
                case 0:
                    embed.description=f'{inter.author.mention}, **–ù–µ–ª—å–∑—è** —Ä–∞–≤–Ω–æ–π **–Ω—É–ª—é**!'
                    return await inter.response.edit_message(embed=embed, view=ClanBack())
                case x if x > int(database.economy.find_one({"_id": str(inter.author.id)})["balance"]):
                    embed.description=f'{inter.author.mention}, —É **–í–∞—Å** –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ <:coin1:1096094598507532479>'
                    return await inter.response.edit_message(embed=embed, view=ClanBack())

            if clan[str(inter.guild.id)][str(inter.author.id)] == '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç': 
                embed.description = f'{inter.author.mention}, —É **–í–∞—Å** –Ω–µ—Ç—É **–∫–ª–∞–Ω–∞**!'
                return await inter.response.edit_message(embed = embed, view = ClanBack())

            clanxd = clan[str(inter.guild.id)][str(inter.author.id)]
            if not str(inter.author.id) in clan[str(inter.guild.id)][str(clanxd)]['Deposit']:
                clan[str(inter.guild.id)][str(clanxd)]['Deposit'][str(inter.author.id)] = {}
                clan[str(inter.guild.id)][str(clanxd)]['Deposit'][str(inter.author.id)] = 0
                with open('clan_sweetness.json','w') as f: 
                    json.dump(clan,f)

            database.economy.update_one({"_id": str(inter.author.id)}, {"$inc": {"balance": -int(count)}})
            clan[str(inter.guild.id)][str(clanxd)]['Deposit'][str(inter.author.id)] += int(count)
            clan[str(inter.guild.id)][str(clanxd)]['Balance'] += int(count)
            with open('clan_sweetness.json','w') as f:
                json.dump(clan,f)

            embed.description = f'{inter.author.mention}, **–í—ã** —É—Å–ø–µ—à–Ω–æ **–≤–Ω–µ—Å–ª–∏** {count} <:coin1:1096094598507532479> –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –∫–ª–∞–Ω–∞!'
            return await inter.response.edit_message(embed = embed, view = ClanBack())
def setup(bot):
    bot.add_cog(ClanProfileCog(bot))